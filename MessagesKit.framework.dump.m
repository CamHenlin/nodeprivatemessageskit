//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /System/Library/PrivateFrameworks/MessagesKit.framework/Versions/A/MessagesKit
// UUID: 95927461-D647-323F-8F76-D46CB46272DF
//
//                           Arch: x86_64
//                Current version: 800.0.0
//          Compatibility version: 1.0.0
//                 Source version: 4719.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BuddyPictureServiceProtocol <NSObject>
- (void)setBuddyPicture:(NSData *)arg1 completionBlock:(void (^)(BOOL))arg2;
@end

@protocol MapRenderingServiceProtocol <NSObject>
- (void)renderMapFile:(NSURL *)arg1 completionBlock:(void (^)(NSData *, NSURL *))arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol SOAAccountInfoReceiverProtocol <NSObject, SOAReceiverProtocol>
- (void)legacyScreenSharingIDsForABPersonID:(NSString *)arg1 withCompletionBlock:(void (^)(NSArray *))arg2;
- (void)legacyAudioIDsForABPersonID:(NSString *)arg1 withCompletionBlock:(void (^)(NSArray *))arg2;
- (void)legacyVideoIDsForABPersonID:(NSString *)arg1 withCompletionBlock:(void (^)(NSArray *))arg2;
- (void)faceTimeIDsForABPersonID:(NSString *)arg1 withCompletionBlock:(void (^)(NSArray *))arg2;
- (void)addValidMessagesID:(NSString *)arg1;
- (void)addInvalidMessagesID:(NSString *)arg1;
- (void)addValidFaceTimeID:(NSString *)arg1;
- (void)addInvalidFaceTimeID:(NSString *)arg1;
@end

@protocol SOAAccountStatusReceiverProtocol <NSObject, SOAReceiverProtocol>
- (void)screenSharingShouldEnd;
- (void)setAccountStatus:(NSNumber *)arg1 message:(NSString *)arg2;
@end

@protocol SOAAlertsReceiverProtocol <NSObject, SOAReceiverProtocol>
- (void)copySampleScriptsFrom:(NSString *)arg1 to:(NSString *)arg2 withCompletionBlock:(void (^)(BOOL))arg3;
@end

@protocol SOABuddyReceiverProtocol <NSObject, SOAReceiverProtocol>
@end

@protocol SOAMessageReceiverProtocol <NSObject, SOAReceiverProtocol>
- (void)sendMessageText:(NSString *)arg1 toRecipients:(NSArray *)arg2 onService:(NSString *)arg3;
- (void)sendMessageText:(NSString *)arg1 toRecipients:(NSArray *)arg2 onService:(NSString *)arg3 withCompletionBlock:(void (^)(BOOL))arg4;
@end

@protocol SOAPlugInControllerProtocol <NSObject>
- (void)reconnect;
- (oneway void)connectPlugIn:(NSString *)arg1 withConnectionHandler:(void (^)(NSXPCListenerEndpoint *))arg2;
@end

@protocol SOAReceiverProtocol <NSObject>
- (void)setupComplete;
- (void)removeDefaultsObjectForKey:(id <NSCopying>)arg1 inCollection:(NSString *)arg2 completionBlock:(void (^)(BOOL))arg3;
- (void)setDefaultsObject:(id)arg1 forKey:(id <NSCopying>)arg2 inCollection:(NSString *)arg3 completionBlock:(void (^)(BOOL))arg4;
- (void)removeDefaultsObject:(id)arg1 fromCollection:(NSString *)arg2 completionBlock:(void (^)(BOOL))arg3;
- (void)addDefaultsObject:(id)arg1 toCollection:(NSString *)arg2 completionBlock:(void (^)(BOOL))arg3;
- (void)setDefaultsObject:(id)arg1 forKey:(NSString *)arg2 completionBlock:(void (^)(BOOL))arg3;
@end

@protocol SOAUnreadCountReceiverProtocol <NSObject, SOAReceiverProtocol>
- (void)setupDelegate:(BOOL)arg1;
@end

@protocol SOAccountInfoHelperReceiverProtocol <NSObject, SOHelperReceiverProtocol>
- (void)updatedMessagesStatusID:(NSString *)arg1;
- (void)updatedFaceTimeStatusID:(NSString *)arg1;
@end

@protocol SOAlertsHelperReceiverProtocol <NSObject, SOHelperReceiverProtocol>
- (void)performActionScriptForChatGUID:(NSString *)arg1 handleID:(NSString *)arg2 messageText:(NSString *)arg3 accountGUID:(NSString *)arg4 event:(int)arg5;
@end

@protocol SOBuddyHelperReceiverProtocol <NSObject, SOHelperReceiverProtocol>
@end

@protocol SOHelperReceiverProtocol <NSObject>
- (void)suspendConnectionWithCompletionBlock:(void (^)(void))arg1;
- (void)updateDefaults:(NSDictionary *)arg1;
- (void)updateDefaultsObject:(id)arg1 forKey:(NSString *)arg2;
- (void)updateProperties:(NSDictionary *)arg1;
- (void)setValue:(id)arg1 forControllerKey:(NSString *)arg2;
- (void)postNotification:(NSString *)arg1 userInfo:(NSDictionary *)arg2;
@end

@protocol SOUnreadCountHelperReceiverProtocol <SOHelperReceiverProtocol>
- (void)markChatGUIDAsRead:(NSString *)arg1;
- (void)processUnreadCountForChatGUID:(NSString *)arg1 withBlock:(void (^)(BOOL))arg2;
@end

@protocol TranscriptRenderingServiceProtocol <NSObject>
- (void)renderCSSHTMLForTranscriptFile:(NSURL *)arg1 completionBlock:(void (^)(BOOL, NSString *, NSDictionary *))arg2;
- (void)finish;
@end

@interface SOHelperCenter : NSObject
{
    NSXPCConnection *_connection;
    NSTimer *_reconnectionTimer;
    NSMapTable *_nameToWeakControllerMap;
}

+ (void)lastPlugInUnloaded;
+ (id)sharedInstance;
@property(retain) NSMapTable *nameToWeakControllerMap; // @synthesize nameToWeakControllerMap=_nameToWeakControllerMap;
@property(retain) NSTimer *reconnectionTimer; // @synthesize reconnectionTimer=_reconnectionTimer;
@property(retain) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)dealloc;
- (void)unloadPlugIn:(id)arg1;
- (void)loadPlugIn:(id)arg1 forController:(id)arg2;
- (void)_initializeConnection;
- (void)_reconnect;
- (void)_reconnectNow:(id)arg1;
- (void)_accountConfigurationChanged:(id)arg1;
- (id)init;

@end

@interface SOHelper : NSObject <SOHelperReceiverProtocol>
{
    BOOL _isSuspended;
    BOOL _defaultsInitalSyncComplete;
    NSXPCConnection *_connection;
    NSString *_name;
    SOHelperReceiver *_receiver;
    NSMutableArray *_blocksToRunOnConnection;
    NSMutableArray *_blocksToRunOnFirstDefaultsSync;
    NSMutableDictionary *_keyToBlocks;
    NSObject<OS_dispatch_queue> *_helperDispatchQueue;
    NSMutableDictionary *_controllerProperties;
    NSMutableDictionary *_controllerDefaults;
}

+ (id)bundleName;
+ (id)remoteReceiverProtocol;
+ (id)receiverProtocol;
+ (id)helperDispatchQueue;
+ (void)initialize;
@property(retain) NSMutableDictionary *controllerDefaults; // @synthesize controllerDefaults=_controllerDefaults;
@property(retain) NSMutableDictionary *controllerProperties; // @synthesize controllerProperties=_controllerProperties;
@property(retain) NSObject<OS_dispatch_queue> *helperDispatchQueue; // @synthesize helperDispatchQueue=_helperDispatchQueue;
@property(retain) NSMutableDictionary *keyToBlocks; // @synthesize keyToBlocks=_keyToBlocks;
@property(retain) NSMutableArray *blocksToRunOnFirstDefaultsSync; // @synthesize blocksToRunOnFirstDefaultsSync=_blocksToRunOnFirstDefaultsSync;
@property(retain) NSMutableArray *blocksToRunOnConnection; // @synthesize blocksToRunOnConnection=_blocksToRunOnConnection;
@property BOOL defaultsInitalSyncComplete; // @synthesize defaultsInitalSyncComplete=_defaultsInitalSyncComplete;
@property BOOL isSuspended; // @synthesize isSuspended=_isSuspended;
@property(retain) SOHelperReceiver *receiver; // @synthesize receiver=_receiver;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)suspendConnectionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)runBlockWhenDefaultsSynced:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)runBlockOnConnection:(CDUnknownBlockType)arg1;
- (void)runBlock:(CDUnknownBlockType)arg1 onKeyChange:(id)arg2;
- (BOOL)blockUntilKeyValueKnown:(id)arg1;
- (id)_helperDispatchQueue;
- (id)_controllerProperties;
- (void)_setControllerProperty:(id)arg1 forKey:(id)arg2;
- (id)controllerPropertyForKey:(id)arg1;
- (id)copyControllerPropertyForKey:(id)arg1;
- (void)updateDefaults:(id)arg1;
- (void)updateDefaultsObject:(id)arg1 forKey:(id)arg2;
- (void)setDefaultsObject:(id)arg1 forKey:(id)arg2;
- (id)defaultsObjectForKey:(id)arg1 blocking:(BOOL)arg2;
- (id)defaultsObjectForKey:(id)arg1;
- (void)removeDefaultsObject:(id)arg1 fromCollection:(id)arg2;
- (void)addDefaultsObject:(id)arg1 toCollection:(id)arg2;
- (void)updateProperties:(id)arg1;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;
- (void)postNotification:(id)arg1 userInfo:(id)arg2;
- (void)setupConnection:(id)arg1;
- (void)_setupInterfaceForConnection:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SOHelperReceiver : NSObject <SOHelperReceiverProtocol>
{
    SOHelper *_controller;
    NSMutableDictionary *_controllerProperties;
}

@property(retain, nonatomic) NSMutableDictionary *controllerProperties; // @synthesize controllerProperties=_controllerProperties;
@property __weak SOHelper *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (void)suspendConnectionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)updateDefaults:(id)arg1;
- (void)updateDefaultsObject:(id)arg1 forKey:(id)arg2;
- (void)updateProperties:(id)arg1;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;
- (void)postNotification:(id)arg1 userInfo:(id)arg2;
- (id)initWithController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BuddyPictureHelper : NSObject
{
    NSXPCConnection *_connection;
}

- (void).cxx_destruct;
- (void)invalidate;
- (void)setBuddyPicture:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface SOUnreadCountHelper : SOHelper <SOUnreadCountHelperReceiverProtocol>
{
    unsigned long long _unreadCount;
    id <SOUnreadCountHelperDelegate> _unreadCountDelegate;
}

+ (id)bundleName;
+ (id)weakSharedInstance;
+ (id)remoteReceiverProtocol;
+ (id)receiverProtocol;
@property(nonatomic) __weak id <SOUnreadCountHelperDelegate> unreadCountDelegate; // @synthesize unreadCountDelegate=_unreadCountDelegate;
@property(readonly, nonatomic) unsigned long long unreadCount; // @synthesize unreadCount=_unreadCount;
- (void).cxx_destruct;
- (id)unreadFormatForParticipants:(long long)arg1 andUnreadCount:(id)arg2;
- (void)markChatGUIDAsRead:(id)arg1;
- (void)processUnreadCountForChatGUID:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;
- (void)updateProperties:(id)arg1;
- (unsigned long long)totalUnreadCount;
- (void)_calculateTotalUnreadCount;
- (void)_postUnreadChatNotificationForChatGUID:(id)arg1;
- (void)_postUnreadCountNotificationForChatGUID:(id)arg1;
- (id)unreadChatsBlocking;
- (id)unreadChats;
- (unsigned long long)unreadCountForChatGUID:(id)arg1;
- (void)setupConnection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SOAlertsHelper : SOHelper <SOAlertsHelperReceiverProtocol>
{
    id <SOAlertsHelperAppleScriptDelegate> _delegate;
}

+ (id)weakSharedInstance;
+ (id)bundleName;
+ (id)remoteReceiverProtocol;
+ (id)receiverProtocol;
@property __weak id <SOAlertsHelperAppleScriptDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)performActionScriptForChatGUID:(id)arg1 handleID:(id)arg2 messageText:(id)arg3 accountGUID:(id)arg4 event:(int)arg5;
- (void)clearMessageDeliveryError;
- (void)copySampleScriptsFrom:(id)arg1 to:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SOMessageHelper : SOHelper
{
}

+ (id)iMessageURLForAddresses:(id)arg1;
+ (id)iMessageURLForAddress:(id)arg1;
+ (id)bundleName;
+ (id)remoteReceiverProtocol;
+ (id)weakSharedInstance;
+ (void)startChatWithABPersonID:(id)arg1;
+ (void)shareScreenOfAlias:(id)arg1;
+ (void)shareScreenWithAlias:(id)arg1;
+ (void)audioChatWithAlias:(id)arg1;
+ (void)videoChatWithAlias:(id)arg1;
+ (void)_openURLWithAction:(id)arg1 forAlias:(id)arg2;
- (void)openShareKit;
- (id)openMessagesString;
- (void)startNewConverstaionInMessages;
- (id)newMessageString;
- (void)sendMessageText:(id)arg1 toRecipients:(id)arg2 onService:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)sendMessageText:(id)arg1 toRecipient:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;

@end

@interface SOBuddyHelper : SOHelper <SOBuddyHelperReceiverProtocol>
{
}

+ (id)weakSharedInstance;
+ (id)remoteReceiverProtocol;
+ (id)receiverProtocol;
+ (id)bundleName;
- (id)imageForName:(id)arg1;
- (void)openConversationWithBuddyID:(id)arg1 serviceName:(id)arg2;
- (void)openConversationWithBuddyDetails:(id)arg1;
- (id)bonjourBuddyListBlocking;
- (id)bonjourBuddyList;
- (id)bonjourBuddyListTitleBlocking;
- (id)bonjourBuddyListTitle;
- (id)buddyListsBlocking;
- (id)buddyLists;
- (id)buddyListTitleBlocking;
- (id)buddyListTitle;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SOFileTransferHelper : SOHelper
{
    NSMutableDictionary *_guidToResolvedBookmarkMap;
    NSObject<OS_dispatch_queue> *_workerQueue;
}

+ (id)sharedInstance;
+ (id)bundleName;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue=_workerQueue;
@property(retain) NSMutableDictionary *guidToResolvedBookmarkMap; // @synthesize guidToResolvedBookmarkMap=_guidToResolvedBookmarkMap;
- (void).cxx_destruct;
- (id)archiveURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)runBlockWhenDoneArchiving:(CDUnknownBlockType)arg1;
- (id)accountIDForFileTransferGUID:(id)arg1;
- (id)otherPersonForFileTransferGUID:(id)arg1;
- (id)fileTransfersIncompleteAlert;
- (BOOL)atLeastOneTransferIncomplete;
- (id)userVisibleURLForGUID:(id)arg1;
- (void)setUserVisibleURL:(id)arg1 fileTransferGUID:(id)arg2;
- (void)removeVisibleTransferGUIDs:(id)arg1;
- (void)addVisibleTransferGUIDs:(id)arg1;
- (id)visibleFileTransferGUIDs;
- (id)init;

@end

@interface SOAccountInfoHelper : SOHelper <SOAccountInfoHelperReceiverProtocol>
{
    NSMutableDictionary *_iMessageIDToChangeBlockGUIDs;
    NSMutableDictionary *_facetimeIDToChangeBlockGUIDs;
    NSMutableDictionary *_changeBlockGUIDToBlock;
    NSObject<OS_dispatch_queue> *_accountInfoDispatchQueue;
}

+ (id)remoteReceiverProtocol;
+ (id)receiverProtocol;
+ (id)sharedInstance;
+ (id)bundleName;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accountInfoDispatchQueue; // @synthesize accountInfoDispatchQueue=_accountInfoDispatchQueue;
@property(retain, nonatomic) NSMutableDictionary *changeBlockGUIDToBlock; // @synthesize changeBlockGUIDToBlock=_changeBlockGUIDToBlock;
@property(retain, nonatomic) NSMutableDictionary *facetimeIDToChangeBlockGUIDs; // @synthesize facetimeIDToChangeBlockGUIDs=_facetimeIDToChangeBlockGUIDs;
@property(retain, nonatomic) NSMutableDictionary *iMessageIDToChangeBlockGUIDs; // @synthesize iMessageIDToChangeBlockGUIDs=_iMessageIDToChangeBlockGUIDs;
- (void).cxx_destruct;
- (id)legacyScreenSharingIDsForABPersonID:(id)arg1;
- (id)legacyAudioIDsForABPersonID:(id)arg1;
- (id)legacyVideoIDsForABPersonID:(id)arg1;
- (id)faceTimeIDsForABPersonID:(id)arg1;
- (id)_generateGUID;
- (void)updatedMessagesStatusID:(id)arg1;
- (void)updatedFaceTimeStatusID:(id)arg1;
- (void)removeBlock:(id)arg1;
- (id)runBlock:(CDUnknownBlockType)arg1 onIMessageIDChange:(id)arg2;
- (id)runBlock:(CDUnknownBlockType)arg1 onFaceTimeIDChange:(id)arg2;
- (id)_runBlock:(CDUnknownBlockType)arg1 onIDChange:(id)arg2 withStorage:(id)arg3;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;
- (void)addValidFaceTimeID:(id)arg1;
- (void)addValidMessagesID:(id)arg1;
- (void)addInvalidFaceTimeID:(id)arg1;
- (void)addInvalidMessagesID:(id)arg1;
- (long long)faceTimeAliasStateForID:(id)arg1;
- (long long)messagesAliasStateForID:(id)arg1;
- (id)_validFTHandles;
- (id)_validMessagesHandles;
- (id)_invalidFTHandles;
- (id)_invalidMessagesHandles;
- (long long)faceTimeAccountState;
- (long long)iMessageAccountState;
- (long long)messagesAccountState;
- (long long)bonjourAccountState;
- (BOOL)shouldShowStatus;
- (BOOL)iMessageAccountOnly;
- (long long)_stateForKey:(id)arg1;
- (long long)iMessageAccountStateBlocking;
- (long long)faceTimeAccountStateBlocking;
- (long long)messagesAccountStateBlocking;
- (long long)bonjourAccountStateBlocking;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SOChatHelper : SOHelper
{
}

+ (id)weakSharedInstance;
+ (id)bundleName;
- (id)chatNameFormatForParticipants:(long long)arg1;
- (id)chatListBlocking;
- (id)chatList;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;

@end

@interface TranscriptRenderingHelper : NSObject
{
}

- (void)renderTranscriptFile:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface MapRenderingHelper : NSObject
{
}

+ (void)renderMapFile:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface SOFavoritesHelper : SOHelper
{
}

+ (id)bundleName;
+ (id)weakSharedInstance;
- (void)setAllowTwoTimeCallthrough:(BOOL)arg1;
- (BOOL)allowTwoTimeCallthroughBlocking;
- (BOOL)allowTwoTimeCallthrough;
- (void)setFaceTimeDNDEnabled:(BOOL)arg1;
- (BOOL)faceTimeDNDEnabledBlocking;
- (BOOL)faceTimeDNDEnabled;
- (void)setSelectedFaceTimeDNDMenuOption:(unsigned long long)arg1;
- (id)selectedFaceTimeDNDMenuOptionBlocking;
- (id)selectedFaceTimeDNDMenuOption;
- (unsigned long long)selectedFaceTimeDNDMenuOptionValueBlocking;
- (unsigned long long)selectedFaceTimeDNDMenuOptionValue;
- (id)faceTimeDNDMenuOptionsBlocking;
- (id)faceTimeDNDMenuOptions;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;

@end

@interface SOAccountStatusHelper : SOHelper
{
    NSMutableDictionary *_cachedStatusImages;
}

+ (id)weakSharedInstance;
+ (id)remoteReceiverProtocol;
+ (id)bundleName;
@property(retain) NSMutableDictionary *cachedStatusImages; // @synthesize cachedStatusImages=_cachedStatusImages;
- (void).cxx_destruct;
- (id)screenSharingUser;
- (void)screenSharingShouldEnd;
- (id)suggestedMenuOrder;
- (id)onlineAccounts;
- (id)imageForStatus:(id)arg1;
- (void)setUsesAlternateStatusImages:(BOOL)arg1;
- (id)selectedMenuOptionsBlocking;
- (id)selectedMenuOptions;
- (id)statusMenuOptionsBlocking;
- (id)statusMenuOptions;
- (id)statusTitleBlocking;
- (id)statusTitle;
- (long long)currentStatusBlocking;
- (long long)currentStatus;
- (void)setAccountStatus:(id)arg1 message:(id)arg2;
- (void)setValue:(id)arg1 forControllerKey:(id)arg2;

@end

