//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChannelDescription {
    unsigned int mChannelLabel;
    unsigned int mChannelFlags;
    float mCoordinates[3];
};

struct AudioChannelLayout {
    unsigned int mChannelLayoutTag;
    unsigned int mChannelBitmap;
    unsigned int mNumberChannelDescriptions;
    struct AudioChannelDescription mChannelDescriptions[1];
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct SSPoint {
    long long _field1;
    long long _field2;
};

struct SSSize {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        CDUnknownFunctionPointerType _field13;
        CDUnknownFunctionPointerType _field14;
        CDUnknownFunctionPointerType _field15;
        CDUnknownFunctionPointerType _field16;
        CDUnknownFunctionPointerType _field17;
        CDUnknownFunctionPointerType _field18;
        CDUnknownFunctionPointerType _field19;
        CDUnknownFunctionPointerType _field20;
        CDUnknownFunctionPointerType _field21;
        CDUnknownFunctionPointerType _field22;
        CDUnknownFunctionPointerType _field23;
        CDUnknownFunctionPointerType _field24;
        CDUnknownFunctionPointerType _field25;
        CDUnknownFunctionPointerType _field26;
        CDUnknownFunctionPointerType _field27;
        CDUnknownFunctionPointerType _field28;
        CDUnknownFunctionPointerType _field29;
        CDUnknownFunctionPointerType _field30;
        CDUnknownFunctionPointerType _field31;
        CDUnknownFunctionPointerType _field32;
        CDUnknownFunctionPointerType _field33;
        CDUnknownFunctionPointerType _field34;
        CDUnknownFunctionPointerType _field35;
        CDUnknownFunctionPointerType _field36;
        CDUnknownFunctionPointerType _field37;
        CDUnknownFunctionPointerType _field38;
        CDUnknownFunctionPointerType _field39;
        CDUnknownFunctionPointerType _field40;
        CDUnknownFunctionPointerType _field41;
        CDUnknownFunctionPointerType _field42;
        CDUnknownFunctionPointerType _field43;
        CDUnknownFunctionPointerType _field44;
        CDUnknownFunctionPointerType _field45;
        CDUnknownFunctionPointerType _field46;
        CDUnknownFunctionPointerType _field47;
        CDUnknownFunctionPointerType _field48;
        CDUnknownFunctionPointerType _field49;
        CDUnknownFunctionPointerType _field50;
        CDUnknownFunctionPointerType _field51;
        CDUnknownFunctionPointerType _field52;
        CDUnknownFunctionPointerType _field53;
        CDUnknownFunctionPointerType _field54;
        CDUnknownFunctionPointerType _field55;
        CDUnknownFunctionPointerType _field56;
        CDUnknownFunctionPointerType _field57;
        CDUnknownFunctionPointerType _field58;
        CDUnknownFunctionPointerType _field59;
        CDUnknownFunctionPointerType _field60;
        CDUnknownFunctionPointerType _field61;
        CDUnknownFunctionPointerType _field62;
        CDUnknownFunctionPointerType _field63;
        CDUnknownFunctionPointerType _field64;
        CDUnknownFunctionPointerType _field65;
        CDUnknownFunctionPointerType _field66;
        CDUnknownFunctionPointerType _field67;
        CDUnknownFunctionPointerType _field68;
        CDUnknownFunctionPointerType _field69;
        CDUnknownFunctionPointerType _field70;
        CDUnknownFunctionPointerType _field71;
        CDUnknownFunctionPointerType _field72;
        CDUnknownFunctionPointerType _field73;
        CDUnknownFunctionPointerType _field74;
        CDUnknownFunctionPointerType _field75;
        CDUnknownFunctionPointerType _field76;
        CDUnknownFunctionPointerType _field77;
        CDUnknownFunctionPointerType _field78;
        CDUnknownFunctionPointerType _field79;
        CDUnknownFunctionPointerType _field80;
        CDUnknownFunctionPointerType _field81;
        CDUnknownFunctionPointerType _field82;
        CDUnknownFunctionPointerType _field83;
        CDUnknownFunctionPointerType _field84;
        CDUnknownFunctionPointerType _field85;
        CDUnknownFunctionPointerType _field86;
        CDUnknownFunctionPointerType _field87;
        CDUnknownFunctionPointerType _field88;
        CDUnknownFunctionPointerType _field89;
        CDUnknownFunctionPointerType _field90;
        CDUnknownFunctionPointerType _field91;
        CDUnknownFunctionPointerType _field92;
        CDUnknownFunctionPointerType _field93;
        CDUnknownFunctionPointerType _field94;
        CDUnknownFunctionPointerType _field95;
        CDUnknownFunctionPointerType _field96;
        CDUnknownFunctionPointerType _field97;
        CDUnknownFunctionPointerType _field98;
        CDUnknownFunctionPointerType _field99;
        CDUnknownFunctionPointerType _field100;
        CDUnknownFunctionPointerType _field101;
        CDUnknownFunctionPointerType _field102;
        CDUnknownFunctionPointerType _field103;
        CDUnknownFunctionPointerType _field104;
        CDUnknownFunctionPointerType _field105;
        CDUnknownFunctionPointerType _field106;
        CDUnknownFunctionPointerType _field107;
        CDUnknownFunctionPointerType _field108;
        CDUnknownFunctionPointerType _field109;
        CDUnknownFunctionPointerType _field110;
        CDUnknownFunctionPointerType _field111;
        CDUnknownFunctionPointerType _field112;
        CDUnknownFunctionPointerType _field113;
        CDUnknownFunctionPointerType _field114;
        CDUnknownFunctionPointerType _field115;
        CDUnknownFunctionPointerType _field116;
        CDUnknownFunctionPointerType _field117;
        CDUnknownFunctionPointerType _field118;
        CDUnknownFunctionPointerType _field119;
        CDUnknownFunctionPointerType _field120;
        CDUnknownFunctionPointerType _field121;
        CDUnknownFunctionPointerType _field122;
        CDUnknownFunctionPointerType _field123;
        CDUnknownFunctionPointerType _field124;
        CDUnknownFunctionPointerType _field125;
        CDUnknownFunctionPointerType _field126;
        CDUnknownFunctionPointerType _field127;
        CDUnknownFunctionPointerType _field128;
        CDUnknownFunctionPointerType _field129;
        CDUnknownFunctionPointerType _field130;
        CDUnknownFunctionPointerType _field131;
        CDUnknownFunctionPointerType _field132;
        CDUnknownFunctionPointerType _field133;
        CDUnknownFunctionPointerType _field134;
        CDUnknownFunctionPointerType _field135;
        CDUnknownFunctionPointerType _field136;
        CDUnknownFunctionPointerType _field137;
        CDUnknownFunctionPointerType _field138;
        CDUnknownFunctionPointerType _field139;
        CDUnknownFunctionPointerType _field140;
        CDUnknownFunctionPointerType _field141;
        CDUnknownFunctionPointerType _field142;
        CDUnknownFunctionPointerType _field143;
        CDUnknownFunctionPointerType _field144;
        CDUnknownFunctionPointerType _field145;
        CDUnknownFunctionPointerType _field146;
        CDUnknownFunctionPointerType _field147;
        CDUnknownFunctionPointerType _field148;
        CDUnknownFunctionPointerType _field149;
        CDUnknownFunctionPointerType _field150;
        CDUnknownFunctionPointerType _field151;
        CDUnknownFunctionPointerType _field152;
        CDUnknownFunctionPointerType _field153;
        CDUnknownFunctionPointerType _field154;
        CDUnknownFunctionPointerType _field155;
        CDUnknownFunctionPointerType _field156;
        CDUnknownFunctionPointerType _field157;
        CDUnknownFunctionPointerType _field158;
        CDUnknownFunctionPointerType _field159;
        CDUnknownFunctionPointerType _field160;
        CDUnknownFunctionPointerType _field161;
        CDUnknownFunctionPointerType _field162;
        CDUnknownFunctionPointerType _field163;
        CDUnknownFunctionPointerType _field164;
        CDUnknownFunctionPointerType _field165;
        CDUnknownFunctionPointerType _field166;
        CDUnknownFunctionPointerType _field167;
        CDUnknownFunctionPointerType _field168;
        CDUnknownFunctionPointerType _field169;
        CDUnknownFunctionPointerType _field170;
        CDUnknownFunctionPointerType _field171;
        CDUnknownFunctionPointerType _field172;
        CDUnknownFunctionPointerType _field173;
        CDUnknownFunctionPointerType _field174;
        CDUnknownFunctionPointerType _field175;
        CDUnknownFunctionPointerType _field176;
        CDUnknownFunctionPointerType _field177;
        CDUnknownFunctionPointerType _field178;
        CDUnknownFunctionPointerType _field179;
        CDUnknownFunctionPointerType _field180;
        CDUnknownFunctionPointerType _field181;
        CDUnknownFunctionPointerType _field182;
        CDUnknownFunctionPointerType _field183;
        CDUnknownFunctionPointerType _field184;
        CDUnknownFunctionPointerType _field185;
        CDUnknownFunctionPointerType _field186;
        CDUnknownFunctionPointerType _field187;
        CDUnknownFunctionPointerType _field188;
        CDUnknownFunctionPointerType _field189;
        CDUnknownFunctionPointerType _field190;
        CDUnknownFunctionPointerType _field191;
        CDUnknownFunctionPointerType _field192;
        CDUnknownFunctionPointerType _field193;
        CDUnknownFunctionPointerType _field194;
        CDUnknownFunctionPointerType _field195;
        CDUnknownFunctionPointerType _field196;
        CDUnknownFunctionPointerType _field197;
        CDUnknownFunctionPointerType _field198;
        CDUnknownFunctionPointerType _field199;
        CDUnknownFunctionPointerType _field200;
        CDUnknownFunctionPointerType _field201;
        CDUnknownFunctionPointerType _field202;
        CDUnknownFunctionPointerType _field203;
        CDUnknownFunctionPointerType _field204;
        CDUnknownFunctionPointerType _field205;
        CDUnknownFunctionPointerType _field206;
        CDUnknownFunctionPointerType _field207;
        CDUnknownFunctionPointerType _field208;
        CDUnknownFunctionPointerType _field209;
        CDUnknownFunctionPointerType _field210;
        CDUnknownFunctionPointerType _field211;
        CDUnknownFunctionPointerType _field212;
        CDUnknownFunctionPointerType _field213;
        CDUnknownFunctionPointerType _field214;
        CDUnknownFunctionPointerType _field215;
        CDUnknownFunctionPointerType _field216;
        CDUnknownFunctionPointerType _field217;
        CDUnknownFunctionPointerType _field218;
        CDUnknownFunctionPointerType _field219;
        CDUnknownFunctionPointerType _field220;
        CDUnknownFunctionPointerType _field221;
        CDUnknownFunctionPointerType _field222;
        CDUnknownFunctionPointerType _field223;
        CDUnknownFunctionPointerType _field224;
        CDUnknownFunctionPointerType _field225;
        CDUnknownFunctionPointerType _field226;
        CDUnknownFunctionPointerType _field227;
        CDUnknownFunctionPointerType _field228;
        CDUnknownFunctionPointerType _field229;
        CDUnknownFunctionPointerType _field230;
        CDUnknownFunctionPointerType _field231;
        CDUnknownFunctionPointerType _field232;
        CDUnknownFunctionPointerType _field233;
        CDUnknownFunctionPointerType _field234;
        CDUnknownFunctionPointerType _field235;
        CDUnknownFunctionPointerType _field236;
        CDUnknownFunctionPointerType _field237;
        CDUnknownFunctionPointerType _field238;
        CDUnknownFunctionPointerType _field239;
        CDUnknownFunctionPointerType _field240;
        CDUnknownFunctionPointerType _field241;
        CDUnknownFunctionPointerType _field242;
        CDUnknownFunctionPointerType _field243;
        CDUnknownFunctionPointerType _field244;
        CDUnknownFunctionPointerType _field245;
        CDUnknownFunctionPointerType _field246;
        CDUnknownFunctionPointerType _field247;
        CDUnknownFunctionPointerType _field248;
        CDUnknownFunctionPointerType _field249;
        CDUnknownFunctionPointerType _field250;
        CDUnknownFunctionPointerType _field251;
        CDUnknownFunctionPointerType _field252;
        CDUnknownFunctionPointerType _field253;
        CDUnknownFunctionPointerType _field254;
        CDUnknownFunctionPointerType _field255;
        CDUnknownFunctionPointerType _field256;
        CDUnknownFunctionPointerType _field257;
        CDUnknownFunctionPointerType _field258;
        CDUnknownFunctionPointerType _field259;
        CDUnknownFunctionPointerType _field260;
        CDUnknownFunctionPointerType _field261;
        CDUnknownFunctionPointerType _field262;
        CDUnknownFunctionPointerType _field263;
        CDUnknownFunctionPointerType _field264;
        CDUnknownFunctionPointerType _field265;
        CDUnknownFunctionPointerType _field266;
        CDUnknownFunctionPointerType _field267;
        CDUnknownFunctionPointerType _field268;
        CDUnknownFunctionPointerType _field269;
        CDUnknownFunctionPointerType _field270;
        CDUnknownFunctionPointerType _field271;
        CDUnknownFunctionPointerType _field272;
        CDUnknownFunctionPointerType _field273;
        CDUnknownFunctionPointerType _field274;
        CDUnknownFunctionPointerType _field275;
        CDUnknownFunctionPointerType _field276;
        CDUnknownFunctionPointerType _field277;
        CDUnknownFunctionPointerType _field278;
        CDUnknownFunctionPointerType _field279;
        CDUnknownFunctionPointerType _field280;
        CDUnknownFunctionPointerType _field281;
        CDUnknownFunctionPointerType _field282;
        CDUnknownFunctionPointerType _field283;
        CDUnknownFunctionPointerType _field284;
        CDUnknownFunctionPointerType _field285;
        CDUnknownFunctionPointerType _field286;
        CDUnknownFunctionPointerType _field287;
        CDUnknownFunctionPointerType _field288;
        CDUnknownFunctionPointerType _field289;
        CDUnknownFunctionPointerType _field290;
        CDUnknownFunctionPointerType _field291;
        CDUnknownFunctionPointerType _field292;
        CDUnknownFunctionPointerType _field293;
        CDUnknownFunctionPointerType _field294;
        CDUnknownFunctionPointerType _field295;
        CDUnknownFunctionPointerType _field296;
        CDUnknownFunctionPointerType _field297;
        CDUnknownFunctionPointerType _field298;
        CDUnknownFunctionPointerType _field299;
        CDUnknownFunctionPointerType _field300;
        CDUnknownFunctionPointerType _field301;
        CDUnknownFunctionPointerType _field302;
        CDUnknownFunctionPointerType _field303;
        CDUnknownFunctionPointerType _field304;
        CDUnknownFunctionPointerType _field305;
        CDUnknownFunctionPointerType _field306;
        CDUnknownFunctionPointerType _field307;
        CDUnknownFunctionPointerType _field308;
        CDUnknownFunctionPointerType _field309;
        CDUnknownFunctionPointerType _field310;
        CDUnknownFunctionPointerType _field311;
        CDUnknownFunctionPointerType _field312;
        CDUnknownFunctionPointerType _field313;
        CDUnknownFunctionPointerType _field314;
        CDUnknownFunctionPointerType _field315;
        CDUnknownFunctionPointerType _field316;
        CDUnknownFunctionPointerType _field317;
        CDUnknownFunctionPointerType _field318;
        CDUnknownFunctionPointerType _field319;
        CDUnknownFunctionPointerType _field320;
        CDUnknownFunctionPointerType _field321;
        CDUnknownFunctionPointerType _field322;
        CDUnknownFunctionPointerType _field323;
        CDUnknownFunctionPointerType _field324;
        CDUnknownFunctionPointerType _field325;
        CDUnknownFunctionPointerType _field326;
        CDUnknownFunctionPointerType _field327;
        CDUnknownFunctionPointerType _field328;
        CDUnknownFunctionPointerType _field329;
        CDUnknownFunctionPointerType _field330;
        CDUnknownFunctionPointerType _field331;
        CDUnknownFunctionPointerType _field332;
        CDUnknownFunctionPointerType _field333;
        CDUnknownFunctionPointerType _field334;
        CDUnknownFunctionPointerType _field335;
        CDUnknownFunctionPointerType _field336;
        CDUnknownFunctionPointerType _field337;
        CDUnknownFunctionPointerType _field338;
        CDUnknownFunctionPointerType _field339;
        CDUnknownFunctionPointerType _field340;
        CDUnknownFunctionPointerType _field341;
        CDUnknownFunctionPointerType _field342;
        CDUnknownFunctionPointerType _field343;
        CDUnknownFunctionPointerType _field344;
        CDUnknownFunctionPointerType _field345;
        CDUnknownFunctionPointerType _field346;
        CDUnknownFunctionPointerType _field347;
        CDUnknownFunctionPointerType _field348;
        CDUnknownFunctionPointerType _field349;
        CDUnknownFunctionPointerType _field350;
        CDUnknownFunctionPointerType _field351;
        CDUnknownFunctionPointerType _field352;
        CDUnknownFunctionPointerType _field353;
        CDUnknownFunctionPointerType _field354;
        CDUnknownFunctionPointerType _field355;
        CDUnknownFunctionPointerType _field356;
        CDUnknownFunctionPointerType _field357;
        CDUnknownFunctionPointerType _field358;
        CDUnknownFunctionPointerType _field359;
        CDUnknownFunctionPointerType _field360;
        CDUnknownFunctionPointerType _field361;
        CDUnknownFunctionPointerType _field362;
        CDUnknownFunctionPointerType _field363;
        CDUnknownFunctionPointerType _field364;
        CDUnknownFunctionPointerType _field365;
        CDUnknownFunctionPointerType _field366;
        CDUnknownFunctionPointerType _field367;
        CDUnknownFunctionPointerType _field368;
        CDUnknownFunctionPointerType _field369;
        CDUnknownFunctionPointerType _field370;
        CDUnknownFunctionPointerType _field371;
        CDUnknownFunctionPointerType _field372;
        CDUnknownFunctionPointerType _field373;
        CDUnknownFunctionPointerType _field374;
        CDUnknownFunctionPointerType _field375;
        CDUnknownFunctionPointerType _field376;
        CDUnknownFunctionPointerType _field377;
        CDUnknownFunctionPointerType _field378;
        CDUnknownFunctionPointerType _field379;
        CDUnknownFunctionPointerType _field380;
        CDUnknownFunctionPointerType _field381;
        CDUnknownFunctionPointerType _field382;
        CDUnknownFunctionPointerType _field383;
        CDUnknownFunctionPointerType _field384;
        CDUnknownFunctionPointerType _field385;
        CDUnknownFunctionPointerType _field386;
        CDUnknownFunctionPointerType _field387;
        CDUnknownFunctionPointerType _field388;
        CDUnknownFunctionPointerType _field389;
        CDUnknownFunctionPointerType _field390;
        CDUnknownFunctionPointerType _field391;
        CDUnknownFunctionPointerType _field392;
        CDUnknownFunctionPointerType _field393;
        CDUnknownFunctionPointerType _field394;
        CDUnknownFunctionPointerType _field395;
        CDUnknownFunctionPointerType _field396;
        CDUnknownFunctionPointerType _field397;
        CDUnknownFunctionPointerType _field398;
        CDUnknownFunctionPointerType _field399;
        CDUnknownFunctionPointerType _field400;
        CDUnknownFunctionPointerType _field401;
        CDUnknownFunctionPointerType _field402;
        CDUnknownFunctionPointerType _field403;
        CDUnknownFunctionPointerType _field404;
        CDUnknownFunctionPointerType _field405;
        CDUnknownFunctionPointerType _field406;
        CDUnknownFunctionPointerType _field407;
        CDUnknownFunctionPointerType _field408;
        CDUnknownFunctionPointerType _field409;
        CDUnknownFunctionPointerType _field410;
        CDUnknownFunctionPointerType _field411;
        CDUnknownFunctionPointerType _field412;
        CDUnknownFunctionPointerType _field413;
        CDUnknownFunctionPointerType _field414;
        CDUnknownFunctionPointerType _field415;
        CDUnknownFunctionPointerType _field416;
        CDUnknownFunctionPointerType _field417;
        CDUnknownFunctionPointerType _field418;
        CDUnknownFunctionPointerType _field419;
        CDUnknownFunctionPointerType _field420;
        CDUnknownFunctionPointerType _field421;
        CDUnknownFunctionPointerType _field422;
        CDUnknownFunctionPointerType _field423;
        CDUnknownFunctionPointerType _field424;
        CDUnknownFunctionPointerType _field425;
        CDUnknownFunctionPointerType _field426;
        CDUnknownFunctionPointerType _field427;
        CDUnknownFunctionPointerType _field428;
        CDUnknownFunctionPointerType _field429;
        CDUnknownFunctionPointerType _field430;
        CDUnknownFunctionPointerType _field431;
        CDUnknownFunctionPointerType _field432;
        CDUnknownFunctionPointerType _field433;
        CDUnknownFunctionPointerType _field434;
        CDUnknownFunctionPointerType _field435;
        CDUnknownFunctionPointerType _field436;
        CDUnknownFunctionPointerType _field437;
        CDUnknownFunctionPointerType _field438;
        CDUnknownFunctionPointerType _field439;
        CDUnknownFunctionPointerType _field440;
        CDUnknownFunctionPointerType _field441;
        CDUnknownFunctionPointerType _field442;
        CDUnknownFunctionPointerType _field443;
        CDUnknownFunctionPointerType _field444;
        CDUnknownFunctionPointerType _field445;
        CDUnknownFunctionPointerType _field446;
        CDUnknownFunctionPointerType _field447;
        CDUnknownFunctionPointerType _field448;
        CDUnknownFunctionPointerType _field449;
        CDUnknownFunctionPointerType _field450;
        CDUnknownFunctionPointerType _field451;
        CDUnknownFunctionPointerType _field452;
        CDUnknownFunctionPointerType _field453;
        CDUnknownFunctionPointerType _field454;
        CDUnknownFunctionPointerType _field455;
        CDUnknownFunctionPointerType _field456;
        CDUnknownFunctionPointerType _field457;
        CDUnknownFunctionPointerType _field458;
        CDUnknownFunctionPointerType _field459;
        CDUnknownFunctionPointerType _field460;
        CDUnknownFunctionPointerType _field461;
        CDUnknownFunctionPointerType _field462;
        CDUnknownFunctionPointerType _field463;
        CDUnknownFunctionPointerType _field464;
        CDUnknownFunctionPointerType _field465;
        CDUnknownFunctionPointerType _field466;
        CDUnknownFunctionPointerType _field467;
        CDUnknownFunctionPointerType _field468;
        CDUnknownFunctionPointerType _field469;
        CDUnknownFunctionPointerType _field470;
        CDUnknownFunctionPointerType _field471;
        CDUnknownFunctionPointerType _field472;
        CDUnknownFunctionPointerType _field473;
        CDUnknownFunctionPointerType _field474;
        CDUnknownFunctionPointerType _field475;
        CDUnknownFunctionPointerType _field476;
        CDUnknownFunctionPointerType _field477;
        CDUnknownFunctionPointerType _field478;
        CDUnknownFunctionPointerType _field479;
        CDUnknownFunctionPointerType _field480;
        CDUnknownFunctionPointerType _field481;
        CDUnknownFunctionPointerType _field482;
        CDUnknownFunctionPointerType _field483;
        CDUnknownFunctionPointerType _field484;
        CDUnknownFunctionPointerType _field485;
        CDUnknownFunctionPointerType _field486;
        CDUnknownFunctionPointerType _field487;
        CDUnknownFunctionPointerType _field488;
        CDUnknownFunctionPointerType _field489;
        CDUnknownFunctionPointerType _field490;
        CDUnknownFunctionPointerType _field491;
        CDUnknownFunctionPointerType _field492;
        CDUnknownFunctionPointerType _field493;
        CDUnknownFunctionPointerType _field494;
        CDUnknownFunctionPointerType _field495;
        CDUnknownFunctionPointerType _field496;
        CDUnknownFunctionPointerType _field497;
        CDUnknownFunctionPointerType _field498;
        CDUnknownFunctionPointerType _field499;
        CDUnknownFunctionPointerType _field500;
        CDUnknownFunctionPointerType _field501;
        CDUnknownFunctionPointerType _field502;
        CDUnknownFunctionPointerType _field503;
        CDUnknownFunctionPointerType _field504;
        CDUnknownFunctionPointerType _field505;
        CDUnknownFunctionPointerType _field506;
        CDUnknownFunctionPointerType _field507;
        CDUnknownFunctionPointerType _field508;
        CDUnknownFunctionPointerType _field509;
        CDUnknownFunctionPointerType _field510;
        CDUnknownFunctionPointerType _field511;
        CDUnknownFunctionPointerType _field512;
        CDUnknownFunctionPointerType _field513;
        CDUnknownFunctionPointerType _field514;
        CDUnknownFunctionPointerType _field515;
        CDUnknownFunctionPointerType _field516;
        CDUnknownFunctionPointerType _field517;
        CDUnknownFunctionPointerType _field518;
        CDUnknownFunctionPointerType _field519;
        CDUnknownFunctionPointerType _field520;
        CDUnknownFunctionPointerType _field521;
        CDUnknownFunctionPointerType _field522;
        CDUnknownFunctionPointerType _field523;
        CDUnknownFunctionPointerType _field524;
        CDUnknownFunctionPointerType _field525;
        CDUnknownFunctionPointerType _field526;
        CDUnknownFunctionPointerType _field527;
        CDUnknownFunctionPointerType _field528;
        CDUnknownFunctionPointerType _field529;
        CDUnknownFunctionPointerType _field530;
        CDUnknownFunctionPointerType _field531;
        CDUnknownFunctionPointerType _field532;
        CDUnknownFunctionPointerType _field533;
        CDUnknownFunctionPointerType _field534;
        CDUnknownFunctionPointerType _field535;
        CDUnknownFunctionPointerType _field536;
        CDUnknownFunctionPointerType _field537;
        CDUnknownFunctionPointerType _field538;
        CDUnknownFunctionPointerType _field539;
        CDUnknownFunctionPointerType _field540;
        CDUnknownFunctionPointerType _field541;
        CDUnknownFunctionPointerType _field542;
        CDUnknownFunctionPointerType _field543;
        CDUnknownFunctionPointerType _field544;
        CDUnknownFunctionPointerType _field545;
        CDUnknownFunctionPointerType _field546;
        CDUnknownFunctionPointerType _field547;
        CDUnknownFunctionPointerType _field548;
        CDUnknownFunctionPointerType _field549;
        CDUnknownFunctionPointerType _field550;
        CDUnknownFunctionPointerType _field551;
        CDUnknownFunctionPointerType _field552;
        CDUnknownFunctionPointerType _field553;
        CDUnknownFunctionPointerType _field554;
        CDUnknownFunctionPointerType _field555;
        CDUnknownFunctionPointerType _field556;
        CDUnknownFunctionPointerType _field557;
        CDUnknownFunctionPointerType _field558;
        CDUnknownFunctionPointerType _field559;
        CDUnknownFunctionPointerType _field560;
        CDUnknownFunctionPointerType _field561;
        CDUnknownFunctionPointerType _field562;
        CDUnknownFunctionPointerType _field563;
        CDUnknownFunctionPointerType _field564;
        CDUnknownFunctionPointerType _field565;
        CDUnknownFunctionPointerType _field566;
        CDUnknownFunctionPointerType _field567;
        CDUnknownFunctionPointerType _field568;
        CDUnknownFunctionPointerType _field569;
        CDUnknownFunctionPointerType _field570;
        CDUnknownFunctionPointerType _field571;
        CDUnknownFunctionPointerType _field572;
        CDUnknownFunctionPointerType _field573;
        CDUnknownFunctionPointerType _field574;
        CDUnknownFunctionPointerType _field575;
        CDUnknownFunctionPointerType _field576;
        CDUnknownFunctionPointerType _field577;
        CDUnknownFunctionPointerType _field578;
        CDUnknownFunctionPointerType _field579;
        CDUnknownFunctionPointerType _field580;
        CDUnknownFunctionPointerType _field581;
        CDUnknownFunctionPointerType _field582;
        CDUnknownFunctionPointerType _field583;
        CDUnknownFunctionPointerType _field584;
        CDUnknownFunctionPointerType _field585;
        CDUnknownFunctionPointerType _field586;
        CDUnknownFunctionPointerType _field587;
        CDUnknownFunctionPointerType _field588;
        CDUnknownFunctionPointerType _field589;
        CDUnknownFunctionPointerType _field590;
        CDUnknownFunctionPointerType _field591;
        CDUnknownFunctionPointerType _field592;
        CDUnknownFunctionPointerType _field593;
        CDUnknownFunctionPointerType _field594;
        CDUnknownFunctionPointerType _field595;
        CDUnknownFunctionPointerType _field596;
        CDUnknownFunctionPointerType _field597;
        CDUnknownFunctionPointerType _field598;
        CDUnknownFunctionPointerType _field599;
        CDUnknownFunctionPointerType _field600;
        CDUnknownFunctionPointerType _field601;
        CDUnknownFunctionPointerType _field602;
        CDUnknownFunctionPointerType _field603;
        CDUnknownFunctionPointerType _field604;
        CDUnknownFunctionPointerType _field605;
        CDUnknownFunctionPointerType _field606;
        CDUnknownFunctionPointerType _field607;
        CDUnknownFunctionPointerType _field608;
        CDUnknownFunctionPointerType _field609;
        CDUnknownFunctionPointerType _field610;
        CDUnknownFunctionPointerType _field611;
        CDUnknownFunctionPointerType _field612;
        CDUnknownFunctionPointerType _field613;
        CDUnknownFunctionPointerType _field614;
        CDUnknownFunctionPointerType _field615;
        CDUnknownFunctionPointerType _field616;
        CDUnknownFunctionPointerType _field617;
        CDUnknownFunctionPointerType _field618;
        CDUnknownFunctionPointerType _field619;
        CDUnknownFunctionPointerType _field620;
        CDUnknownFunctionPointerType _field621;
        CDUnknownFunctionPointerType _field622;
        CDUnknownFunctionPointerType _field623;
        CDUnknownFunctionPointerType _field624;
        CDUnknownFunctionPointerType _field625;
        CDUnknownFunctionPointerType _field626;
        CDUnknownFunctionPointerType _field627;
        CDUnknownFunctionPointerType _field628;
        CDUnknownFunctionPointerType _field629;
        CDUnknownFunctionPointerType _field630;
        CDUnknownFunctionPointerType _field631;
        CDUnknownFunctionPointerType _field632;
        CDUnknownFunctionPointerType _field633;
        CDUnknownFunctionPointerType _field634;
        CDUnknownFunctionPointerType _field635;
        CDUnknownFunctionPointerType _field636;
        CDUnknownFunctionPointerType _field637;
        CDUnknownFunctionPointerType _field638;
        CDUnknownFunctionPointerType _field639;
        CDUnknownFunctionPointerType _field640;
        CDUnknownFunctionPointerType _field641;
        CDUnknownFunctionPointerType _field642;
        CDUnknownFunctionPointerType _field643;
        CDUnknownFunctionPointerType _field644;
        CDUnknownFunctionPointerType _field645;
        CDUnknownFunctionPointerType _field646;
        CDUnknownFunctionPointerType _field647;
        CDUnknownFunctionPointerType _field648;
        CDUnknownFunctionPointerType _field649;
        CDUnknownFunctionPointerType _field650;
        CDUnknownFunctionPointerType _field651;
        CDUnknownFunctionPointerType _field652;
        CDUnknownFunctionPointerType _field653;
        CDUnknownFunctionPointerType _field654;
        CDUnknownFunctionPointerType _field655;
        CDUnknownFunctionPointerType _field656;
        CDUnknownFunctionPointerType _field657;
        CDUnknownFunctionPointerType _field658;
        CDUnknownFunctionPointerType _field659;
        CDUnknownFunctionPointerType _field660;
        CDUnknownFunctionPointerType _field661;
        CDUnknownFunctionPointerType _field662;
        CDUnknownFunctionPointerType _field663;
        CDUnknownFunctionPointerType _field664;
        CDUnknownFunctionPointerType _field665;
        CDUnknownFunctionPointerType _field666;
        CDUnknownFunctionPointerType _field667;
        CDUnknownFunctionPointerType _field668;
        CDUnknownFunctionPointerType _field669;
        CDUnknownFunctionPointerType _field670;
        CDUnknownFunctionPointerType _field671;
        CDUnknownFunctionPointerType _field672;
        CDUnknownFunctionPointerType _field673;
        CDUnknownFunctionPointerType _field674;
        CDUnknownFunctionPointerType _field675;
        CDUnknownFunctionPointerType _field676;
        CDUnknownFunctionPointerType _field677;
        CDUnknownFunctionPointerType _field678;
        CDUnknownFunctionPointerType _field679;
        CDUnknownFunctionPointerType _field680;
        CDUnknownFunctionPointerType _field681;
        CDUnknownFunctionPointerType _field682;
        CDUnknownFunctionPointerType _field683;
        CDUnknownFunctionPointerType _field684;
        CDUnknownFunctionPointerType _field685;
        CDUnknownFunctionPointerType _field686;
        CDUnknownFunctionPointerType _field687;
        CDUnknownFunctionPointerType _field688;
        CDUnknownFunctionPointerType _field689;
        CDUnknownFunctionPointerType _field690;
        CDUnknownFunctionPointerType _field691;
        CDUnknownFunctionPointerType _field692;
        CDUnknownFunctionPointerType _field693;
        CDUnknownFunctionPointerType _field694;
        CDUnknownFunctionPointerType _field695;
        CDUnknownFunctionPointerType _field696;
        CDUnknownFunctionPointerType _field697;
        CDUnknownFunctionPointerType _field698;
        CDUnknownFunctionPointerType _field699;
        CDUnknownFunctionPointerType _field700;
        CDUnknownFunctionPointerType _field701;
        CDUnknownFunctionPointerType _field702;
        CDUnknownFunctionPointerType _field703;
        CDUnknownFunctionPointerType _field704;
        CDUnknownFunctionPointerType _field705;
        CDUnknownFunctionPointerType _field706;
        CDUnknownFunctionPointerType _field707;
        CDUnknownFunctionPointerType _field708;
        CDUnknownFunctionPointerType _field709;
        CDUnknownFunctionPointerType _field710;
        CDUnknownFunctionPointerType _field711;
        CDUnknownFunctionPointerType _field712;
        CDUnknownFunctionPointerType _field713;
        CDUnknownFunctionPointerType _field714;
        CDUnknownFunctionPointerType _field715;
        CDUnknownFunctionPointerType _field716;
        CDUnknownFunctionPointerType _field717;
        CDUnknownFunctionPointerType _field718;
        CDUnknownFunctionPointerType _field719;
        CDUnknownFunctionPointerType _field720;
        CDUnknownFunctionPointerType _field721;
        CDUnknownFunctionPointerType _field722;
        CDUnknownFunctionPointerType _field723;
        CDUnknownFunctionPointerType _field724;
        CDUnknownFunctionPointerType _field725;
        CDUnknownFunctionPointerType _field726;
        CDUnknownFunctionPointerType _field727;
        CDUnknownFunctionPointerType _field728;
        CDUnknownFunctionPointerType _field729;
        CDUnknownFunctionPointerType _field730;
        CDUnknownFunctionPointerType _field731;
        CDUnknownFunctionPointerType _field732;
        CDUnknownFunctionPointerType _field733;
        CDUnknownFunctionPointerType _field734;
        CDUnknownFunctionPointerType _field735;
        CDUnknownFunctionPointerType _field736;
        CDUnknownFunctionPointerType _field737;
        CDUnknownFunctionPointerType _field738;
        CDUnknownFunctionPointerType _field739;
        CDUnknownFunctionPointerType _field740;
        CDUnknownFunctionPointerType _field741;
        CDUnknownFunctionPointerType _field742;
        CDUnknownFunctionPointerType _field743;
        CDUnknownFunctionPointerType _field744;
        CDUnknownFunctionPointerType _field745;
        CDUnknownFunctionPointerType _field746;
        CDUnknownFunctionPointerType _field747;
        CDUnknownFunctionPointerType _field748;
        CDUnknownFunctionPointerType _field749;
        CDUnknownFunctionPointerType _field750;
        CDUnknownFunctionPointerType _field751;
        CDUnknownFunctionPointerType _field752;
        CDUnknownFunctionPointerType _field753;
        CDUnknownFunctionPointerType _field754;
        CDUnknownFunctionPointerType _field755;
        CDUnknownFunctionPointerType _field756;
        CDUnknownFunctionPointerType _field757;
        CDUnknownFunctionPointerType _field758;
        CDUnknownFunctionPointerType _field759;
        CDUnknownFunctionPointerType _field760;
        CDUnknownFunctionPointerType _field761;
        CDUnknownFunctionPointerType _field762;
        CDUnknownFunctionPointerType _field763;
        CDUnknownFunctionPointerType _field764;
        CDUnknownFunctionPointerType _field765;
        CDUnknownFunctionPointerType _field766;
        CDUnknownFunctionPointerType _field767;
        CDUnknownFunctionPointerType _field768;
        CDUnknownFunctionPointerType _field769;
        CDUnknownFunctionPointerType _field770;
        CDUnknownFunctionPointerType _field771;
        CDUnknownFunctionPointerType _field772;
        CDUnknownFunctionPointerType _field773;
        CDUnknownFunctionPointerType _field774;
        CDUnknownFunctionPointerType _field775;
        CDUnknownFunctionPointerType _field776;
        CDUnknownFunctionPointerType _field777;
        CDUnknownFunctionPointerType _field778;
        CDUnknownFunctionPointerType _field779;
        CDUnknownFunctionPointerType _field780;
        CDUnknownFunctionPointerType _field781;
        CDUnknownFunctionPointerType _field782;
        CDUnknownFunctionPointerType _field783;
        CDUnknownFunctionPointerType _field784;
        CDUnknownFunctionPointerType _field785;
        CDUnknownFunctionPointerType _field786;
        CDUnknownFunctionPointerType _field787;
        CDUnknownFunctionPointerType _field788;
        CDUnknownFunctionPointerType _field789;
        CDUnknownFunctionPointerType _field790;
        CDUnknownFunctionPointerType _field791;
        CDUnknownFunctionPointerType _field792;
        CDUnknownFunctionPointerType _field793;
        CDUnknownFunctionPointerType _field794;
        CDUnknownFunctionPointerType _field795;
        CDUnknownFunctionPointerType _field796;
        CDUnknownFunctionPointerType _field797;
        CDUnknownFunctionPointerType _field798;
        CDUnknownFunctionPointerType _field799;
        CDUnknownFunctionPointerType _field800;
        CDUnknownFunctionPointerType _field801;
        CDUnknownFunctionPointerType _field802;
        CDUnknownFunctionPointerType _field803;
        CDUnknownFunctionPointerType _field804;
        CDUnknownFunctionPointerType _field805;
        CDUnknownFunctionPointerType _field806;
        CDUnknownFunctionPointerType _field807;
        CDUnknownFunctionPointerType _field808;
        CDUnknownFunctionPointerType _field809;
        CDUnknownFunctionPointerType _field810;
        CDUnknownFunctionPointerType _field811;
        CDUnknownFunctionPointerType _field812;
        CDUnknownFunctionPointerType _field813;
        CDUnknownFunctionPointerType _field814;
        CDUnknownFunctionPointerType _field815;
        CDUnknownFunctionPointerType _field816;
        CDUnknownFunctionPointerType _field817;
        CDUnknownFunctionPointerType _field818;
        CDUnknownFunctionPointerType _field819;
        CDUnknownFunctionPointerType _field820;
        CDUnknownFunctionPointerType _field821;
        CDUnknownFunctionPointerType _field822;
        CDUnknownFunctionPointerType _field823;
        CDUnknownFunctionPointerType _field824;
        CDUnknownFunctionPointerType _field825;
        CDUnknownFunctionPointerType _field826;
        CDUnknownFunctionPointerType _field827;
        CDUnknownFunctionPointerType _field828;
        CDUnknownFunctionPointerType _field829;
        CDUnknownFunctionPointerType _field830;
        CDUnknownFunctionPointerType _field831;
        CDUnknownFunctionPointerType _field832;
        CDUnknownFunctionPointerType _field833;
        CDUnknownFunctionPointerType _field834;
        CDUnknownFunctionPointerType _field835;
        CDUnknownFunctionPointerType _field836;
        CDUnknownFunctionPointerType _field837;
        CDUnknownFunctionPointerType _field838;
        CDUnknownFunctionPointerType _field839;
        CDUnknownFunctionPointerType _field840;
        CDUnknownFunctionPointerType _field841;
        CDUnknownFunctionPointerType _field842;
        CDUnknownFunctionPointerType _field843;
        CDUnknownFunctionPointerType _field844;
        CDUnknownFunctionPointerType _field845;
        CDUnknownFunctionPointerType _field846;
        CDUnknownFunctionPointerType _field847;
        CDUnknownFunctionPointerType _field848;
        CDUnknownFunctionPointerType _field849;
        CDUnknownFunctionPointerType _field850;
        CDUnknownFunctionPointerType _field851;
        CDUnknownFunctionPointerType _field852;
        CDUnknownFunctionPointerType _field853;
        CDUnknownFunctionPointerType _field854;
        CDUnknownFunctionPointerType _field855;
        CDUnknownFunctionPointerType _field856;
        CDUnknownFunctionPointerType _field857;
        CDUnknownFunctionPointerType _field858;
        CDUnknownFunctionPointerType _field859;
        CDUnknownFunctionPointerType _field860;
        CDUnknownFunctionPointerType _field861;
        CDUnknownFunctionPointerType _field862;
        CDUnknownFunctionPointerType _field863;
        CDUnknownFunctionPointerType _field864;
        CDUnknownFunctionPointerType _field865;
        CDUnknownFunctionPointerType _field866;
        CDUnknownFunctionPointerType _field867;
        CDUnknownFunctionPointerType _field868;
        CDUnknownFunctionPointerType _field869;
        CDUnknownFunctionPointerType _field870;
        CDUnknownFunctionPointerType _field871;
        CDUnknownFunctionPointerType _field872;
        CDUnknownFunctionPointerType _field873;
        CDUnknownFunctionPointerType _field874;
        CDUnknownFunctionPointerType _field875;
        CDUnknownFunctionPointerType _field876;
        CDUnknownFunctionPointerType _field877;
        CDUnknownFunctionPointerType _field878;
        CDUnknownFunctionPointerType _field879;
        CDUnknownFunctionPointerType _field880;
        CDUnknownFunctionPointerType _field881;
        CDUnknownFunctionPointerType _field882;
        CDUnknownFunctionPointerType _field883;
        CDUnknownFunctionPointerType _field884;
        CDUnknownFunctionPointerType _field885;
        CDUnknownFunctionPointerType _field886;
        CDUnknownFunctionPointerType _field887;
        CDUnknownFunctionPointerType _field888;
        CDUnknownFunctionPointerType _field889;
        CDUnknownFunctionPointerType _field890;
        CDUnknownFunctionPointerType _field891;
        CDUnknownFunctionPointerType _field892;
        CDUnknownFunctionPointerType _field893;
        CDUnknownFunctionPointerType _field894;
        CDUnknownFunctionPointerType _field895;
        CDUnknownFunctionPointerType _field896;
        CDUnknownFunctionPointerType _field897;
        CDUnknownFunctionPointerType _field898;
        CDUnknownFunctionPointerType _field899;
        CDUnknownFunctionPointerType _field900;
        CDUnknownFunctionPointerType _field901;
        CDUnknownFunctionPointerType _field902;
        CDUnknownFunctionPointerType _field903;
        CDUnknownFunctionPointerType _field904;
        CDUnknownFunctionPointerType _field905;
        CDUnknownFunctionPointerType _field906;
        CDUnknownFunctionPointerType _field907;
        CDUnknownFunctionPointerType _field908;
        CDUnknownFunctionPointerType _field909;
        CDUnknownFunctionPointerType _field910;
        CDUnknownFunctionPointerType _field911;
        CDUnknownFunctionPointerType _field912;
        CDUnknownFunctionPointerType _field913;
        CDUnknownFunctionPointerType _field914;
        CDUnknownFunctionPointerType _field915;
        CDUnknownFunctionPointerType _field916;
        CDUnknownFunctionPointerType _field917;
        CDUnknownFunctionPointerType _field918;
        CDUnknownFunctionPointerType _field919;
        CDUnknownFunctionPointerType _field920;
        CDUnknownFunctionPointerType _field921;
        CDUnknownFunctionPointerType _field922;
        CDUnknownFunctionPointerType _field923;
        CDUnknownFunctionPointerType _field924;
        CDUnknownFunctionPointerType _field925;
        CDUnknownFunctionPointerType _field926;
        CDUnknownFunctionPointerType _field927;
        CDUnknownFunctionPointerType _field928;
        CDUnknownFunctionPointerType _field929;
        CDUnknownFunctionPointerType _field930;
        CDUnknownFunctionPointerType _field931;
        CDUnknownFunctionPointerType _field932;
        CDUnknownFunctionPointerType _field933;
        CDUnknownFunctionPointerType _field934;
        CDUnknownFunctionPointerType _field935;
        CDUnknownFunctionPointerType _field936;
        CDUnknownFunctionPointerType _field937;
        CDUnknownFunctionPointerType _field938;
        CDUnknownFunctionPointerType _field939;
        CDUnknownFunctionPointerType _field940;
        CDUnknownFunctionPointerType _field941;
        CDUnknownFunctionPointerType _field942;
        CDUnknownFunctionPointerType _field943;
        CDUnknownFunctionPointerType _field944;
        CDUnknownFunctionPointerType _field945;
        CDUnknownFunctionPointerType _field946;
        CDUnknownFunctionPointerType _field947;
        CDUnknownFunctionPointerType _field948;
        CDUnknownFunctionPointerType _field949;
        CDUnknownFunctionPointerType _field950;
        CDUnknownFunctionPointerType _field951;
        CDUnknownFunctionPointerType _field952;
        CDUnknownFunctionPointerType _field953;
        CDUnknownFunctionPointerType _field954;
        CDUnknownFunctionPointerType _field955;
        CDUnknownFunctionPointerType _field956;
        CDUnknownFunctionPointerType _field957;
        CDUnknownFunctionPointerType _field958;
        CDUnknownFunctionPointerType _field959;
        CDUnknownFunctionPointerType _field960;
        CDUnknownFunctionPointerType _field961;
        CDUnknownFunctionPointerType _field962;
        CDUnknownFunctionPointerType _field963;
        CDUnknownFunctionPointerType _field964;
        CDUnknownFunctionPointerType _field965;
        CDUnknownFunctionPointerType _field966;
        CDUnknownFunctionPointerType _field967;
        CDUnknownFunctionPointerType _field968;
        CDUnknownFunctionPointerType _field969;
        CDUnknownFunctionPointerType _field970;
        CDUnknownFunctionPointerType _field971;
        CDUnknownFunctionPointerType _field972;
        CDUnknownFunctionPointerType _field973;
        CDUnknownFunctionPointerType _field974;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RectPosition {
    int horiz;
    int vert;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1[3];
    int _field2;
    char _field3;
} CDStruct_7495ffd8;

typedef struct {
    float frustum[6];
    float cameraHeight;
    float cameraDistance;
} CDStruct_82b9310e;

typedef struct {
    char *_field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    void *_field6;
} CDStruct_8a8b3360;

typedef struct {
    void *_field1;
} CDStruct_7a6dc4e9;

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
} CDStruct_b2f7276a;

typedef struct {
    float left;
    float right;
    float leftBottom;
    float rightBottom;
    float leftTop;
    float rightTop;
} CDStruct_ddd3e379;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    int contourType;
    int intParam1;
    int intParam2;
    float floatParam1;
    float floatParam2;
} CDStruct_5a7f87b4;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct {
        int _field1;
        unsigned long long _field2;
        unsigned short _field3;
        unsigned char _field4[16];
        unsigned char _field5[512];
        unsigned char _field6[512];
        _Bool _field7;
        _Bool _field8;
        void *_field9;
    } _field5[0];
} CDStruct_378d7ba3;

typedef struct {
    CDStruct_82b9310e _field1;
    int _field2;
    CDStruct_818bb265 _field3[3];
    struct CGSize _field4;
} CDStruct_f8cc2bb8;

#pragma mark -

//
// File: /Applications/Messages.app/Contents/MacOS/Messages
// UUID: 9256470F-D18B-32BC-8DB7-6DAE0FFEA99C
//
//                           Arch: x86_64
//                 Source version: 4742.0.0.0.0
//       Minimum Mac OS X version: 10.10.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AVAudioPlayerDelegate <NSObject>

@optional
- (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer *)arg1 error:(NSError *)arg2;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)arg1 successfully:(BOOL)arg2;
@end

@protocol AVChatARDFeatureDelegate
- (BOOL)avFeature:(AVChatFeature *)arg1 startARDClientToParticipant:(AVChatParticipant *)arg2;
@end

@protocol AVChatLegacyDelegate

@optional
- (NSData *)avChat:(AVChat *)arg1 bitmapDataForParticipant:(AVChatParticipant *)arg2;
@end

@protocol AVControllerDelegate
- (void)invitedToAVChat:(AVChat *)arg1;

@optional
- (void)incomingNegotiationRequest:(VCChannelNegotiation *)arg1;
- (void)inviteFailedFromIMHandle:(IMHandle *)arg1 reason:(long long)arg2;
@end

@protocol AuxVideoFeatureDelegate
- (void)avChat:(AVChat *)arg1 participantEndedAuxiliaryReplacement:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantBeganAuxiliaryReplacement:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantEndedAuxiliaryInput:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantBeganAuxiliaryInput:(AVChatParticipant *)arg2;
@end

@protocol DownloadFolderImporterProtocol <NSObject>
- (void)importLegacyDownloadFolderPref:(void (^)(NSURL *))arg1;
@end

@protocol FZAuxVideoControllerProtocol
@property(readonly, nonatomic) BOOL hasAudioProvider;
@property(readonly, nonatomic) BOOL hasVideoProvider;
@end

@protocol FZVideoProcessorProtocol
@property(readonly, nonatomic) BOOL auxVideoModeIsReplacement;
@property(readonly, nonatomic) BOOL shouldCPUResize;
@property(readonly, nonatomic) id renderDelegate;
@end

@protocol FezAVRecordingAdapter <NSObject>
- (void)stop;
- (void)start;
- (void)prepare;
@end

@protocol FezAudioRecordingAdapter <FezAVRecordingAdapter>
@end

@protocol FezExtendedTableViewDataSource

@optional
- (void)fezExtendedTableView:(FezExtendedTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 movedToPoint:(struct CGPoint)arg3;
- (NSImage *)fezExtendedTableView:(FezExtendedTableView *)arg1 dragImage:(NSImage *)arg2 forRowsWithIndexes:(NSIndexSet *)arg3 tableColumns:(NSArray *)arg4 event:(NSEvent *)arg5 offset:(struct CGPoint *)arg6;
- (void)tableView:(FezExtendedTableView *)arg1 draggingEnded:(id <NSDraggingInfo>)arg2;
- (void)tableView:(FezExtendedTableView *)arg1 draggingEntered:(id <NSDraggingInfo>)arg2;
- (NSString *)tableView:(FezExtendedTableView *)arg1 cellTipForRow:(long long)arg2;
- (void)tableView:(FezExtendedTableView *)arg1 willReturnMenu:(NSMenu *)arg2 forRow:(long long)arg3;
- (NSMenu *)tableView:(FezExtendedTableView *)arg1 menuForGroupRow:(long long)arg2;
- (void)tableView:(FezExtendedTableView *)arg1 groupRowClicked:(long long)arg2;
- (NSString *)tableView:(FezExtendedTableView *)arg1 numberStringForPeopleListGroup:(FezPeopleListGroup *)arg2 ignoreCollapsed:(BOOL)arg3;
- (NSString *)tableView:(FezExtendedTableView *)arg1 numberStringForGroupRow:(long long)arg2 ignoreCollapsed:(BOOL)arg3;
- (NSString *)tableView:(FezExtendedTableView *)arg1 titleForGroupRow:(long long)arg2;
- (unsigned long long)tableView:(FezExtendedTableView *)arg1 groupRowGreaterThanIndex:(unsigned long long)arg2;
- (BOOL)tableView:(FezExtendedTableView *)arg1 groupRowAtIndex:(long long)arg2;
- (Tooltip *)tableView:(NSTableView *)arg1 tooltipForRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowTooltipForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 performDragOperation:(unsigned long long)arg2 withPasteboard:(NSPasteboard *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 deleteRows:(NSArray *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 canDeleteRows:(NSArray *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 pasteFromPasteboard:(NSPasteboard *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 canPasteFromPasteboard:(NSPasteboard *)arg2;
@end

@protocol FezExtendedTableViewDelegate

@optional
- (BOOL)tableViewShouldDrawBackgroundOverhang:(FezExtendedTableView *)arg1;
- (void)tableViewDidFinishScrolling:(FezExtendedTableView *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 prepareTooltip:(Tooltip *)arg2 row:(int)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (void)tableViewTrackingChanged:(NSTableView *)arg1;
- (void)tableView:(NSTableView *)arg1 dragStarted:(NSEvent *)arg2 originPoint:(struct CGPoint)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldStartDraggingForGroupRow:(int)arg2;
- (void)tableView:(NSTableView *)arg1 refreshTracking:(BOOL)arg2;
- (void)tableView:(NSTableView *)arg1 mouseMoved:(NSEvent *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseEntered:(NSEvent *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseExited:(NSEvent *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseUp:(NSEvent *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 mouseDown:(NSEvent *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 acceptsFirstMouse:(NSEvent *)arg2;
- (void)tableView:(NSTableView *)arg1 spaceBarPressedAtRow:(int)arg2;
- (void)tableView:(NSTableView *)arg1 returnKeyPressedAtRow:(int)arg2;
@end

@protocol FezHotKeyHandler
- (void)handleHotKey:(long long)arg1;
@end

@protocol FezUserScrollEventDelegate
- (void)fezWebView:(FezWebView *)arg1 userPerformedScrollEvent:(NSEvent *)arg2;
@end

@protocol FezVideoRecordingAdapter <FezAVRecordingAdapter>
- (struct CGSize)inputSize;
@end

@protocol FezWebViewDragDelegate

@optional
- (BOOL)fezWebViewWantsPeriodicDraggingUpdates:(FezWebView *)arg1;
- (void)fezWebView:(FezWebView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (BOOL)fezWebView:(FezWebView *)arg1 performDragOperation:(id <NSDraggingInfo>)arg2;
- (BOOL)fezWebView:(FezWebView *)arg1 prepareForDragOperation:(id <NSDraggingInfo>)arg2;
- (void)fezWebView:(FezWebView *)arg1 draggingExited:(id <NSDraggingInfo>)arg2;
- (unsigned long long)fezWebView:(FezWebView *)arg1 draggingUpdated:(id <NSDraggingInfo>)arg2;
- (unsigned long long)fezWebView:(FezWebView *)arg1 draggingEntered:(id <NSDraggingInfo>)arg2;
- (void)fezWebViewShouldRegisterForDraggedTypes:(FezWebView *)arg1;
@end

@protocol FezWebViewPasteboardDelegate
- (void)insertTextFromSelectedMessageToPasteboard:(NSPasteboard *)arg1;
- (BOOL)hasSelectedMessages;
@end

@protocol FezWebViewQuickLookDelegate
- (BOOL)fezWebView:(FezWebView *)arg1 quickLookWithEvent:(NSEvent *)arg2;
@end

@protocol FezWebViewViewDelegate

@optional
- (void)fezWebViewDidMoveToWindow:(FezWebView *)arg1;
- (void)fezWebViewDidEndLiveResize:(FezWebView *)arg1;
- (void)fezWebViewWillStartLiveResize:(FezWebView *)arg1;
- (void)fezWebView:(FezWebView *)arg1 setFrameSize:(struct CGSize)arg2;
@end

@protocol FileDragOutViewDelegate <NSObject>
- (void)fileDragOutView:(FileDragOutView *)arg1 fileDoubleClicked:(FileTransfer *)arg2;
- (void)fileDragOutView:(FileDragOutView *)arg1 file:(FileTransfer *)arg2 draggedTo:(NSString *)arg3;
- (BOOL)fileDragOutView:(FileDragOutView *)arg1 shouldDragFile:(FileTransfer *)arg2;
@end

@protocol FrameListener <NSObject>
- (void)frameNotifier:(FrameNotifier *)arg1 postedNewFrame:(id)arg2;
@end

@protocol IKPictureTakerVideoProvider
- (BOOL)canStartGrabbing;
- (void)stopGrabbing;
- (void)startGrabbingForReceiver:(id)arg1;
@end

@protocol IKProfilePictureDelegate

@optional
- (NSData *)imageDataForProfilePictureView:(IKProfilePictureView *)arg1;
- (NSString *)nameOfFileDroppedFromProfilePictureView:(IKProfilePictureView *)arg1;
- (void)profilePictureView:(IKProfilePictureView *)arg1 attributedImageDidChange:(IKProfilePictureAttributedImage *)arg2;
- (void)profilePictureView:(IKProfilePictureView *)arg1 imageDidChange:(NSImage *)arg2;
- (void)profilePictureViewDidStopEditing:(IKProfilePictureView *)arg1;
- (void)profilePictureViewWillStartEditing:(IKProfilePictureView *)arg1 fromDrop:(BOOL)arg2;
- (void)profilePictureViewWillStartEditing:(IKProfilePictureView *)arg1;
@end

@protocol IMAuxVideoProvider
- (oneway void)performActionForControlWithDictionaryRepresentation:(NSDictionary *)arg1;
- (oneway void)disconnectAndActivate:(BOOL)arg1;
- (oneway void)setBufferPoolDescription:(NSData *)arg1 audioDeviceUID:(NSString *)arg2 channels:(NSArray *)arg3;
- (oneway void)provideFrameAtFramerate:(double)arg1;
@end

@protocol IMAuxVideoReceiver
- (oneway void)provider:(NSString *)arg1 updateControlBarFromDictionaryRepresentation:(NSDictionary *)arg2;
- (oneway void)provider:(NSString *)arg1 sentBuffer:(int)arg2 withAttachments:(NSDictionary *)arg3;
- (oneway void)provider:(NSString *)arg1 bundleID:(NSString *)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(NSDictionary *)arg7;
@end

@protocol IMChatSendProgressDelegate <NSObject>
- (void)chat:(IMChat *)arg1 progressDidChange:(float)arg2 sendingMessages:(NSDictionary *)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(BOOL)arg6;
@end

@protocol IMDirectlyObservableObjectObserver
- (void)objectDidPostDirectNotification:(NSNotification *)arg1;
@end

@protocol IMPreferencePaneControllerProtocol
- (void)updateBottomText;

@optional
- (NSObject<NSCoding> *)encodableState;
- (void)restoreState:(NSObject<NSCoding> *)arg1;
@end

@protocol IMPreferencePaneProtocol
- (NSView *)prefView;
- (void)loadAccount:(IMAccount *)arg1;
- (void)updateAccountState;
- (void)updateAccountActive;
- (void)clearWarnings;
- (void)setDelegate:(id <IMPreferencePaneControllerProtocol>)arg1;

@optional
- (void)logout;
- (void)windowLostFocus;
- (void)windowBecameMain;
- (void)wasDisplayed;
- (void)willBeDisplayed;
- (NSString *)currentBottomText;
- (NSString *)currentHelpTag;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol MessagesEventControllerHandler
- (NSDictionary *)performActionsForEvent:(int)arg1 withIMHandle:(IMHandle *)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;
@end

@protocol MyStatusControlDelegate
- (NSString *)nowPlayingString;
- (NSString *)currentMessage;
- (BOOL)isInvisible;
- (void)setInvisible:(BOOL)arg1;
- (BOOL)supportsInvisible;
- (int)desiredStatus;
- (int)currentStatus;
- (BOOL)validateMessage:(NSString *)arg1 forStatus:(int)arg2;
- (NSArray *)customMessagesForStatus:(int)arg1;
- (NSImage *)imageForStatus:(int)arg1;
- (NSString *)nameForStatus:(int)arg1;
- (BOOL)usingTemplateMessage;
- (void)myStatusControl:(MyStatusControl *)arg1 addedMessage:(NSString *)arg2 forStatus:(int)arg3;
- (void)myStatusControl:(MyStatusControl *)arg1 changedStatus:(int)arg2 message:(NSString *)arg3;
@end

@protocol NSActivityApplicationDelegate <NSApplicationDelegate>

@optional
- (void)application:(NSApplication *)arg1 didRestoreActivity:(LSUserActivity *)arg2 windows:(NSArray *)arg3;
- (BOOL)application:(NSApplication *)arg1 willSaveActivity:(LSUserActivity *)arg2;
- (void)application:(NSApplication *)arg1 restoreWindowForActivity:(LSUserActivity *)arg2 identifier:(NSString *)arg3 coder:(NSCoder *)arg4 completionHandler:(void (^)(NSWindow *, NSError *))arg5;
- (BOOL)application:(NSApplication *)arg1 openActivity:(LSUserActivity *)arg2;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(NSAnimation *)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(NSAnimation *)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(NSAnimation *)arg1;
- (void)animationDidStop:(NSAnimation *)arg1;
- (BOOL)animationShouldStart:(NSAnimation *)arg1;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeOcclusionState:(NSNotification *)arg1;
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (void)application:(NSApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(NSApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (BOOL)application:(NSApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (BOOL)application:(NSApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (NSString *)panel:(id)arg1 userEnteredFilename:(NSString *)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(NSURL *)arg2;
- (BOOL)panel:(id)arg1 validateURL:(NSURL *)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(NSURL *)arg2;
@end

@protocol NSPasteboardItemDataProvider <NSObject>
- (void)pasteboard:(NSPasteboard *)arg1 item:(NSPasteboardItem *)arg2 provideDataForType:(NSString *)arg3;

@optional
- (void)pasteboardFinishedWithDataProvider:(NSPasteboard *)arg1;
@end

@protocol NSScrollViewDelegate <NSObject>

@optional
- (NSArray *)magnificationInflectionPointsForScrollView:(NSScrollView *)arg1;
- (void)scrollView:(NSScrollView *)arg1 didChangePresentationOrigin:(struct CGPoint)arg2 active:(BOOL)arg3;
- (double)scrollView:(NSScrollView *)arg1 pageAlignedOriginOnAxis:(long long)arg2 forProposedDestination:(double)arg3 currentOrigin:(double)arg4 initialOrigin:(double)arg5 velocity:(double)arg6;
- (void)didEndScrollInScrollView:(NSScrollView *)arg1;
- (void)didScrollInScrollView:(NSScrollView *)arg1;
- (void)didBeginScrollInScrollView:(NSScrollView *)arg1;
@end

@protocol NSServicesMenuRequestor <NSObject>

@optional
- (BOOL)readSelectionFromPasteboard:(NSPasteboard *)arg1;
- (BOOL)writeSelectionToPasteboard:(NSPasteboard *)arg1 types:(NSArray *)arg2;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSTokenFieldDelegate <NSTextFieldDelegate>

@optional
- (unsigned long long)tokenField:(NSTokenField *)arg1 styleForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(NSTokenField *)arg1 hasMenuForRepresentedObject:(id)arg2;
- (NSMenu *)tokenField:(NSTokenField *)arg1 menuForRepresentedObject:(id)arg2;
- (NSArray *)tokenField:(NSTokenField *)arg1 readFromPasteboard:(NSPasteboard *)arg2;
- (BOOL)tokenField:(NSTokenField *)arg1 writeRepresentedObjects:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (id)tokenField:(NSTokenField *)arg1 representedObjectForEditingString:(NSString *)arg2;
- (NSString *)tokenField:(NSTokenField *)arg1 editingStringForRepresentedObject:(id)arg2;
- (NSString *)tokenField:(NSTokenField *)arg1 displayStringForRepresentedObject:(id)arg2;
- (NSArray *)tokenField:(NSTokenField *)arg1 shouldAddObjects:(NSArray *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)tokenField:(NSTokenField *)arg1 completionsForSubstring:(NSString *)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
@end

@protocol NSUserNotificationCenterDelegate <NSObject>

@optional
- (BOOL)userNotificationCenter:(NSUserNotificationCenter *)arg1 shouldPresentNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didActivateNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didDeliverNotification:(NSUserNotification *)arg2;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSWindowRestoration <NSObject>
+ (void)restoreWindowWithIdentifier:(NSString *)arg1 state:(NSCoder *)arg2 completionHandler:(void (^)(NSWindow *, NSError *))arg3;
@end

@protocol OrderedSetControllerDelegate <NSObject>

@optional
- (void)orderedSetController:(OrderedSetController *)arg1 didReplaceFilteredContents:(NSArray *)arg2 atIndexes:(NSIndexSet *)arg3;
- (void)orderedSetController:(OrderedSetController *)arg1 didMoveFilteredContents:(NSArray *)arg2 atIndexes:(NSIndexSet *)arg3 toFilteredContents:(NSArray *)arg4 atIndexes:(NSIndexSet *)arg5;
- (void)orderedSetController:(OrderedSetController *)arg1 didRemoveFilteredContents:(NSArray *)arg2 fromIndexes:(NSIndexSet *)arg3;
- (void)orderedSetController:(OrderedSetController *)arg1 didInsertFilteredContentsAtIndexes:(NSIndexSet *)arg2;
- (void)orderedSetControllerSelectionDidChange:(NSNotification *)arg1;
@end

@protocol PeopleListDelegate <NSObject>
- (void)peopleListSelectedItemInfoChanged:(PeopleList *)arg1;
- (NSMenu *)peopleList:(PeopleList *)arg1 menuForGroup:(NSString *)arg2;
- (BOOL)peopleList:(PeopleList *)arg1 forceDeleteGroup:(NSString *)arg2;
- (BOOL)peopleList:(PeopleList *)arg1 deletePeople:(id)arg2;
- (BOOL)peopleList:(PeopleList *)arg1 pastePeople:(NSArray *)arg2 intoGroup:(NSString *)arg3 atLocation:(long long)arg4;
- (BOOL)peopleList:(PeopleList *)arg1 people:(NSArray *)arg2 draggedFromGroups:(NSArray *)arg3 toGroup:(NSString *)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (void)peopleList:(PeopleList *)arg1 addPersonWithoutID:(IMPerson *)arg2 toGroup:(NSString *)arg3;
- (void)peopleList:(PeopleList *)arg1 setGroupsSortOrder:(NSArray *)arg2;
- (NSArray *)peopleList:(PeopleList *)arg1 filterIMHandleFromPasteboard:(IMHandle *)arg2;
- (void)peopleList:(PeopleList *)arg1 deleteGroup:(NSString *)arg2;
- (BOOL)canModifyBuddiesInPeopleList:(PeopleList *)arg1;
- (BOOL)peopleList:(PeopleList *)arg1 canRemoveRows:(NSArray *)arg2;
- (NSArray *)peopleList:(PeopleList *)arg1 addablePeople:(NSArray *)arg2;
- (double)peopleList:(PeopleList *)arg1 alphaForStatus:(unsigned long long)arg2;
- (NSString *)peopleList:(PeopleList *)arg1 alternateNameTextForIMHandle:(IMHandle *)arg2;
- (NSString *)peopleList:(PeopleList *)arg1 alternateStatusTextForIMHandle:(IMHandle *)arg2;

@optional
- (void)peopleList:(FezPeopleList *)arg1 tableViewDidScroll:(NSTableView *)arg2;
- (void)peopleList:(FezPeopleList *)arg1 tableView:(NSTableView *)arg2 contentDidResize:(struct CGSize)arg3;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@protocol QLPreviewSlideshowDelegate
- (void)slideshowGoToNextItem:(QLPreviewSlideshow *)arg1;
@end

@protocol QLPreviewViewDelegate <NSObject>

@optional
- (BOOL)previewView:(QLPreviewView *)arg1 canShowPathForItem:(id <QLPreviewItem>)arg2;
- (unsigned long long)previewView:(QLPreviewView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)previewView:(QLPreviewView *)arg1 writePreviewItem:(id <QLPreviewItem>)arg2 toPasteboard:(NSPasteboard *)arg3;
- (NSArray *)previewView:(QLPreviewView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forPreviewItem:(id <QLPreviewItem>)arg3;
- (BOOL)previewView:(QLPreviewView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 onPreviewItem:(id <QLPreviewItem>)arg3;
- (unsigned long long)previewView:(QLPreviewView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 onPreviewItem:(id <QLPreviewItem>)arg3;
- (NSView<QLPreviewCustomView> *)previewView:(QLPreviewView *)arg1 customViewForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewView:(QLPreviewView *)arg1 shouldPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 timedOutLoadingPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 didShowPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 willShowPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 didLoadPreviewItem:(id <QLPreviewItem>)arg2;
- (void)previewView:(QLPreviewView *)arg1 willLoadPreviewItem:(id <QLPreviewItem>)arg2;
@end

@protocol QLSeamlessOpenerDelegate <NSObject>

@optional
- (NSWindow *)seamlessOpener:(QLSeamlessOpener *)arg1 transientWindowForItem:(id <QLPreviewItem>)arg2;
- (NSImage *)seamlessOpener:(QLSeamlessOpener *)arg1 transientImageAtFrame:(struct CGRect *)arg2 forItem:(id <QLPreviewItem>)arg3;
- (void)seamlessOpener:(QLSeamlessOpener *)arg1 failedToOpenItems:(NSArray *)arg2 withError:(NSError *)arg3;
- (void)seamlessOpener:(QLSeamlessOpener *)arg1 openedItem:(id <QLPreviewItem>)arg2 seamlessly:(BOOL)arg3;
- (NSWindow *)seamlessOpenerTransientWindow:(QLSeamlessOpener *)arg1 level:(long long *)arg2;
- (int)seamlessOpener:(QLSeamlessOpener *)arg1 supportForPreviewItem:(id <QLPreviewItem>)arg2;
- (NSImage *)seamlessOpener:(QLSeamlessOpener *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (NSImage *)seamlessOpener:(QLSeamlessOpener *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3 windowLevel:(long long *)arg4;
- (struct CGRect)seamlessOpener:(QLSeamlessOpener *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (QLPreviewBubble *)seamlessOpener:(QLSeamlessOpener *)arg1 sourceBubbleForPreviewItem:(id <QLPreviewItem>)arg2;
- (QLPreviewView *)seamlessOpener:(QLSeamlessOpener *)arg1 sourcePreviewViewForPreviewItem:(id <QLPreviewItem>)arg2;
@end

@protocol RecordingFeatureDelegate
- (void)avChat:(AVChat *)arg1 participantRequestedRecording:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantDeniedRecording:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantGrantedRecording:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantFinishedRecording:(AVChatParticipant *)arg2;
- (void)avChat:(AVChat *)arg1 participantBeginRecording:(AVChatParticipant *)arg2;
@end

@protocol RolloverButtonDelegate
- (NSMenu *)menuForMyRolloverButton:(RolloverButton *)arg1;
@end

@protocol SOAlertsHelperAppleScriptDelegate <NSObject>
- (void)performActionScriptForChatGUID:(NSString *)arg1 handleID:(NSString *)arg2 messageText:(NSString *)arg3 accountGUID:(NSString *)arg4 event:(int)arg5;
@end

@protocol SOCreateAccountViewControllerDelegate <SOServerPageControllerDelegate>
- (void)createAccountViewController:(SOCreateAccountViewController *)arg1 didFinishWithAppleID:(NSString *)arg2 authID:(NSString *)arg3 authToken:(NSString *)arg4;
- (void)createAccountViewController:(SOCreateAccountViewController *)arg1 didFinishWithAppleID:(NSString *)arg2 password:(NSString *)arg3;
@end

@protocol SOInputLineViewControllerDelegate <NSObject>

@optional
- (NSArray *)completionsForPartialString:(NSString *)arg1;
- (NSUndoManager *)undoManagerForInputLineManager:(NSUndoManager *)arg1;
- (void)inputLineDidEnter:(SOInputLineViewController *)arg1 isAudioMessage:(BOOL)arg2;
- (void)inputLineTextDidChange:(SOInputLineViewController *)arg1;
@end

@protocol SOServerPageControllerDelegate
- (void)serverPageController:(SOServerPageController *)arg1 didFinishWithError:(NSError *)arg2;
- (void)serverPageControllerDidLoad:(SOServerPageController *)arg1;
@end

@protocol SOURLFetcherDelegate
- (void)urlFetcher:(SOURLFetcher *)arg1 fetchFailedWithError:(NSError *)arg2;
- (void)urlFetcher:(SOURLFetcher *)arg1 fetchedResult:(NSData *)arg2;
@end

@protocol SOUnreadCountHelperDelegate <NSObject>
- (void)markChatGUIDAsRead:(NSString *)arg1;
- (BOOL)isChatActive:(NSString *)arg1;
@end

@protocol SSFrameBufferViewDelegate <NSObject>
- (void)ssFrameBufferView:(SSFrameBufferView *)arg1 didDropRemotePaths:(NSArray *)arg2 atLocalDropDestination:(NSURL *)arg3;
@end

@protocol SSSessionDelegate <NSObject>

@optional
- (BOOL)handleSSInputEvent:(SSInputEvent *)arg1;
- (void)ssSessionResumed:(SSSession *)arg1;
- (void)ssSessionPaused:(SSSession *)arg1;
- (void)ssSession:(SSSession *)arg1 allowsControl:(BOOL)arg2;
- (void)ssSession:(SSSession *)arg1 canToggleCurtainModeChanged:(BOOL)arg2;
- (void)ssSession:(SSSession *)arg1 onConsoleChanged:(BOOL)arg2;
- (void)ssSessionDisplaysDidSleep:(SSSession *)arg1;
- (void)ssSessionDisplaysDidWake:(SSSession *)arg1;
- (void)ssSessionUserClosedConnection:(SSSession *)arg1;
- (BOOL)hasHotkeyForKeyCode:(NSNumber *)arg1;
- (void)ssSession:(SSSession *)arg1 virtualDisplayStateChanged:(BOOL)arg2;
- (void)ssSessionUserPictureChanged:(SSSession *)arg1;
- (void)ssSessionBeeped:(SSSession *)arg1;
- (void)ssSession:(SSSession *)arg1 fileCopyDidComplete:(SSFileCopy *)arg2;
- (void)ssSession:(SSSession *)arg1 fileCopyProgressDidUpdate:(SSFileCopy *)arg2;
- (void)ssSession:(SSSession *)arg1 dragDroppedLocalPaths:(NSArray *)arg2 onRemotePath:(NSString *)arg3;
- (void)ssSession:(SSSession *)arg1 systemInfoRequestCompleted:(NSDictionary *)arg2;
- (void)ssSessionRemotePasteboardChanged:(SSSession *)arg1;
- (void)ssSession:(SSSession *)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSession:(SSSession *)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(SSSession *)arg1 sizeChanged:(struct SSSize)arg2;
- (void)ssSessionReady:(SSSession *)arg1;
- (void)ssSession:(SSSession *)arg1 sessionSelectionResult:(int)arg2;
- (void)ssSession:(SSSession *)arg1 wantsSessionSelection:(NSArray *)arg2 consoleUser:(NSString *)arg3;
- (void)ssSession:(SSSession *)arg1 authenticationResult:(int)arg2;
- (void)ssSession:(SSSession *)arg1 wantsCredentialsForAuthenticationTypes:(NSArray *)arg2;
- (void)ssSessionTerminated:(SSSession *)arg1;
- (void)ssSession:(SSSession *)arg1 connectDidFail:(int)arg2;
- (void)ssSession:(SSSession *)arg1 delegateControlModeSet:(long long)arg2;
@end

@protocol ServiceFieldControllerDelegate
- (NSMenu *)contextMenuForHandle;
- (void)handlesFieldDidChange:(NSArray *)arg1 service:(Service *)arg2;
@end

@protocol ServicePopUpDelegate <NSObject>

@optional
- (void)servicePopUpSelectionDidChange:(ServicePopUp *)arg1;
@end

@protocol TKTonePickerViewControllerDelegate <NSObject>

@optional
- (void)tonePickerViewController:(TKTonePickerViewController *)arg1 selectedToneWithIdentifier:(NSString *)arg2;
@end

@protocol VCRenderDelegateProtocol
- (int)resizeRemoteVideoForUserID:(NSString *)arg1 outBuffer:(struct __CVBuffer *)arg2;
- (int)processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(NSNumber *)arg3;
@end

@protocol ViewTableDelegate <NSObject>

@optional
- (void)quicklookSelectedRowsInViewTable:(ViewTable *)arg1;
- (void)deleteSelectedRowsInViewTable:(ViewTable *)arg1;
- (void)openSelectedRowsInViewTable:(ViewTable *)arg1;
- (void)selectionDidChangeForViewTable:(ViewTable *)arg1;
@end

@interface StatusController : NSObject <NSMenuDelegate, RolloverButtonDelegate, MyStatusControlDelegate>
{
    MyStatusControl *_statusControl;
    MyNameControl *_nameControl;
    MyStatusImageControl *_statusImageControl;
    NSMenu *_nameControlMenu;
    NSMutableArray *_customAvailableMessages;
    NSMutableArray *_customAwayMessages;
    NSArray *_accounts;
    NSString *_lastSetStatusMessage;
    unsigned long long _lastSetNormalStatus;
    unsigned int _lastSetInvisibleStatus:1;
    unsigned int _finishedInitializing:1;
    unsigned int _supportsInvisible:1;
    unsigned int _isInvisible:1;
    unsigned int _isEntirelyInvisible:1;
    unsigned int _ignoreSameStatus:1;
    unsigned int _statusImageControlRetained:1;
    unsigned int _statusControlRetained:1;
    BOOL _isReadingCustomMessagePrefs;
}

@property(nonatomic) BOOL isReadingCustomMessagePrefs; // @synthesize isReadingCustomMessagePrefs=_isReadingCustomMessagePrefs;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)setInvisible:(BOOL)arg1;
- (void)_setInvisibleFromMenu:(id)arg1;
- (void)_setOfflineFromMenu:(id)arg1;
- (void)_setAwayFromMenu:(id)arg1;
- (void)_setAvailableFromMenu:(id)arg1;
- (void)_setStatusToStatus:(unsigned long long)arg1;
- (BOOL)supportsInvisible;
- (BOOL)_isCurrentlyCustomStatus;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)_setMyStatusFromItem:(id)arg1;
- (id)menuForMyRolloverButton:(id)arg1;
- (id)currentMessage;
- (id)currentRealMessage;
- (BOOL)usingTemplateMessage;
- (id)_myStatusMessage;
- (unsigned long long)_myLeastAvailableStatus;
- (unsigned long long)_myStatus;
- (id)nowPlayingString;
- (int)lowestStatus;
- (int)currentStatus;
- (int)leastAvailableStatus;
- (BOOL)isEntirelyInvisible;
- (BOOL)isInvisible;
- (void)_checkInvisible;
- (int)desiredLeastAvailableStatus;
- (int)desiredStatus;
- (BOOL)validateMessage:(id)arg1 forStatus:(int)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (id)customMessagesForStatus:(int)arg1;
- (id)imageForStatus:(int)arg1;
- (id)nameForStatus:(int)arg1;
- (void)myStatusControl:(id)arg1 addedMessage:(id)arg2 forStatus:(int)arg3;
- (void)myStatusControl:(id)arg1 changedStatus:(int)arg2 message:(id)arg3 changeAllAccounts:(BOOL)arg4;
- (void)myStatusControl:(id)arg1 changedStatus:(int)arg2 message:(id)arg3;
- (void)_status:(unsigned long long)arg1 toCustomMessageList:(id *)arg2 andPrefsName:(id *)arg3;
- (BOOL)_trimStatusMessagesForStatus:(int)arg1;
- (void)_trimStaleTimeStamps;
- (void)_touchStatusMessage:(id)arg1 forStatus:(int)arg2;
- (void)_removeMessage:(id)arg1 forStatus:(int)arg2;
- (BOOL)_timeExistsForStatusMessage:(id)arg1 forStatus:(int)arg2;
- (void)viewAsHandle:(id)arg1;
- (void)viewAsName:(id)arg1;
- (void)changeShowSingleStatus:(id)arg1;
- (void)editCustomMessages:(id)arg1;
- (void)customStatusMessagesChanged:(id)arg1;
- (void)trimStatusMessages;
- (void)nowPlayingInfoChanged:(id)arg1;
- (void)serviceStatusChanged:(id)arg1;
- (void)myStatusChanged:(id)arg1;
- (void)invisibleStatusChanged:(id)arg1;
- (void)accountCapsChanged:(id)arg1;
- (void)accountUpdated:(id)arg1;
- (void)showMyStatus;
- (void)updateNameField;
- (void)setIgnoreSameStatusForAllAccounts:(BOOL)arg1;
- (void)showError:(id)arg1;
- (void)_rebuildStatusControlMenu;
- (void)_readCustomMessagesFromPrefs;
- (void)_saveCustomMessages;
- (BOOL)_importLegacyStatusMessagesIfNecessary;
- (BOOL)_loadDefaultStatusMessagesIfNecessary;
- (id)accounts;
- (void)setAccount:(id)arg1;
- (void)setAccounts:(id)arg1;
- (id)statusControl;
- (void)setStatusControl:(id)arg1;
- (id)statusImageControl;
- (void)setStatusImageControl:(id)arg1;
- (void)_configureInvisibleSupport;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)finishInitializing;
- (void)_statusIndicatorDidChange:(id)arg1;
- (void)updateStatusImage;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChatDoc : NSDocument
{
    NSString *_spotlightSearchString;
    NSData *_loadData;
    NSString *_chatGUID;
}

+ (id)currentSpotlightSearchString;
@property(retain, nonatomic) NSString *chatGUID; // @synthesize chatGUID=_chatGUID;
- (void).cxx_destruct;
- (void)chatDidFailToLoad;
- (void)chatDidLoad:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)_daemonConnected:(id)arg1;
- (void)makeWindowControllers;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) SingleChatWindowController *chatWindowController; // @dynamic chatWindowController;

@end

@interface FezPreferences : NSPreferences
{
    BOOL _hasChangedModes;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)delayedLaunchComplete:(id)arg1;
+ (void)finishStateRestoration;
+ (void)initialize;
- (void)cancel:(id)arg1;
- (void)_selectModuleOwner:(id)arg1;
- (id)selectModuleOfClass:(Class)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowWillClose:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)usesButtons;
- (BOOL)usesNewLayout;
- (struct CGSize)preferencesContentSize;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)showPreferencesPanel;
- (void)removePreferenceNamed:(id)arg1 owner:(id)arg2;
- (void)addPreferenceNamed:(id)arg1 owner:(id)arg2;
- (BOOL)containsPreferenceNamed:(id)arg1 owner:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MessageEditorController : NSObject
{
    NSWindow *_window;
    NSTableView *_availableTable;
    NSTableView *_awayTable;
    NSButton *_availableAddButton;
    NSButton *_awayAddButton;
    NSButton *_availableRemoveButton;
    NSButton *_awayRemoveButton;
    NSButton *_autoCreateCheckbox;
    NSPopUpButton *_rememberLastPopup;
    NSMutableArray *_availableMessages;
    NSMutableArray *_awayMessages;
    NSMutableArray *_previousAvailableMessages;
    NSMutableArray *_previousAwayMessages;
    NSString *_messageToSet;
    BOOL _setMessage;
    unsigned long long _startingStatus;
    NSArray *_accounts;
    NSLayoutConstraint *_spuriousTableWidth;
    NSLayoutConstraint *_awayButtonsSeparationConstraint;
    NSView *_availableScrollView;
    NSView *_awayScrollView;
}

- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(int)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(int)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (int)numberOfRowsInTableView:(id)arg1;
- (void)changeNumberOfRememberedMessages:(id)arg1;
- (void)autoCreateChecked:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)newItem:(id)arg1;
- (void)_determineList:(id *)arg1 andTable:(id *)arg2 toUseForStatus:(unsigned long long)arg3;
- (void)setAwayMessages:(id)arg1;
- (void)setAvailableMessages:(id)arg1;
- (id)awayMessages;
- (id)availableMessages;
- (void)endSheet:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_trimList:(id)arg1;
- (void)runAsSheetInWindow:(id)arg1 forAccounts:(id)arg2;
- (void)setCurrentStatus:(unsigned long long)arg1 andMessage:(id)arg2;
- (id)currentMessage;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_statusIndicatorDidChange:(id)arg1;

@end

@interface AbbreviatingTextField : NSTextField
{
    BOOL _verticallyCentered;
    NSShadow *_shadow;
    BOOL _sendsActionOnClick;
    NSString *_axDescriptionAttribute;
}

- (void)setLocalizedAccessibilityDescriptionAttribute:(id)arg1;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)performClick:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)arg1;
- (void)_sendAction;
- (BOOL)sendsActionOnClick;
- (void)setSendsActionOnClick:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isVerticallyCentered;
- (void)setVerticallyCentered:(BOOL)arg1;
- (void)setStrongBlackShadow;
- (void)setWhiteBevel;
- (void)setNoShadow;
- (void)_setColor:(id)arg1 offset:(float)arg2 blurRadius:(float)arg3;
- (id)shadow;
- (void)setShadow:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInitForTextField;

@end

@interface MyStatusControl : RolloverButton
{
    id <MyStatusControlDelegate> _statusDelegate;
    int _currentStatus;
    int _oldStatus;
    BOOL _isiTunesMessage;
    BOOL _disableBorderInEditMode;
}

+ (BOOL)stringIsStatusType:(id)arg1;
- (void)setTitleAttributes:(id)arg1;
- (void)setDisableBorderInEditMode:(BOOL)arg1;
- (void)setEditBackgroundColor:(id)arg1;
- (id)statusDelegate;
- (void)setStatusDelegate:(id)arg1;
- (void)editMessageField:(BOOL)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)setCurrentStatus:(int)arg1;
- (int)currentStatus;
- (id)currentMessage;
- (void)setTitle:(id)arg1;
- (void)setCurrentMessage:(id)arg1;
- (float)_fgTextColorForRollover:(BOOL)arg1;
- (float)_bgTextColorForRollover:(BOOL)arg1;
- (struct CGRect)triangleRect;
- (BOOL)isFlipped;
- (void)_windowResignedKey:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)_revertToOldStatus;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (void)customStatusAndMessage:(id)arg1;
- (void)startEditingCurrentStatus;
- (void)_startEditingCurrentStatus;
- (void)setInvisibleStatus:(id)arg1;
- (void)setStatusAndMessage:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)addMenuItemsForStatus:(unsigned long long)arg1 customizable:(BOOL)arg2;
- (void)addMenuItemForITunesStatus;
- (void)addMenuItemForInvisible;
- (void)setStatus:(int)arg1 message:(id)arg2;
- (void)awakeFromNib;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityTitleAttribute;

@end

@interface AddBuddy : NSObject
{
    NSWindow *_recordWindow;
    NSView *_topReferenceView;
    NSTextField *_addCardTitle;
    CollapseView *_accountsCollapseView;
    ServicePopUp *_toAccountPopup;
    CollapseView *_groupsCollapseView;
    NSPopUpButton *_proposedGroupPopUpButton;
    ExtendedComboBox *_proposedFirstNameTextField;
    ExtendedComboBox *_proposedLastNameTextField;
    NSButton *_disclosure;
    NSView *_pickerArea;
    NSView *_titleView;
    ABPeoplePickerView *_pickerView;
    NSButton *_proposedAddButton;
    NSTextField *_proposedNameField;
    PeoplePicker *_picker;
    AddBuddyNameHelper *_buddyNameHelper;
    NSWindow *_buddyWindow;
    IMHandle *_imHandle;
    ABPerson *_abPerson;
    NSArray *_accounts;
    NSString *_targetGroup;
    PeopleListController *_peopleListController;
    NSMutableArray *_abAddressesCache;
    NSMutableArray *_abFirstNameCache;
    NSMutableArray *_abLastNameCache;
    NSMutableDictionary *_abFirstNameToLastNameCache;
    NSMutableDictionary *_abLastNameToFirstNameCache;
    IMHandle *_cachedSelectedIMHandle;
    ABPerson *_cachedSelectedPerson;
    NSString *_cachedKeyName;
    NSArray *_cachedPossibleNames;
    struct CGRect _originalBuddyListFrame;
    struct CGRect _initialSheetBuddyListFrame;
    struct CGRect _smallSheetBuddyListFrame;
    struct CGRect _largeSheetBuddyListFrame;
    struct CGSize _minExpandedSheetSize;
    struct CGSize _collapsedSheetSize;
    struct CGSize _expandedSheetSize;
    unsigned int _lockAccountSelection:1;
}

- (id)comboBox:(id)arg1 completedString:(id)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(int)arg2;
- (int)numberOfItemsInComboBox:(id)arg1;
- (id)_possibleLastNames;
- (id)_possibleFirstNames;
- (id)_completedLastName;
- (id)_completedFirstName;
- (void)nameChanged:(id)arg1;
- (BOOL)_fillAccountInformationIfNecessary;
- (id)_selectedIMHandleForABPerson:(id)arg1;
- (void)togglePickerView:(id)arg1;
- (void)cancelChanges:(id)arg1;
- (void)extendedComboBoxDidPressEnter:(id)arg1;
- (void)_acceptEntry;
- (void)accountSelectionChanged:(id)arg1;
- (void)chooseAccountName:(id)arg1;
- (BOOL)isPickerVisible;
- (BOOL)_abPersonAndFieldsAreTheSame;
- (void)_updateFromABPerson;
- (void)_updateFromABPersonForce:(BOOL)arg1 setAsNotAutoFilled:(BOOL)arg2;
- (BOOL)_firstOrLastNameCustomized;
- (BOOL)_lastNameCustomized;
- (BOOL)_firstNameCustomized;
- (BOOL)_isAccountUserCustomized;
- (id)_selectedGroup;
- (void)_validateAddButton;
- (void)_synchronizeDisclosureArea;
- (void)_peopleListControllerRepresentedAccountsChanged:(id)arg1;
- (void)_accountStatusChanged:(id)arg1;
- (void)_peoplePickerPalettePropertyChanged:(id)arg1;
- (void)_peoplePickerPaletteUpdated:(id)arg1;
- (void)_peoplePickerValueUpdated:(id)arg1;
- (void)comboBoxSelectionIsChanging:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (void)comboBoxWillDismiss:(id)arg1;
- (void)comboBoxWillPopUp:(id)arg1;
- (void)_controlTextDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)buddyNameFieldDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)addressBookChanged:(id)arg1;
- (id)_selectedService;
- (id)_selectedAccount;
- (void)_setGroups:(id)arg1;
- (void)_setBuddyWindow:(id)arg1;
- (void)_setABPerson:(id)arg1;
- (void)setAccountSelectionLocked:(BOOL)arg1;
- (void)setTargetGroup:(id)arg1;
- (void)setIMHandle:(id)arg1;
- (struct CGRect)rectForRecordSheetResizedTo:(struct CGSize)arg1;
- (void)dismissRecordSheet:(id)arg1;
- (void)_displayRecordSheet;
- (void)_recordSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_setupNewRecordSheet;
- (void)_acceptRecord;
- (void)_setAccountName:(id)arg1;
- (void)_clearFields;
- (void)_rebuildAddressBookInformation;
- (void)_registerForNotifications;
- (void)_configurePeoplePickerPaletteForMe;
- (void)_configureTitleForLockedIMHandle;
- (void)_configureAccountsAndGroups;
- (void)openForNewIMHandleWithGroups:(id)arg1 buddyWindow:(id)arg2;
- (void)openForIMHandle:(id)arg1 groups:(id)arg2 buddyWindow:(id)arg3;
- (void)openForABPerson:(id)arg1 imHandle:(id)arg2 groups:(id)arg3 buddyWindow:(id)arg4;
- (void)openForABPerson:(id)arg1 groups:(id)arg2 buddyWindow:(id)arg3;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithPeopleListController:(id)arg1;
- (id)initWithAccounts:(id)arg1;
- (id)_init;

@end

@interface GoToChat : NSWindowController <NSWindowRestoration>
{
    NSButton *_addButton;
    NSButton *_cancelButton;
    NSTableView *_bookmarkTable;
    ExtendedComboBox *_chatNameField;
    NSTextField *_errorField;
    NSButton *_goButton;
    NSButton *_removeButton;
    ServicePopUp *_servicePopUp;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedGoToChatPanel;
+ (BOOL)canGoToChat;
- (void)showWindow:(id)arg1;
- (void)cancel:(id)arg1;
- (void)go:(id)arg1;
- (void)remove:(id)arg1;
- (void)add:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)_addBookmarkForRoom:(id)arg1 account:(id)arg2;
- (void)_removeBookmarkAtIndex:(long long)arg1;
- (void)_saveBookmarks;
- (void)_loadBookmarks;
- (void)windowWillClose:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)comboBoxWillDismiss:(id)arg1;
- (void)selectedServiceChanged:(id)arg1;
- (void)selectedAccountStatusChanged:(id)arg1;
- (void)_updateServicePopUp;
- (void)_updateRecentKey;
- (void)_updateUI;
- (void)_pruneDeadAccounts;
- (BOOL)validateChatRoomName:(id)arg1 reason:(id *)arg2;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)dealloc;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PeopleListController : NSWindowController <PeopleListDelegate, NSAnimationDelegate, NSTextFieldDelegate, IKProfilePictureDelegate>
{
    PeopleList *_peopleList;
    IMPeople *_sourcePeople;
    NSArray *_representedAccounts;
    NSArray *_representedServices;
    NSMutableArray *_buddyListViews;
    NSMutableArray *_viewsToRemove;
    NSView *_statusArea;
    MyNameControl *_myName;
    MyStatusControl *_myStatus;
    MyStatusImageControl *_myStatusImage;
    StatusController *_myStatusController;
    IKProfilePictureView *_myPicture;
    NSButton *_myVCButton;
    long long _myVCButtonTrackingRectTag;
    NSTableView *_accountsViewTable;
    AccountsScrollView *_accountsScrollView;
    AccountsTableController *_accountsTableController;
    NSBox *_statusAreaSeparatorBox;
    SearchBackgroundView *_searchBackgroundView;
    NSSearchField *_searchField;
    NSButton *_searchDoneButton;
    NSTextField *_noResultsField;
    NSViewAnimation *_searchHideDoneButtonAnimation;
    NSViewAnimation *_searchShowDoneButtonAnimation;
    NSString *_searchString;
    NSTimer *_searchTypingTimer;
    double _searchDoneButtonWidth;
    double _searchEdgePadding;
    double _searchMidPadding;
    NSScrollView *_scrollView;
    NSView *_bottomView;
    MenuButton *_addButton;
    NSSegmentedControl *_buddyListButtons;
    NSMenu *_screenSharingMenu;
    NSMenu *_screenSharingMenuInSession;
    NSButton *_getInfoButton;
    NSView *_contentView;
    NSString *_name;
    NSString *_prefIdentifier;
    struct CGSize _defaultMinWindowSize;
    double _defaultMinHeight;
    double _defaultHeight;
    double _collapsableHeight;
    NSMenu *_groupContextualMenu;
    NSString *_groupForContextualMenu;
    NSArray *_savedGroupsSortOrder;
    NSMutableDictionary *_cachedAccountToGroupList;
    unsigned int _windowHasLoaded:1;
    unsigned int _ardConnectionUsesMenu:1;
    unsigned int _buttonIsVideo:1;
    unsigned int _willRefresh:1;
    unsigned int _unifiedWindowTitle:1;
    unsigned int _isTableCollapsed:1;
    unsigned int _supportsOfflineToggle:1;
    unsigned int _supportsGroups:1;
    unsigned int _supportsEditing:1;
    unsigned int _supportsChild:1;
    unsigned int _shouldAutoResize:1;
    unsigned int _showingAccountsTable:1;
    unsigned int _shouldShowSearchField:1;
    unsigned int _searchPreviouslyShowingDoneButton:1;
    NSHashTable *_fezPeopleInView;
    SOTimerCenter *_timerCenter;
}

+ (id)identifiedPref:(id)arg1 forIdentifier:(id)arg2;
+ (id)prefIdentifierForAccount:(id)arg1;
+ (BOOL)isVisibleForAccount:(id)arg1;
+ (id)accountsToDisplayWithKey;
+ (void)displayWithKeyWhenLoggingInAccount:(id)arg1;
+ (BOOL)hasTimerForAccount:(id)arg1;
+ (id)alertForAccount:(id)arg1;
+ (BOOL)hasAlertForAccount:(id)arg1;
+ (void)removeAlertForAccount:(id)arg1;
+ (void)showAlertForAccount:(id)arg1;
+ (id)peopleListControllers;
+ (id)peopleListControllerWithRepresentedAccount:(id)arg1;
+ (void)transferPreferencesToUnifiedPeopleList;
+ (void)updateTimerState;
+ (id)defaultValueForPrefKey:(id)arg1;
+ (id)unifiedPeopleListController;
- (void)keyDown:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowDidMove:(id)arg1;
- (void)_savePosition;
- (void)editMessageForCurrentStatus;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)logBuddyListInOrOut:(id)arg1;
@property(readonly, nonatomic) BOOL everythingLoggedOut;
- (BOOL)everythingLoggedIn;
@property(readonly, nonatomic) BOOL anythingConnecting;
@property(readonly, nonatomic) BOOL anythingConnected;
@property(nonatomic) BOOL ARDConnectionUsesMenu;
- (void)screenShareWithBuddy:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)openStatusAsURL:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)block:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)createNewGroupWithPeople:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)startChat:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)changeBuddyPicture:(id)arg1;
- (void)personDoubleClicked:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)toggleShowOfflines:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortManually:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)doNothing:(id)arg1;
- (void)buddyListButtonsAction:(id)arg1;
- (void)_recalculateTimersForVisibleItems;
- (void)peopleList:(id)arg1 tableViewDidScroll:(id)arg2;
- (void)peopleList:(id)arg1 tableView:(id)arg2 contentDidResize:(struct CGSize)arg3;
- (void)_autoResizeBuddyList;
@property(readonly, nonatomic) BOOL supportsOfflineToggle;
@property(readonly, nonatomic) BOOL supportsGroups;
@property(readonly, nonatomic) BOOL supportsEditing;
@property(readonly, nonatomic) BOOL supportsChild;
- (BOOL)canModifyBuddiesInPeopleList:(id)arg1;
- (void)peopleListSelectedItemInfoChanged:(id)arg1;
- (id)peopleList:(id)arg1 menuForGroup:(id)arg2;
- (void)peopleList:(id)arg1 addPersonWithoutID:(id)arg2 toGroup:(id)arg3;
- (id)peopleList:(id)arg1 filterIMHandleFromPasteboard:(id)arg2;
- (id)peopleList:(id)arg1 alternateStatusTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateNameTextForIMHandle:(id)arg2;
- (double)peopleList:(id)arg1 alphaForStatus:(unsigned long long)arg2;
- (id)identifiedPref:(id)arg1;
- (void)setTableCollapsed:(BOOL)arg1 animate:(BOOL)arg2;
- (void)uncollapseTableAnimated:(BOOL)arg1;
- (void)collapseTableAnimated:(BOOL)arg1;
- (BOOL)isTableCollapsed;
- (void)_fixGradient;
- (void)_fixGradientForCollapsed;
- (void)_fixGradientForUncollapsed;
- (void)_fixWindowMinSize;
- (void)_fixWindowForCollapsed;
- (double)_collapsableListHeight;
- (void)_layoutInteriorViews;
- (void)animationDidEnd:(id)arg1;
- (void)_startViewAnimationWithViews:(id)arg1 toRects:(id)arg2;
- (void)profilePictureView:(id)arg1 imageDidChange:(id)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)tableDidResize:(id)arg1;
- (void)_adjustWidgetsSoon:(id)arg1;
- (void)_adjustWidgetsToTable;
- (void)_adjustWidgetsToTable:(BOOL)arg1;
- (void)_myPictureChanged:(id)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)_updateProfileImage;
- (BOOL)_updateVCButton;
- (BOOL)_setVCButtonIsVideo:(BOOL)arg1;
- (BOOL)_addVCButtonIsVideo:(BOOL)arg1;
- (BOOL)_setupVCButtonAsVideo:(BOOL)arg1 force:(BOOL)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_updateVCButtonRollover;
- (id)_myVCImage:(int)arg1 forState:(int)arg2;
- (void)showSelectedPeopleInList:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)buddyListChanged:(id)arg1;
- (void)_refreshList;
- (void)refreshList;
- (void)_accountLoginStatusChanged:(id)arg1;
- (void)_accountStatusMessageChanged:(id)arg1;
- (void)_buildAlertsForAccount:(id)arg1;
- (void)_accountNoLongerJustLoggedIn:(id)arg1;
- (void)_accountLoaded:(id)arg1;
- (void)_accountSortOrderChanged:(id)arg1;
- (void)personABPersonChanged:(id)arg1;
- (BOOL)peopleList:(id)arg1 people:(id)arg2 draggedFromGroups:(id)arg3 toGroup:(id)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (id)_imHandlesFromHandle:(id)arg1 inGroup:(id)arg2;
- (id)_imHandlesFromPeople:(id)arg1 inGroups:(id)arg2;
- (BOOL)peopleList:(id)arg1 pastePeople:(id)arg2 intoGroup:(id)arg3 atLocation:(long long)arg4;
- (BOOL)_doAddPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (id)groupsToAddTo;
- (void)_arrangesByGroupChanged;
- (void)_serviceGroupsChanged:(id)arg1;
- (id)_groupListForAccount:(id)arg1;
@property(readonly, nonatomic) NSArray *reorderableGroups;
- (id)groupsWithCapability:(id)arg1 fromGroups:(id)arg2;
- (id)groupsWithCapability:(id)arg1;
@property(readonly, nonatomic) NSDictionary *groupProperties;
@property(readonly, nonatomic) NSArray *groups;
- (id)mergedGroupProperties:(id)arg1;
- (void)peopleList:(id)arg1 setGroupsSortOrder:(id)arg2;
- (void)setGroupsSortOrder:(id)arg1;
- (id)_savedGroupsSortOrder;
- (void)_setSavedGroupsSortOrder:(id)arg1;
- (BOOL)_shouldUseSaveSortOrder;
@property(readonly, nonatomic) BOOL wantsSortedGroups;
- (BOOL)peopleList:(id)arg1 forceDeleteGroup:(id)arg2;
- (void)peopleList:(id)arg1 deleteGroup:(id)arg2;
- (void)deleteGroup:(id)arg1;
- (void)inviteGroupToChat:(id)arg1;
- (void)addBuddyToGroup:(id)arg1;
- (void)startIMToGroup:(id)arg1;
- (void)renameGroup:(id)arg1;
- (void)addAGroup:(id)arg1;
- (BOOL)containsIMHandle:(id)arg1;
- (BOOL)deletePeople:(id)arg1;
- (BOOL)peopleList:(id)arg1 deletePeople:(id)arg2;
- (void)_confirmDeletionOfPeople:(id)arg1 withContextInfo:(id)arg2;
- (void)pulseIMHandle:(id)arg1;
- (BOOL)_deleteBuddies:(id)arg1;
- (BOOL)peopleList:(id)arg1 canRemoveRows:(id)arg2;
- (id)peopleList:(id)arg1 addablePeople:(id)arg2;
- (id)propertiesForGroup:(id)arg1;
- (void)addABuddy:(id)arg1;
- (id)addBuddy;
- (BOOL)addBuddy:(id)arg1 withWindow:(id)arg2;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
@property(readonly, nonatomic) BOOL isVisible;
- (void)hide;
- (void)display;
- (void)displayIfPrefVisible;
- (void)displayWithoutKey;
- (void)displayWithKey:(BOOL)arg1;
- (void)enableWindow:(BOOL)arg1;
- (void)enableWindow:(BOOL)arg1 quietly:(BOOL)arg2;
- (void)showWindow:(id)arg1;
@property(readonly, nonatomic) MyStatusControl *statusControl;
@property(retain, nonatomic) IMPeople *sourcePeople;
@property(readonly, nonatomic) PeopleList *peopleList;
@property(nonatomic) BOOL prefVisible;
- (id)prefIdentifier;
- (void)setPrefIdentifier:(id)arg1;
- (void)updateWindowTitle;
@property(retain, nonatomic) NSArray *representedServices;
- (void)_activeAccountsChanged:(id)arg1;
- (BOOL)representsAccount:(id)arg1;
- (BOOL)representsService:(id)arg1;
@property(retain, nonatomic) Account *representedAccount;
@property(retain, nonatomic) NSArray *representedAccounts;
- (void)_addressBookPreferencesDidChange:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidResignActive:(id)arg1;
- (void)_accountInfoChanged:(id)arg1;
- (void)_accountCapsChanged:(id)arg1;
- (void)_configureUIForAccount;
- (id)alertForAccount:(id)arg1;
- (BOOL)hasAlertForAccount:(id)arg1;
- (void)showAlertForAccount:(id)arg1;
- (void)removeAlertForAccount:(id)arg1;
- (void)addAlert:(id)arg1 forAccount:(id)arg2;
- (BOOL)hasTimerForAccount:(id)arg1;
- (void)_scheduleRowUpdateTimerForAccountID:(id)arg1;
- (void)_rowUpdateTimerHit:(id)arg1;
- (void)_clearTimer:(id *)arg1;
- (void)_clearAccountsTableTimers;
- (void)_cleanupAccountsTableTimers;
- (void)_updateAccountsTable;
- (BOOL)isAccountTableShowing;
- (BOOL)shouldShowAccountTable;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)searchFieldDidChange:(id)arg1;
- (void)_startSearch:(id)arg1;
- (void)_showNoResultsField;
- (void)searchDismissed:(id)arg1;
- (void)find:(id)arg1;
- (void)_toggleSearchField:(BOOL)arg1;
- (BOOL)isFindPanelShowing;
- (BOOL)_shouldShowSearchField;
- (void)_layoutSearchArea:(BOOL)arg1 force:(BOOL)arg2;
- (void)clearPreferences;
- (void)windowDidLoad;
- (void)_importPrefsFromTiger;
- (void)_setupAddButtonTooltip;
- (void)dealloc;
- (void)removeFromList;
- (void)awakeFromNib;
- (id)initWithName:(id)arg1 prefIdentifier:(id)arg2;
- (id)initWithAccount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PeopleListControllerWindow : NSWindow
{
}

- (double)animationResizeTime:(struct CGRect)arg1;

@end

@interface PeopleListAlert : NSAlert
{
    BOOL _isDisconnectionAlert;
    id _completionHandler;
}

@property(nonatomic) BOOL isDisconnectionAlert; // @synthesize isDisconnectionAlert=_isDisconnectionAlert;
- (void)dealloc;
- (id)completionHandler;
- (void)setCompletionHandler:(CDUnknownBlockType)arg1;

@end

@interface ChatMiniwindowController : NSObject
{
    NSWindow *_window;
    Chat *_chat;
    ChatWindowController *_chatWindowController;
}

@property(nonatomic) ChatWindowController *chatWindowController; // @synthesize chatWindowController=_chatWindowController;
@property(retain, nonatomic) Chat *chat; // @synthesize chat=_chat;
@property NSWindow *window; // @synthesize window=_window;
- (void)_chatChanged:(id)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)_updateMiniwindowImage;
- (void)updateSelectedChat;
- (void)updateUnreadCount;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;

@end

@interface RolloverButton : NSControl
{
    NSTextFieldCell *_messageCell;
    NSPopUpButtonCell *_popUpButtonCell;
    NSImageCell *_triangleCell;
    NSString *_message;
    unsigned long long _alignment;
    unsigned long long _imagePosition;
    long long _trackingRectTag;
    NSDictionary *_titleAttributes;
    id _target;
    SEL _action;
    id <RolloverButtonDelegate> _delegate;
    struct CGRect _activeRect;
    struct CGSize _triangleSize;
    float _cornerRadius;
    int _leftMargin;
    int _rightMargin;
    BOOL _showDropDownArrow;
    BOOL _rollsOver;
    BOOL _toggles;
    BOOL _mouseOver;
    BOOL _mouseDown;
    BOOL _state;
    struct CGSize _intrinsicContentSize;
}

+ (id)_lineBreakAttributes;
+ (Class)cellClass;
@property(nonatomic) struct CGSize intrinsicContentSize; // @synthesize intrinsicContentSize=_intrinsicContentSize;
- (void)performClick:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (void)setStringValue:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setAttributedTitle:(id)arg1;
- (void)setTitleAttributes:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)refreshTracking;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)updateTrackingAreas;
- (void)_removeTrackingRect;
- (BOOL)rollsOver;
- (void)setRollsOver:(BOOL)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_runPopUp:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)canBecomeKeyView;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawTitleInRect:(struct CGRect)arg1;
- (float)fgTextColorForRollover:(BOOL)arg1;
- (float)bgTextColorForRollover:(BOOL)arg1;
- (void)_resizeEditingIfNeeded;
- (struct CGRect)_popupRect;
- (struct CGRect)fittedRect;
- (struct CGRect)triangleRect;
- (struct CGRect)messageRect;
- (void)resetMenu;
- (void)addMenuItem:(id)arg1;
- (id)menu;
- (void)updateActiveRect;
- (void)clearActiveRect;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAlignment:(unsigned long long)arg1;
- (unsigned long long)alignment;
- (void)setImagePosition:(unsigned long long)arg1;
- (BOOL)state;
- (void)setState:(BOOL)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)toggles;
- (void)setToggles:(BOOL)arg1;
- (id)customCell;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_stopNotifications;
- (void)_startNotifications;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setShowsDropDownArrow:(BOOL)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityValueAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;

@end

@interface SendCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;
- (id)_sendFile;
- (id)_sendMessage;
- (id)_sendInvitation;

@end

@interface GroupsEditorController : NSObject
{
    PeopleListController *_peopleListController;
    NSMutableArray *_deletedGroups;
    NSMutableArray *_oldGroups;
    NSMutableArray *_newGroups;
    NSArray *_fromGroups;
    NSArray *_movingIMHandles;
    NSString *_renamingGroup;
    NSString *_deletingGroup;
    BOOL _allowsCustomSort;
    NSWindow *_renameGroupSheet;
    NSTextField *_renameGroupField;
    NSButton *_renameGroupAcceptButton;
    NSWindow *_addGroupSheet;
    NSTextField *_renameGroupLabel;
    NSTextField *_addGroupField;
    NSButton *_addGroupButton;
    NSButton *_newGroupButton;
    NSButton *_deleteGroupButton;
    NSButton *_renameGroupButton;
}

+ (void)deleteGroup:(id)arg1 forPeopleListController:(id)arg2;
+ (void)renameGroup:(id)arg1 forPeopleListController:(id)arg2;
+ (void)addGroupForPeopleListController:(id)arg1 withPeople:(id)arg2 fromGroups:(id)arg3;
+ (void)addGroupForPeopleListController:(id)arg1;
- (void)deleteGroups:(id)arg1 andRenameGroupsFrom:(id)arg2 to:(id)arg3;
- (BOOL)_confirmDeletionOfGroups:(id)arg1;
- (id)_newGroupName;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)_nameExists:(id)arg1 atRowOtherThan:(int)arg2;
- (void)_doRenameGroup;
- (id)_array:(id)arg1 equivalentString:(id)arg2;
- (void)_doMoveFromGroup;
- (void)_doAddGroup;
- (void)dealloc;
- (void)endSheet:(id)arg1;
- (void)_beginSheet:(int)arg1;
- (void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)awakeFromNib;
- (id)initWithPeopleListController:(id)arg1 editingGroups:(BOOL)arg2 renamingGroup:(id)arg3 deletingGroup:(id)arg4 movingFromGroups:(id)arg5 movingPeople:(id)arg6;

@end

@interface SMSPINWindowController : NSWindowController
{
    NSTextField *_messageLabel;
    NSTextField *_PINNumberLabel;
    NSProgressIndicator *_spinner;
    NSString *_pin;
    NSString *_phoneNumber;
}

@property(retain) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(retain) NSString *pin; // @synthesize pin=_pin;
@property __weak NSProgressIndicator *spinner; // @synthesize spinner=_spinner;
@property __weak NSTextField *PINNumberLabel; // @synthesize PINNumberLabel=_PINNumberLabel;
@property __weak NSTextField *messageLabel; // @synthesize messageLabel=_messageLabel;
- (void).cxx_destruct;
- (void)cancel:(id)arg1;
- (void)pinVerificationShouldDismiss:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithPIN:(id)arg1 phoneNumber:(id)arg2;

@end

@interface Chat : IMChat
{
    AVChatController *_pendingVCDecline;
    NSDictionary *_invitationActions;
}

@property(retain, nonatomic) NSDictionary *invitationActions; // @synthesize invitationActions=_invitationActions;
- (void)setPendingVCDecline:(id)arg1;
- (void)join;
- (void)declineInvitation;
- (void)acceptInvitation;
- (BOOL)shouldAutoJoin;
- (id)lastInterestingMessage;
- (BOOL)isSavedChat;
- (int)aggregateChatStyle;
- (void)_doPendingVCDecline;
- (void)sendMessage:(id)arg1;
- (id)instantMessageForInputLineString:(id)arg1 baseWritingDirection:(long long)arg2 flags:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithSearchResult:(id)arg1;
- (void)sendInChatScriptCommand:(id)arg1;
- (void)declineInvitationScriptCommand:(id)arg1;
- (void)acceptInvitationScriptCommand:(id)arg1;
- (id)objectSpecifier;
- (id)scriptUpdated;
- (id)scriptStarted;
- (id)scriptActive;
- (id)scriptJoinState;
- (id)scriptInvitation;
- (id)scriptSecure;
- (id)scriptSubject;
- (id)scriptChatType;
- (id)scriptInvitationMessage;
- (id)scriptName;
- (id)scriptParticipants;
- (id)scriptService;
- (id)scriptID;

@end

@interface SavedChat : Chat
{
}

- (BOOL)_shouldRegisterChat;

@end

@interface Service : IMServiceImpl
{
    NSImage *_serviceIcon;
    NSArray *_defaultBuddyIcons;
    NSArray *_defaultBuddyImages;
    BOOL _defaultBuddyIconChecked;
    BOOL _serviceIconChecked;
    BOOL _customCanonicalFormOfID;
}

+ (id)allServicesNonBlocking;
+ (id)allServices;
+ (BOOL)connectToDaemon;
+ (void)daemonConnectionLost:(id)arg1;
+ (void)daemonDidConnect:(id)arg1;
+ (void)daemonWillConnect:(id)arg1;
+ (void)initialize;
+ (void)disconnectAllServices;
- (Class)accountClass;
- (long long)compareNames:(id)arg1;
- (id)icon;
- (void)dealloc;

@end

@interface DaemonListenerStub : NSObject
{
}

- (void)videoStillForPersonRequested:(id)arg1 withTransactionID:(unsigned int)arg2;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)myPictureDataChanged:(id)arg1;
- (oneway void)setupComplete;
- (oneway void)showForgotPasswordNotificationForAccount:(id)arg1;
- (oneway void)showInvalidCertNotificationForAccount:(id)arg1;

@end

@interface FileDragOutView : NSImageView
{
    FileTransfer *_file;
    id <FileDragOutViewDelegate> _delegate;
    struct CGPoint _clickLoc;
}

- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)dealloc;
- (id)file;
- (void)setFile:(id)arg1;
- (void)_updateImage;
- (void)setDelegate:(id)arg1;

@end

@interface ServicePopUp : NSPopUpButton
{
    unsigned long long _requiredCapabilities;
    Service *_requiredService;
    NSArray *_requiredServices;
    NSArray *_requiredAccounts;
    NSMutableArray *_possibleAccounts;
    id <ServicePopUpDelegate> _delegate;
    BOOL _requireActiveAccounts;
    BOOL _requireConnectedAccounts;
}

- (id)possibleAccounts;
- (void)selectAccount:(id)arg1;
- (id)selectedAccount;
- (void)accountStatusChanged:(id)arg1;
- (void)activeAccountsChanged:(id)arg1;
- (void)requireCapabilities:(unsigned long long)arg1;
- (void)requireServices:(id)arg1;
- (void)requireService:(id)arg1;
- (void)requireAccounts:(id)arg1;
- (void)requireActiveAccounts:(BOOL)arg1;
- (void)requireConnectedAccounts:(BOOL)arg1;
- (void)awakeFromNib;
- (BOOL)_updateMenu;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

@interface Notifier : NSObject <NSWindowDelegate>
{
    NSWindow *_realWindow;
    FloaterWindow *_floaterWindow;
    struct CGPoint _floaterOffset;
    double _prevRealHeight;
    BOOL _canHideShowRealWindow;
    long long _stage;
    BOOL _respondedToInvite;
    int _inviteType;
    struct CGAffineTransform _finalXform;
    NSString *_openNoteID;
    IMHandle *_sender;
    BOOL _beSilent;
    BOOL _forcedOrderFront;
}

+ (void)orderFrontNotifierWithID:(id)arg1;
+ (id)staleNotifiersWithType:(int)arg1 fromID:(id)arg2;
+ (id)allNotifiers;
+ (id)notifierWithType:(int)arg1 fromID:(id)arg2;
+ (id)notifierWithType:(int)arg1 from:(id)arg2;
+ (void)addItemsToMenu:(id)arg1 atIndex:(unsigned long long)arg2 fromData:(id)arg3 target:(id)arg4 action:(SEL)arg5;
+ (id)floaterBackgroundColor;
+ (void)clearAllWeakReferencesToObject:(id)arg1;
- (id)menuItemFormat;
- (void)windowWillClose:(id)arg1;
- (void)_appDidUnhide:(id)arg1;
- (void)_appWillHide:(id)arg1;
- (void)_realWindowEndSheet:(id)arg1;
- (void)_realWindowBeginSheet:(id)arg1;
- (void)_realWindowResignedMain:(id)arg1;
- (void)_realWindowWillClose:(id)arg1;
- (void)_realWindowWillMiniaturize:(id)arg1;
- (void)_realWindowDidResize:(id)arg1;
- (void)_realWindowDidBecomeKey:(id)arg1;
- (void)closeWithoutAcceptingOrRejecting;
- (void)blockNotification;
- (void)acceptNotification;
- (void)rejectNotificationAndCloseRealWindow:(BOOL)arg1;
- (void)_rejectNotificationAndCloseRealWindow:(BOOL)arg1;
- (void)closeDownShop:(BOOL)arg1;
- (void)_closeDownShop;
- (void)realWindowHiding;
- (void)_doFrameOfRealHiding:(id)arg1;
- (void)_animateRealHiding;
- (BOOL)canHideRealWindow;
- (BOOL)canShowRealWindow;
- (void)realWindowVisible;
- (void)_doFrameOfRealDisplay:(id)arg1;
- (void)_animateRealDisplay:(id)arg1;
- (void)orderFrontRealWindow;
- (void)forceOrderFrontRealWindow;
- (void)floaterBecomingVisible;
- (void)floaterWillBecomeVisible;
- (void)_doFrameOfFloaterDisplay:(id)arg1;
- (void)animateFloaterDisplay;
- (void)_doAnimateFloaterDisplay;
- (struct CGAffineTransform)_xformForFloaterScale:(double)arg1;
- (BOOL)isRealWindowHidden;
- (void)_addSelfToNotifierList;
- (void)stopEventActions;
- (BOOL)silent;
- (void)setSilent:(BOOL)arg1;
- (void)setAccessibilityDescription:(id)arg1;
- (void)_updateWindowTitle;
- (void)buildFloaterWindowOfClass:(Class)arg1 frame:(struct CGRect)arg2 styleMask:(long long)arg3;
- (void)positionRealWindowInCorner:(BOOL)arg1;
- (BOOL)_collidesWithExistingWindow:(struct CGRect)arg1;
- (void)setRealWindow:(id)arg1;
- (id)realWindow;
- (id)floaterWindow;
- (BOOL)isStale;
- (BOOL)isActiveNotification;
- (void)setPreviousRealHeight:(double)arg1;
- (double)previousRealHeight;
- (void)moveFloaterOffset:(struct CGSize)arg1;
- (void)setFloaterOffset:(struct CGPoint)arg1;
- (struct CGPoint)floaterOffset;
- (void)setOpenNoteID:(id)arg1;
- (id)openNoteID;
- (void)setSender:(id)arg1;
- (id)sender;
- (void)setStage:(long long)arg1;
- (long long)stage;
- (void)setCanHideShowRealWindow:(BOOL)arg1;
- (BOOL)canHideShowRealWindow;
- (void)setInviteType:(int)arg1;
- (int)inviteType;
- (void)setRespondedToInvite:(BOOL)arg1;
- (BOOL)respondedToInvite;
- (void)clearWeakReferencesToObject:(id)arg1;
- (void)installRealWindowNotifications;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FloaterWindow : NSWindow
{
    Notifier *_notifier;
    NSMutableArray *_keyDownQueue;
    BOOL _useClientDragging;
}

@property(nonatomic) Notifier *notifier; // @synthesize notifier=_notifier;
- (void)sendEvent:(id)arg1;
- (void)moveWindow:(id)arg1;

@end

@interface CustomImageView : NSImageView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface ApplicationActionsController : NSObject
{
}

+ (id)_descriptionTextForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 forChat:(id)arg4;
+ (void)_executeAppleScriptHandlersForEventDictionary:(id)arg1;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4;
+ (id)_scriptURL;
+ (BOOL)executeAppleScriptHandlersForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3;
+ (void)initialize;
+ (void)didWakeNotification:(id)arg1;
+ (void)willSleepNotification:(id)arg1;
+ (id)localizedTitleForMessagesEvent:(int)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)noAvailableScripts:(id)arg1;
- (void)dealloc;

@end

@interface ApplicationActionsControllerHandler : NSObject <MessagesEventControllerHandler>
{
    NSDate *_lastLoggedInDate;
}

+ (id)sharedInstance;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;
- (void)dealloc;

@end

@interface CollapseView : NSClipView
{
    double _expandedHeight;
}

- (void)takeStateFromSender:(id)arg1;
- (void)toggleCollapsed:(id)arg1;
- (void)collapse:(BOOL)arg1 animate:(BOOL)arg2;
- (void)collapse:(BOOL)arg1;
- (void)_resizeWindowToFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
- (id)_highestAncestor:(id)arg1;
- (BOOL)isCollapsed;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface Prefs : NSObject
{
}

+ (BOOL)playVideosInline;
+ (id)nowPlayingFormatString;
+ (void)setSaveConversationsOnClose:(BOOL)arg1;
+ (BOOL)saveConversationsOnClose;
+ (void)setShowAllBuddyPictures:(BOOL)arg1;
+ (BOOL)showAllBuddyPictures;
+ (void)setNotifyAboutKnockKnock:(BOOL)arg1;
+ (BOOL)notifyAboutKnockKnock;
+ (void)setMenuExtraCanBeVisible:(BOOL)arg1;
+ (BOOL)menuExtraCanBeVisible;
+ (int)setMenuExtraIsVisible:(BOOL)arg1;
+ (BOOL)menuExtraIsVisible;
+ (void)setUseUnifiedBuddyList:(BOOL)arg1;
+ (BOOL)useUnifiedBuddyList;
+ (id)existingDownloadPath;
+ (id)downloadPath;
+ (void)setDownloadURL:(id)arg1;
+ (id)downloadURL;
+ (id)setDownloadsFolderToDefault;
+ (void)setSavedChatPath:(id)arg1;
+ (id)savedChatPath;
+ (BOOL)useBestRecipient;
+ (void)setShowTabBar:(BOOL)arg1;
+ (BOOL)showTabBar;
+ (void)setShowRecipientBar:(BOOL)arg1;
+ (BOOL)showRecipientBar;
+ (void)setAddressMeInGroupchat:(BOOL)arg1;
+ (BOOL)addressMeInGroupchat;
+ (void)purgeChatRoomPrefs;
+ (void)removeGoToChatPrefsForRoom:(id)arg1 accountID:(id)arg2;
+ (void)_updateLastUsedDateForRoom:(id)arg1 account:(id)arg2;
+ (void)removeBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (void)addBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (void)removeBookmarkAtIndex:(long long)arg1;
+ (id)chatBookmarksForAccountID:(id)arg1;
+ (BOOL)_hasBookmarkForRoom:(id)arg1 account:(id)arg2;
+ (void)_setChatBookmarks:(id)arg1;
+ (id)chatBookmarks;
+ (void)setAnimateBuddyIcons:(BOOL)arg1;
+ (BOOL)animateBuddyIcons;
+ (void)setUseSingleStatus:(BOOL)arg1;
+ (BOOL)useSingleStatus;
+ (void)setFileTransferManagerShouldBeVisible:(BOOL)arg1;
+ (BOOL)fileTransferManagerShouldBeVisible;
+ (void)setShowMyLoginIdInBuddyList:(BOOL)arg1;
+ (BOOL)showMyLoginIdInBuddyList;
+ (void)setKnockKnock:(BOOL)arg1;
+ (BOOL)knockKnock;
+ (void)setNumberOfCustomMessagesToRemember:(long long)arg1;
+ (long long)numberOfCustomMessagesToRemember;
+ (void)setUsingABPicture:(BOOL)arg1;
+ (BOOL)usingABPicture;
+ (void)setFastUserSwitchAction:(int)arg1;
+ (int)fastUserSwitchAction;
+ (void)setAccountsToLogInAtLaunch:(id)arg1;
+ (id)accountsToLogInAtLaunch;
+ (void)setOfflineOnQuit:(BOOL)arg1;
+ (BOOL)offlineOnQuit;
+ (void)updateSuddenTerminationForOfflineOnQuit;
+ (void)setUbiquitoustring:(id)arg1 forKey:(id)arg2;
+ (void)setUbiquitousArray:(id)arg1 forKey:(id)arg2;
+ (void)setUbiquitousFloat:(double)arg1 forKey:(id)arg2;
+ (void)setUbiquitousInteger:(long long)arg1 forKey:(id)arg2;
+ (void)setUbiquitousBool:(BOOL)arg1 forKey:(id)arg2;
+ (void)setUbiquitousObject:(id)arg1 forKey:(id)arg2;
+ (void)setString:(id)arg1 forKey:(id)arg2;
+ (void)setBool:(BOOL)arg1 forKey:(id)arg2;
+ (void)setFloat:(double)arg1 forKey:(id)arg2;
+ (void)setInteger:(long long)arg1 forKey:(id)arg2;
+ (void)setArray:(id)arg1 forKey:(id)arg2;
+ (void)setObject:(id)arg1 forKey:(id)arg2;
+ (id)stringForKey:(id)arg1 defaultValue:(id)arg2;
+ (id)objectForKey:(id)arg1;
+ (id)arrayForKey:(id)arg1;
+ (double)doubleForKey:(id)arg1 defaultValue:(double)arg2;
+ (float)floatForKey:(id)arg1 defaultValue:(double)arg2;
+ (long long)integerForKey:(id)arg1 defaultValue:(long long)arg2;
+ (BOOL)boolForKey:(id)arg1 defaultValue:(BOOL)arg2;
+ (void)clearPreferenceForKey:(id)arg1;
+ (void)copyPreference:(id)arg1 toKey:(id)arg2;
+ (id)sharedInstance;
- (void)stopListeningForICloudChanges;
- (void)startListeningForICloudChanges;
- (void)iCloudPrefsUpdated:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface Prefs_Camera : NSPreferencesModule
{
    NSPopUpButton *cameraPulldownMenu;
    NSPopUpButton *micPulldownMenu;
    NSPopUpButton *soundOutputDevicePulldownMenu;
    NSButton *pairHeadsetButton;
    NSBox *cameraBoxView;
    NSTabView *cameraTabView;
    CameraPreferencesView *cameraView;
    NSExtendedBox *noCameraBox;
    NSTextField *noCameraTextField;
    VolumeIndicator *volumeIndicator;
    NSPopUpButton *bandwidthPulldownMenu;
    NSButton *launchOnCameraCheckbox;
    BOOL stayingOnVideoPrefs;
    BOOL videoPrefsWindowWasClosed;
    BOOL didCancel;
    BOOL autoselectBTMic;
    BOOL autoselectBTOutput;
    BOOL _closeRegistered;
}

- (void)changeCamera:(id)arg1;
- (long long)_updateCameraList;
- (void)changeSoundOutputDevice:(id)arg1;
- (long long)_updateSoundOutputDeviceList;
- (long long)_updateSoundDeviceList:(id)arg1 deviceList:(id)arg2 currentDevice:(id)arg3;
- (void)changeMicrophone:(id)arg1;
- (long long)_updateMicList;
- (void)setDidCancel:(BOOL)arg1;
- (void)setVideoPrefsWindowWasClosed:(BOOL)arg1;
- (BOOL)videoPrefsWindowWasClosed;
- (void)setStayingOnVideoPrefs:(BOOL)arg1;
- (void)showHelp:(id)arg1;
- (void)changeLaunchOnCamera:(id)arg1;
- (void)changeBandwidth:(id)arg1;
- (void)_setBandwidth:(unsigned long long)arg1;
- (void)__prefsChangedNotification:(id)arg1;
- (void)_prefsChangedNotification:(id)arg1;
- (void)_startStopAV;
- (id)_noneStr;
- (void)_updateUIElement:(int)arg1 animate:(BOOL)arg2 hardwareChanged:(BOOL)arg3;
- (id)_firstBloothSoundDeviceInList:(id)arg1;
- (void)_cameraPreferencesViewSizeChanged:(id)arg1;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (void)willBeDisplayed;
- (void)windowWillClose:(id)arg1;
- (void)_unregisterForCloseNotification;
- (void)_registerForCloseNotification;
- (void)saveChanges;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)viewForPreferenceNamed:(id)arg1;
- (BOOL)isResizable;
- (void)dealloc;

@end

@interface BetterCheckBoxCell : NSButtonCell
{
}

- (struct CGRect)_imageRectWithRect:(struct CGRect *)arg1;

@end

@interface Prefs_General : NSPreferencesModule <TKTonePickerViewControllerDelegate>
{
    NSPopUpButton *_placeholderSoundsPopUpButton;
    NSLayoutConstraint *_universalSettingsViewBottomConstraint;
    BOOL _isInLegacyMode;
    NSView *_allSettingsView;
    NSView *_universalSettingsView;
    NSView *_legacySettingsView;
    DefaultApplicationPopUpButton *_defaultIMClientPopup;
    NSButton *_saveConversationsOnClosingButton;
    NSButton *_notifyAboutKnockKnock;
    NSButton *_addressMeInGroupChatButton;
    NSButton *_playSoundsCheckbox;
    SOAdjustableLayoutView *_soundPopupContainerView;
    TKTonePickerViewController *_tonePickerController;
    NSPopUpButton *_downloadPathPopUpButton;
    NSPopUpButton *_appleScriptPopUp;
    NSPopUpButton *_customFontMenu;
    NSSlider *_textSizeSlider;
    NSTextField *_textSmallA;
    NSTextField *_textBigA;
    NSMenuItem *_customFontMenuItem;
    NSMenuItem *_lastCustomFontMenuItem;
    NSMenuItem *_lastCustomFontMenuItemSeparator;
    NSButton *_useSingleBuddyList;
    NSButton *_animateBuddyIcons;
    NSButton *_showStatusMenuCheckbox;
    NSButton *_offlineOnQuitCheckbox;
    NSButton *_autoReplyButton;
    NSButton *_autoAwayCheckbox;
    NSPopUpButton *_welcomeBackModePopUp;
    NSPopUpButton *_fastUserSwitchPopUp;
    NSTextField *_textSizeLabel;
    NSTextField *_buddyListLabel;
}

+ (id)defaultFont;
@property(nonatomic) BOOL isInLegacyMode; // @synthesize isInLegacyMode=_isInLegacyMode;
@property(retain) NSTextField *buddyListLabel; // @synthesize buddyListLabel=_buddyListLabel;
@property(retain) NSTextField *textSizeLabel; // @synthesize textSizeLabel=_textSizeLabel;
@property(retain) NSPopUpButton *fastUserSwitchPopUp; // @synthesize fastUserSwitchPopUp=_fastUserSwitchPopUp;
@property(retain) NSPopUpButton *welcomeBackModePopUp; // @synthesize welcomeBackModePopUp=_welcomeBackModePopUp;
@property(retain) NSButton *autoAwayCheckbox; // @synthesize autoAwayCheckbox=_autoAwayCheckbox;
@property(retain) NSButton *autoReplyButton; // @synthesize autoReplyButton=_autoReplyButton;
@property(retain) NSButton *offlineOnQuitCheckbox; // @synthesize offlineOnQuitCheckbox=_offlineOnQuitCheckbox;
@property(retain) NSButton *showStatusMenuCheckbox; // @synthesize showStatusMenuCheckbox=_showStatusMenuCheckbox;
@property(retain) NSButton *animateBuddyIcons; // @synthesize animateBuddyIcons=_animateBuddyIcons;
@property(retain) NSButton *useSingleBuddyList; // @synthesize useSingleBuddyList=_useSingleBuddyList;
@property(retain) NSMenuItem *lastCustomFontMenuItemSeparator; // @synthesize lastCustomFontMenuItemSeparator=_lastCustomFontMenuItemSeparator;
@property(retain) NSMenuItem *lastCustomFontMenuItem; // @synthesize lastCustomFontMenuItem=_lastCustomFontMenuItem;
@property(retain) NSMenuItem *customFontMenuItem; // @synthesize customFontMenuItem=_customFontMenuItem;
@property(retain) NSTextField *textBigA; // @synthesize textBigA=_textBigA;
@property(retain) NSTextField *textSmallA; // @synthesize textSmallA=_textSmallA;
@property(retain) NSSlider *textSizeSlider; // @synthesize textSizeSlider=_textSizeSlider;
@property(retain) NSPopUpButton *customFontMenu; // @synthesize customFontMenu=_customFontMenu;
@property(retain) NSPopUpButton *appleScriptPopUp; // @synthesize appleScriptPopUp=_appleScriptPopUp;
@property(retain) NSPopUpButton *downloadPathPopUpButton; // @synthesize downloadPathPopUpButton=_downloadPathPopUpButton;
@property(retain) TKTonePickerViewController *tonePickerController; // @synthesize tonePickerController=_tonePickerController;
@property(retain) SOAdjustableLayoutView *soundPopupContainerView; // @synthesize soundPopupContainerView=_soundPopupContainerView;
@property(retain) NSButton *playSoundsCheckbox; // @synthesize playSoundsCheckbox=_playSoundsCheckbox;
@property(retain) NSButton *addressMeInGroupChatButton; // @synthesize addressMeInGroupChatButton=_addressMeInGroupChatButton;
@property(retain) NSButton *notifyAboutKnockKnock; // @synthesize notifyAboutKnockKnock=_notifyAboutKnockKnock;
@property(retain) NSButton *saveConversationsOnClosingButton; // @synthesize saveConversationsOnClosingButton=_saveConversationsOnClosingButton;
@property(retain) DefaultApplicationPopUpButton *defaultIMClientPopup; // @synthesize defaultIMClientPopup=_defaultIMClientPopup;
@property(retain) NSView *legacySettingsView; // @synthesize legacySettingsView=_legacySettingsView;
@property(retain) NSView *universalSettingsView; // @synthesize universalSettingsView=_universalSettingsView;
@property(retain) NSView *allSettingsView; // @synthesize allSettingsView=_allSettingsView;
- (void).cxx_destruct;
- (void)tonePickerViewController:(id)arg1 selectedToneWithIdentifier:(id)arg2;
- (id)_scriptURL;
- (void)_addScriptsToPopUpFromPath:(id)arg1;
- (void)_fillAppleScriptPopup;
- (void)revealAppleScriptDirectory:(id)arg1;
- (void)_showTextSlider:(BOOL)arg1;
- (void)_updateLastCustomFontMenuItem;
- (void)_selectLastCustomFont;
- (void)_setCustomFont:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)chooseAFont:(id)arg1;
- (void)fontChanged:(id)arg1;
- (void)changeTextSize:(id)arg1;
- (void)setTextSize:(long long)arg1;
- (void)appleScriptSelected:(id)arg1;
- (void)playSoundsToggled:(id)arg1;
- (void)changeAutoReply:(id)arg1;
- (void)changeSaveConversations:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)_updateAccountState;
- (void)_accountActivationChanged:(id)arg1;
- (void)_setupDownloadPathMenu;
- (void)changeDownloadPath:(id)arg1;
- (void)changeFastUserSwitchPopup:(id)arg1;
- (void)changeAutoAway:(id)arg1;
- (void)addressMeInGroupChatChanged:(id)arg1;
- (void)changeNotifyAboutKnockKnock:(id)arg1;
- (void)changeWelcomeBackMode:(id)arg1;
- (void)changeUseSingleBuddyList:(id)arg1;
- (void)changeShowFezStatus:(id)arg1;
- (void)changeOfflineOnQuit:(id)arg1;
- (void)changeAnimateBuddyIcons:(id)arg1;
- (void)saveChanges;
- (void)initializeFromDefaults;
- (void)_updateAccessibilityFontControl:(id)arg1;
- (void)_updateTextSizeControl:(id)arg1;
- (void)_updateStatusMenuControl:(id)arg1;
- (id)viewForPreferenceNamed:(id)arg1;
- (BOOL)isResizable;
- (void)willBeDisplayed;
- (void)dealloc;
- (void)awakeFromNib;
- (id)imageForPreferenceNamed:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AnimatingTabView : NSTabView
{
    BOOL _transitionsEnabled;
    BOOL _synchronous;
    double _transitionTime;
    BOOL _wantsDrawTickle;
    EffectView *_effectView;
}

- (BOOL)onlyUpdateWhenAsked;
- (void)setOnlyUpdateWhenAsked:(BOOL)arg1;
- (void)setEffectNeedsDisplay:(BOOL)arg1;
- (void)selectTabViewItem:(id)arg1;
- (void)_effectComplete;
- (void)_notifyDelegate:(SEL)arg1;
- (id)_imageOfCurrentTabView;
- (BOOL)inTransition;
- (double)transitionTime;
- (void)setTransitionTime:(double)arg1;
- (BOOL)isSynchronous;
- (void)setSynchronous:(BOOL)arg1;
- (BOOL)areTransitionsEnabled;
- (void)setTransitionsEnabled:(BOOL)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

@end

@interface EffectView : NSView
{
    NSImage *_startImage;
    NSImage *_endImage;
    NSDate *_startTime;
    double _effectTime;
    int _effect;
    int _direction;
    float _prevProgress;
    BOOL _manuallyInvalidate;
}

- (void)stopEffect;
- (BOOL)doingEffect;
- (void)setManualInvalidation:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_setNeedsDisplay;
- (void)_doSplitEffect:(float)arg1 inRect:(struct CGRect)arg2 horiz:(BOOL)arg3 wipe:(BOOL)arg4;
- (void)_doZoomEffect:(float)arg1 inRect:(struct CGRect)arg2 scale:(BOOL)arg3;
- (void)_doSlideEffect:(float)arg1 inRect:(struct CGRect)arg2 moveOld:(BOOL)arg3 moveNew:(BOOL)arg4;
- (void)_doFadeEffect:(float)arg1 inRect:(struct CGRect)arg2;
- (void)doEffect:(int)arg1 direction:(int)arg2 time:(double)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 startImage:(id)arg2 endImage:(id)arg3;

@end

@interface Animator : NSObject
{
    NSTimer *_timer;
    NSDate *_startTime;
    id _target;
    double _animationTime;
    float _fps;
    CDStruct_5a7f87b4 _contour;
    CDUnknownFunctionPointerType _applyContour;
    float _linearProgress;
    float _progress;
    BOOL _reversed;
    BOOL _autoreverses;
}

+ (id)sineWaveAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
+ (id)easeOutAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
+ (id)linearAnimatorWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3;
+ (float)applyContour:(CDStruct_5a7f87b4)arg1 toValue:(float)arg2;
+ (float)applySimpleContour:(int)arg1 toValue:(float)arg2;
+ (BOOL)isContourValid:(CDStruct_5a7f87b4)arg1;
+ (CDStruct_5a7f87b4)defaultContourForType:(int)arg1;
- (float)progress;
- (float)linearProgress;
- (double)elapsedTime;
- (CDStruct_5a7f87b4)contour;
- (float)fps;
- (double)animationTime;
- (void)setAnimationTime:(double)arg1;
- (BOOL)isReversed;
- (BOOL)isSynchronous;
- (BOOL)isAnimating;
- (void)complete;
- (void)stop;
- (void)reverse;
- (void)startSynchronous;
- (void)start;
- (BOOL)autoreverses;
- (void)setAutoreverses:(BOOL)arg1;
- (void)_timerStep:(id)arg1;
- (id)initWithTarget:(id)arg1 time:(double)arg2 fps:(float)arg3 contour:(CDStruct_5a7f87b4)arg4;

@end

@interface FezExtendedTableView : NSTableView
{
    NSTextFieldCell *_messageCell;
    NSButtonCell *_triangleCell;
    NSMutableArray *_rowOrigins;
    NSColor *_customHighlightColor;
    FezCellTipWindow *_cellTipWindow;
    Tooltip *_tooltip;
    NSString *_headerString;
    NSColor *_customMouseOverBaseColor;
    NSColor *_customMouseOverLineColor;
    unsigned int _delegateSelectors;
    BOOL _drawsStripes;
    BOOL _drawingStripes;
    BOOL _hasDropRange;
    struct _NSRange _dropRange;
    int _timerHits;
    NSTimer *_flashTimer;
    BOOL _hasFloatingGroupRows;
    BOOL _smallGroupRows;
    double _normalRowHeight;
    double _groupRowHeight;
    BOOL _groupRowRolloversEnabled;
    BOOL _runningGroupAnimation;
    BOOL _allowsGroupRowDragging;
    BOOL _mouseIsDown;
    BOOL _mouseInside;
    long long _mouseInsideTag;
    int _trackingRow;
    int _clickRow;
    BOOL _mouseDown;
    BOOL _trackingRectsEnabled;
    BOOL _redisplayOnMouseover;
    BOOL _tracksOnlyWhenWindowIsKey;
    BOOL _drawingRowsIntoImage;
    long long _cellTipRow;
    BOOL _enableCellTips;
    BOOL _drawsSelection;
    double _topGap;
    BOOL _panelNeedsToBecomeKey;
    BOOL _wasInPreviousButtonRect;
    struct CGPoint _previousPoint;
    long long _previousRow;
    BOOL _drawsRightShadow;
    BOOL _drawAsActive;
    struct CGPoint _tooltipPoint;
    BOOL _tooltipPending;
    BOOL _tooltipBlocked;
    BOOL _celltipBlocked;
    BOOL _allowQuickTooltipPop;
    BOOL _tooltipTracksMouse;
    NSTimer *_movementTimer;
}

- (void)setRedisplayCellsOnMouseover:(BOOL)arg1;
- (BOOL)redisplayCellsOnMouseover;
- (BOOL)trackingRectsEnabled;
- (void)setTrackingRectsEnabled:(BOOL)arg1;
- (BOOL)tracksOnlyWhenWindowIsKey;
- (void)setTracksOnlyWhenWindowIsKey:(BOOL)arg1;
- (void)_setTracking:(BOOL)arg1 window:(id)arg2;
- (void)_didFinishMovement:(id)arg1;
- (void)_updateMovement;
- (void)_frameChanged:(id)arg1;
- (void)_boundsChanged:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_appResignedActive:(id)arg1;
- (void)_appDidHide:(id)arg1;
- (void)_windowDidResignKey:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)_updateForMovementAtPoint:(struct CGPoint)arg1;
- (void)_cancelMouseTracking;
- (int)previousHoveredRow;
- (int)trackingRow;
- (BOOL)mouseInside;
- (void)_setMouseInside:(BOOL)arg1;
- (void)_updateTooltipPoint:(struct CGPoint)arg1;
- (void)_delayTooltip;
- (void)_showTooltip;
- (void)_updateTooltip;
- (void)_makeTooltipVisible;
- (void)cancelTooltips;
- (void)cancelCelltips;
- (void)_abortTooltip;
- (void)_closeTooltip;
- (void)otherMouseDragged:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)tabletPoint:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)revealRowsInRange:(struct _NSRange)arg1;
- (void)concealRowsInRange:(struct _NSRange)arg1;
- (BOOL)runningGroupAnimation;
- (void)_runAnimationAt:(struct CGPoint)arg1 headerBefore:(id)arg2 headerAfter:(id)arg3 rowsToMove:(id)arg4 howFar:(double)arg5 reveal:(BOOL)arg6 extraMovement:(double)arg7;
- (id)_imageOfRect:(struct CGRect)arg1;
- (struct CGRect)_rectToMoveWithMinY:(double)arg1 range:(struct _NSRange)arg2 extraRow:(BOOL)arg3;
- (id)_currentImageOfRowAtIndex:(int)arg1 asFloater:(BOOL)arg2;
- (id)imageOfRows:(struct _NSRange)arg1 fraction:(float)arg2 shadow:(id)arg3;
- (id)_imageOfGroupRow:(int)arg1 withNumberString:(id)arg2 asFloater:(BOOL)arg3;
- (id)imageOfGroupRow:(int)arg1 drawWhiteBackground:(BOOL)arg2 asFloater:(BOOL)arg3;
- (id)_imageOfGroupRow:(int)arg1 withNumberString:(id)arg2 drawWhiteBackground:(BOOL)arg3 asFloater:(BOOL)arg4;
- (struct CGRect)visibleRect;
- (BOOL)mouseIsDownInView;
- (BOOL)needsPanelToBecomeKey;
- (void)setPanelNeedsToBecomeKey:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (id)_menuForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_trackMouseDown:(id)arg1 inRow:(int)arg2 allowDrag:(BOOL)arg3;
- (int)_rowAtEventLocation:(id)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)setDrawAsActive:(BOOL)arg1;
- (BOOL)drawAsActive;
- (BOOL)drawsRightShadow;
- (void)setDrawsRightShadow:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawFloater;
- (long long)_indexOfFloaterRow;
- (struct CGRect)_floaterRowFrame;
- (struct CGRect)_defaultFloaterRowFrame;
- (double)_defaultFloaterRowMinY;
- (void)_drawGroupRowInRect:(struct CGRect)arg1 withTitle:(id)arg2 andNumber:(id)arg3 mouseDown:(BOOL)arg4 rowIndex:(int)arg5 isHeader:(BOOL)arg6;
- (struct CGRect)groupDisclosureIndicatorRectInRowRect:(struct CGRect)arg1 isDisclosed:(BOOL)arg2 indicatorImage:(id *)arg3;
- (void)drawBackgroundOverhangInRect:(struct CGRect)arg1;
- (id)headerString;
- (void)setHeaderString:(id)arg1;
- (BOOL)hasHeader;
- (void)noteNumberOfRowsChanged;
- (long long)numberOfRows;
- (struct CGRect)rectOfRow:(long long)arg1;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (double)tableHeight;
- (void)rowHeightsChanged;
- (double)groupRowHeight;
- (BOOL)smallGroupRows;
- (void)setSmallGroupRows:(BOOL)arg1;
- (void)setHasGroupRows:(BOOL)arg1;
- (BOOL)hasFloatingGroupRows;
- (void)setHasFloatingGroupRows:(BOOL)arg1;
- (void)_updateRowOrigins;
- (void)setShowCellTips:(BOOL)arg1;
- (BOOL)showCellTips;
- (void)reloadData;
- (void)_updateCellTipWithPoint:(struct CGPoint)arg1;
- (void)_updateCellTipWithRow:(long long)arg1;
- (void)_hideCellTip;
- (BOOL)drawsSelection;
- (void)setDrawsSelection:(BOOL)arg1;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)_drawCustomSelectionHighlight:(struct CGRect)arg1;
- (double)topGap;
- (void)setTopGap:(double)arg1;
- (id)_selectionColor;
- (void)_drawStripesInRect:(struct CGRect)arg1;
- (void)_drawStripesInRect:(struct CGRect)arg1 startingAt:(double)arg2 endingAt:(double)arg3;
- (BOOL)drawsStripes;
- (void)setDrawsStripes:(BOOL)arg1;
- (BOOL)allowsGroupRowDragging;
- (void)setAllowsGroupRowDragging:(BOOL)arg1;
- (id)customMouseOverLineColor;
- (id)customMouseOverBaseColor;
- (void)setCustomMouseOverColor:(id)arg1 lineColor:(id)arg2;
- (id)customHighlightColor;
- (void)setCustomHighlightColor:(id)arg1;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (void)setRowHeight:(double)arg1;
- (double)normalRowHeight;
- (void)flashGroup:(id)arg1 inPeopleList:(id)arg2;
- (void)invalidateFlashTimer;
- (void)_invalidateFlashTimerAndClear:(BOOL)arg1;
- (void)_flash:(id)arg1;
- (void)_drawDropHighlight;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)clearDropRange;
- (void)setDropRange:(struct _NSRange)arg1;
- (struct CGRect)_dropRect;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)setRowNeedsDisplay:(unsigned int)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)scrollRowToVisible:(long long)arg1;
- (id)selectedRows;
- (void)viewDidMoveToWindow;
- (void)keyDown:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)tile;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_etvCommonInit;

@end

@interface OptionalScrollView : ScrollerStyleScrollView
{
}

- (void)scrollWheel:(id)arg1;
- (void)_doScroller:(id)arg1;
- (void)reflectScrolledClipView:(id)arg1;

@end

@interface NSExtendedBox : NSBox
{
    BOOL _isNewAquaDivider;
    BOOL _isAudioDivider;
    BOOL _isLeopardDivider;
    BOOL _isVideoBorder;
    BOOL _isSingleLineDivider;
    BOOL _isNetworkTab;
    NSColor *_interiorColor;
    BOOL _fadeToSecondaryInteriorColor;
    BOOL _fadeToSecondaryInteriorColorVertically;
    NSColor *_secondaryInteriorColor;
    float _lengthForFadeToSecondaryInteriorColor;
    BOOL _drawGradient;
    NSString *_string;
    NSString *_shortString;
    BOOL _drawRoundedBox;
    NSColor *_roundedBoxBorderColor;
    NSColor *_roundedBoxInteriorColor;
    BOOL _isOpaque;
    float _opacity;
    float _radius;
    NSImage *_backgroundImage;
}

+ (void)_setShadowStyle;
+ (id)_titleShadowAttributes;
+ (id)_titleDisabledAttributes;
+ (id)_titleAttributes;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setIsOpaque:(BOOL)arg1;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (id)shortStringValue;
- (void)setShortStringValue:(id)arg1;
- (id)interiorColor;
- (BOOL)drawGradient;
- (void)setDrawGradient:(BOOL)arg1;
- (float)lengthFoFadeToSecondaryInteriorColorLength;
- (void)setLengthForFadeToSecondaryInteriorColor:(float)arg1;
- (id)secondaryInteriorColor;
- (void)setSecondaryInteriorColor:(id)arg1;
- (BOOL)fadeToSecondaryInteriorColorVertically;
- (void)setFadeToSecondaryInteriorColorVertically:(BOOL)arg1;
- (BOOL)fadeToSecondaryInteriorColor;
- (void)setFadeToSecondaryInteriorColor:(BOOL)arg1;
- (void)setInteriorColor:(id)arg1;
- (BOOL)isVideoBorder;
- (void)setIsVideoBorder:(BOOL)arg1;
- (BOOL)isAudioDivider;
- (void)setIsAudioDivider:(BOOL)arg1;
- (void)setIsLeopardDivider:(BOOL)arg1;
- (BOOL)isLeopardDivider;
- (id)roundedBoxInteriorColor;
- (void)setRoundedBoxInteriorColor:(id)arg1;
- (id)roundedBoxBorderColor;
- (void)setRoundedBoxBorderColor:(id)arg1;
- (BOOL)drawsRoundedBox;
- (void)setDrawsRoundedBox:(BOOL)arg1;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (float)radius;
- (void)setRadius:(float)arg1;
- (BOOL)isNetworkTab;
- (void)setIsNetworkTab:(BOOL)arg1;
- (id)backgroundImage;
- (void)setBackgroundImage:(id)arg1;
- (BOOL)isNewAquaDivider;
- (void)setIsNewAquaDivider:(BOOL)arg1;
- (BOOL)singleLineDivider;
- (void)setSingleLineDivider:(BOOL)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ARDHUDPanel : NSPanel
{
    BOOL _mouseIsDown;
    BOOL _didPerformMove;
}

- (void)sendEvent:(id)arg1;
- (void)_finishWindowDrag;
- (double)animationResizeTime:(struct CGRect)arg1;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface AudioChatController : AVChatController <FezHotKeyHandler, AVChatARDFeatureDelegate>
{
    NSView *_contentContainer;
    NSButton *_recordingButton;
    AbbreviatingTextField *_messageField;
    AbbreviatingTextField *_statusField;
    NSProgressIndicator *_progressIndicator;
    ARDWarningView *_ARDWarningView;
    NSBox *_box;
    AudioConferenceView *_conferenceView;
    BOOL _referToConnectionDoctor;
    BOOL _recordingUnderNegotiation;
    BOOL _recordingNegotiationStatusInConferenceView;
    ARDHUDPanel *_hudPanel;
    ARDPIPButton *_hudPIPButton;
}

- (void)AVChatIrisStateChanged:(id)arg1;
- (void)AVChatStateChanged:(id)arg1;
- (void)AVChatParticipantStateChanged:(id)arg1;
- (void)AVChatParticipantAdded:(id)arg1;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (BOOL)avFeature:(id)arg1 startARDClientToParticipant:(id)arg2;
- (void)stopRecording;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)requestRecording;
- (void)_informUserRecordingNegotiationBeginning;
- (void)_clearMessage;
- (void)_updatePhaseTabForAVChat:(id)arg1 stateChange:(unsigned int)arg2;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (void)switchView:(id)arg1;
- (void)dealloc;
- (void)handleHotKey:(long long)arg1;
- (void)finishARDUpgrade;
- (void)ARDUpgradeRequestChangedState;
- (void)_ARDServerSessionDidBegin:(BOOL)arg1;
- (void)removeParticipantWithID:(id)arg1;
- (void)showARDWarningHelp:(id)arg1;
- (void)_setMessage:(id)arg1;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)showRecordingIndicator:(BOOL)arg1;
- (struct CGRect)_textReplyWindowFrame;
- (id)longWindowTitle;
- (id)_stringForLocalState:(unsigned int)arg1 reason:(unsigned int)arg2;
- (void)selectPhaseTabWithIdentifier:(id)arg1;
- (void)_addParticipantsToConferenceView:(id)arg1;
- (void)_fitPhaseTab;
- (void)_setupAutoresizingForTabView:(BOOL)arg1;
- (float)_heightForTab:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)windowDidLoad;
- (void)_removeContentView;
- (void)_setupTabForARDChat:(id)arg1;
- (void)_fixGradient;
- (void)_setupARDWarning:(id)arg1;
- (id)windowNibName;
- (void)_positionRecordingButton;
- (void)awakeFromNib;

@end

@interface AudioConferenceView : NSView
{
    AudioChatController *_acController;
    unsigned long long _audioConferenceMode;
}

- (void)updateMouseTracking;
- (void)refreshMouseTracking;
- (void)_updateMouseTrackingAndRefresh:(BOOL)arg1;
- (void)finishARDUpgradeForParticipant:(id)arg1;
- (void)recordingPermissionForgottenForParticipant:(id)arg1;
- (void)recordingPermissionDeniedForParticipant:(id)arg1;
- (void)recordingPermissionGrantedForParticipant:(id)arg1;
- (void)recordingPermissionRequestedForParticipant:(id)arg1;
- (void)disconnectParticipant:(id)arg1;
- (void)connectParticipant:(id)arg1;
- (void)startConnectingParticipant:(id)arg1;
- (id)participants;
- (BOOL)containsParticipantWithID:(id)arg1;
- (int)participantCount;
- (void)removeParticipantWithID:(id)arg1;
- (void)addParticipants:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)_addParticipant:(id)arg1 saveNib:(BOOL)arg2;
- (id)_viewForParticipant:(id)arg1;
- (unsigned long long)_subviewIndexOfParticipantWithID:(id)arg1;
- (unsigned long long)_subviewIndexOfParticipant:(id)arg1;
- (void)setSpinnerValue:(double)arg1 forParticipant:(id)arg2;
- (void)setSpinnerVisibility:(int)arg1 forParticipant:(id)arg2;
- (void)_adjustHeight;
- (void)drawRect:(struct CGRect)arg1;
- (float)_heightAdjustmentForCount:(int)arg1;
- (struct CGRect)_frameOfParticipantViewAtIndex:(int)arg1;
- (BOOL)isFlipped;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)_highlightParticipant:(id)arg1;
- (id)_participantForDragInfo:(id)arg1;
- (unsigned long long)audioConferenceMode;
- (void)setAudioConferenceMode:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2;

@end

@interface AVParticipantView : NSView
{
    AVChatParticipant *_participant;
    BOOL _isLocalParticipant;
    BOOL _invitedByMe;
    BOOL _isNotifier;
    IMHandle *_handle;
    FileTransfer *_fileTransfer;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    BOOL _hasDropHighlight;
    BOOL _whiteText;
    int _stage;
    int _previousStage;
    int _recordingStage;
    NSTimer *_recordingMessageTimer;
    Animator *_animator;
    float _animationDistance;
    int _configurationAt;
    int _configurationTo;
    int _configurationNext;
    long long _viewTag;
    long long _buttonTag;
    NSExtendedBox *_invitedBGView;
    AbbreviatingTextField *_invitedNameField;
    AbbreviatingTextField *_invitedStatusField;
    NSTabView *_connectedTabView;
    AbbreviatingTextField *_connectedNameField;
    AVCloseButton *_connectedCloseButton;
    VolumeIndicator *_vuMeter;
    NSTextField *_connectedARDField;
    MultiBuddyImageView *_connectedIconView;
    ShadowView *_shadowView;
    NSExtendedBox *_statusBGView;
    MultiBuddyImageView *_statusIconView;
    AbbreviatingTextField *_statusLine1;
    AbbreviatingTextField *_statusLine2;
    ColoredSpinner *_spinner;
    NSProgressIndicator *_progress;
    AVCloseButton *_closeButton;
    float _statusTextDwForSpinner;
    StretchyImageView *_notifierGreenBGView;
    StretchyImageView *_notifierMediumView;
    NSTextField *_notifierNumberField;
    Animator *_notifierAnimator;
    BOOL _hasShownTimestamp;
    NSView *_connectedContainer;
    NSView *_invitedContainer;
    NSView *_statusContainer;
}

+ (id)bannerCloseImageWithSize:(unsigned long long)arg1 mouseState:(unsigned long long)arg2;
+ (id)greenBGImage;
+ (id)centeredImageFromBaseImageName:(id)arg1 overlayColor:(id)arg2 inRect:(struct CGRect)arg3 maxSize:(struct CGSize)arg4 inView:(id)arg5;
@property(retain, nonatomic) NSView *statusContainer; // @synthesize statusContainer=_statusContainer;
@property(retain, nonatomic) NSView *invitedContainer; // @synthesize invitedContainer=_invitedContainer;
@property(retain, nonatomic) NSView *connectedContainer; // @synthesize connectedContainer=_connectedContainer;
- (void)closeParticipant:(id)arg1;
- (void)_mouseUpOutsideCloseButton:(id)arg1;
- (BOOL)isDisconnected;
- (BOOL)disconnect;
- (BOOL)isConnected;
- (void)finishARDUpgrade;
- (void)recordingPermissionForgotten;
- (void)recordingPermissionDenied;
- (void)recordingPermissionGranted;
- (void)recordingPermissionRequested;
- (void)_setRecordingStage:(int)arg1;
- (void)_timedSetRecordingStage:(id)arg1;
- (void)connect;
- (void)_updateConnectedUIConfiguration;
- (void)_hideStatus;
- (void)_showStatus;
- (void)_animateTo:(int)arg1;
- (void)startConnecting;
- (BOOL)isInvited;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)_updateNotifierProgress:(float)arg1;
- (float)animator:(id)arg1 contourForProgress:(double)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)updateMouseTracking:(BOOL)arg1 checkingMouse:(BOOL)arg2 atWindowCoordinates:(struct CGPoint)arg3;
- (void)_clearTrackingRects;
- (struct CGRect)closeButtonFrame;
- (void)hideCloseButton;
- (void)showCloseButtonOver:(BOOL)arg1 down:(BOOL)arg2;
@property double spinnerValue;
- (void)_stopSpinner;
- (void)_startSpinner;
- (void)_updateStatusLineWidths;
- (void)drawRect:(struct CGRect)arg1;
@property BOOL hasDropHighlight;
@property BOOL usesWhiteText;
- (float)bannerHeight;
- (void)updateNotifierUI;
- (double)dxToFitText;
- (void)startMultiwayThrob;
- (void)_setupNotifierUIWithNumber:(BOOL)arg1;
- (void)_setupNumberFieldInBGFrame:(struct CGRect)arg1;
- (void)_stopNotifierThrob;
- (void)_handleInfoChanged:(id)arg1;
- (id)handle;
- (id)participant;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initAsFileTransfer:(id)arg1 isNotifier:(BOOL)arg2;
- (id)initAsAuthorizationRequest:(id)arg1 isNotifier:(BOOL)arg2;
- (id)initWithParticipant:(id)arg1 isNotifier:(BOOL)arg2 ardUpgrade:(id)arg3 saveNib:(BOOL)arg4;
- (id)_initWithParticipant:(id)arg1 handle:(id)arg2 fileTransfer:(id)arg3 isNotifier:(BOOL)arg4 ardUpgrade:(id)arg5 saveNib:(BOOL)arg6;
- (void)_setupStatusContainer;
- (id)_callerParticipant;
- (void)_getEffectiveEndedReason:(unsigned int *)arg1 error:(int *)arg2;
- (void)showTimeField;
- (id)_remoteParticipantNames;
- (void)_insetView:(id)arg1 left:(float)arg2 right:(float)arg3;
- (void)setStatusText:(id)arg1;
- (void)_setStatusTextAlpha:(float)arg1;
- (void)_setStatusTextColor:(id)arg1;
- (void)_setupConnectedContainer;
- (void)_pictureChanged:(id)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)_setupAudioOnlyUI;
- (void)_showBuddyPictureShadow:(BOOL)arg1;
- (void)_arrangeAudioOnlyUI;
- (void)_startVUMeter;
- (void)_setupInvitedContainer;
- (id)_notificationString:(id)arg1;
- (void)willBeRemoved;
- (void)_removeConnectedContainer;
- (void)_removeInvitedContainer;

@end

@interface AVCloseButton : NSButton
{
    BOOL _small;
}

- (void)mouseDown:(id)arg1;
- (void)setMouseOver:(BOOL)arg1 down:(BOOL)arg2;
- (void)setMouseOver:(BOOL)arg1;
- (void)setSmall:(BOOL)arg1;
- (void)awakeFromNib;
- (void)_configureImages;

@end

@interface AudioSampler : NSObject
{
    NSMutableSet *_localObservers;
    BOOL _micIrisClosed;
    NSMutableDictionary *_remoteObservers;
    NSTimer *_timer;
    FZVideoConferenceController *_vcc;
}

+ (id)sharedSampler;
- (void)removeRemoteObserver:(id)arg1;
- (void)removeRemoteObserverForUserID:(id)arg1;
- (void)_clearRemoteObserversIfPossible;
- (void)addRemoteObserver:(id)arg1 forUserID:(id)arg2;
- (void)removeLocalObserver:(id)arg1;
- (void)addLocalObserver:(id)arg1;
- (void)_handleMicChangeNotification:(id)arg1;
- (void)_stopTimerIfPossible;
- (void)_startTimerIfNecessary;
- (void)_broadcastLevel;
- (void)dealloc;
- (id)init;

@end

@interface AVChatWindow : NSWindow
{
    double _resizeTime;
}

- (void)setAlphaValue:(double)arg1;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (double)animationResizeTime:(struct CGRect)arg1;
- (void)setConstantAnimationResizeTime:(double)arg1;

@end

@interface AVChatController : NSWindowController <AVChatLegacyDelegate, RecordingFeatureDelegate>
{
    AVChatWindow *_avWindow;
    AnimatingTabView *_phaseTab;
    VolumeIndicator *_volumeIndicator;
    AVSegmentedControl *_chatControls;
    NSSlider *_volumeSlider;
    StretchyImageView *_volumeDownIcon;
    StretchyImageView *_volumeUpIcon;
    NSButton *_textReplyButton;
    NSTabView *_invitedPhaseTabView;
    NSTabView *_sourceTabView;
    NSView *_liveSourceView;
    NSTabViewItem *_liveSourceTabViewItem;
    VCNotifier *_notifier;
    AVChat *_avChat;
    Chat *_textReply;
    NSMutableString *_errorReporterLog;
    NSString *_lastError;
    VCChannelNegotiation *_ardUpgradeNegotiation;
    FezAVRecorder *_avRecorder;
    VideoRecordingAdapter *_videoRecordingAdapter;
    AudioRecordingAdapter *_audioRecordingAdapter;
    NSMutableArray *_recordingFileNames;
    NSMutableArray *_recordingNegotiationQueue;
    NSTimer *_recordingIndicatorTimer;
    NSString *_fileName;
    FZLargeTypeController *_largeTypeController;
    long long _errorCount;
    unsigned int _handledAVShutdown:1;
    unsigned int _windowIsClosing:1;
    unsigned int _displayingPreview:1;
    unsigned int _showedMenuExtra:1;
    unsigned int _recordingIndicatorOn:1;
    unsigned int _isSilent:1;
    unsigned long long _maxParticipantsInConf;
    BOOL _ssIsUpgradeFromAudio;
    BOOL _ssIsUpgradeFromVideo;
    NSString *_ictBundleId;
}

+ (id)showARDUpgradeRequest:(id)arg1 notifier:(id)arg2;
+ (id)receiveInvitationFrom:(id)arg1 notifier:(id)arg2;
+ (id)buildPersistentInvitationFrom:(id)arg1 isVideo:(BOOL)arg2 notifier:(id)arg3;
+ (void)_showVideoChatErrorAlert:(id)arg1;
+ (id)initiateInvitationTo:(id)arg1 isVideo:(BOOL)arg2 withARDRole:(int)arg3;
+ (id)_beginNewInvitationTo:(id)arg1 isVideo:(BOOL)arg2 withARDRole:(int)arg3;
+ (BOOL)isInvitationTo:(id)arg1 anARDUpgrade:(int)arg2;
+ (id)_controllerWithAVChat:(id)arg1 ardRequest:(id)arg2 notifier:(id)arg3;
+ (void)_warnMultiway:(BOOL)arg1 allPeople:(id)arg2 offenders:(id)arg3 offerText:(BOOL)arg4;
+ (void)_warnMaxVideo:(BOOL)arg1;
+ (void)_warnWithReason:(id)arg1 video:(BOOL)arg2 ARD:(BOOL)arg3;
+ (id)_warnTitleVideo:(BOOL)arg1 ARD:(BOOL)arg2;
+ (id)controllerForAVChat:(id)arg1;
+ (id)_controllerForChatInitiatedBy:(id)arg1;
+ (void)_removeControllerForAVChat:(id)arg1;
+ (BOOL)_setController:(id)arg1 forAVChat:(id)arg2;
+ (id)_avChatControllers;
+ (BOOL)isVideoController;
+ (void)closeAllChats;
- (void)setIsSilent:(BOOL)arg1;
- (void)clearRecordingFileNames;
- (void)stopRecording;
- (void)requestRecording;
- (void)avChat:(id)arg1 participantFinishedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)_recordingFailed;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantRequestedRecording:(id)arg2;
- (void)_recordRequestDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_requestRecordingPermissionForParticipant:(id)arg1;
- (BOOL)startAVRecorder;
- (void)selectPhaseTabWithIdentifier:(id)arg1;
- (id)defaultSaveName;
- (void)AVChatPauseChanged:(id)arg1;
- (void)AVChatMuteChanged:(id)arg1;
- (void)AVChatIrisStateChanged:(id)arg1;
- (void)AVChatParticipantNetworkStalled:(id)arg1;
- (void)AVChatParticipantStateChanged:(id)arg1;
- (void)AVChatStateChanged:(id)arg1;
- (void)AVChatParticipantsWillBeRemoved:(id)arg1;
- (void)AVChatParticipantRemoved:(id)arg1;
- (void)AVChatParticipantAdded:(id)arg1;
- (void)_showErrorReporterThenInvoke:(id)arg1;
- (void)handleShutdownAVConference:(id)arg1;
- (id)_windowForSecurityAlert:(id)arg1;
- (void)showErrorReportAndCloseWindowIfNecessaryForChat:(id)arg1;
- (id)vcErrorReport;
- (id)errorReporterLog;
- (id)errorString;
- (id)avChat:(id)arg1 bitmapDataForParticipant:(id)arg2;
- (void)avChat:(id)arg1 blockedByFileTransfer:(BOOL)arg2;
- (BOOL)avChat:(id)arg1 startARDClientToParticipant:(id)arg2;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (void)_membershipChanged;
- (void)_addToErrorReporterLog:(id)arg1;
- (id)_sanitizedErrorLogForDict:(id)arg1;
- (id)_errorLogForDict:(id)arg1 isVideo:(BOOL)arg2;
- (id)_errorLogForNoPackets:(id)arg1 isAudio:(BOOL)arg2;
- (void)_imHandleInfoChanged:(id)arg1;
- (BOOL)_performDragOperation:(id)arg1 onPartyID:(id)arg2 confirmFileSend:(BOOL)arg3;
- (unsigned long long)_operationForDrag:(id)arg1 onPartyID:(id)arg2 isFiles:(char *)arg3;
- (BOOL)_getInvitablePeople:(id *)arg1 fromPasteboard:(id)arg2;
- (id)_dragTypes;
- (void)_updateAddBuddyButtonState;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)positionARDUpgradeRequestWindow;
- (struct CGRect)_textReplyWindowFrame;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)_updateWindowTitle;
- (id)longWindowTitle;
- (id)shortWindowTitle;
- (void)finishARDUpgrade;
- (void)ARDUpgradeRequestChangedState;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)postARDNotificationToMenuExtra;
- (void)restoreMenuExtraState;
- (BOOL)validateMenuItem:(id)arg1;
- (void)removeParticipantWithID:(id)arg1;
- (void)updateAddBuddyButton;
- (id)chooseBuddyButton:(id)arg1 filterIMHandles:(id)arg2;
- (id)avSegmentedControl:(id)arg1 filterIMHandles:(id)arg2;
- (id)_filterIMHandlesForAddButton:(id)arg1;
- (void)avSegmentedControl:(id)arg1 addIMHandle:(id)arg2;
- (BOOL)otherMenuItemForChooseBuddyButton:(id)arg1;
- (id)extraMenuItemsForChooseBuddyButton:(id)arg1;
- (id)extraMenuItemsForAVSegmentedControl:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)inviteIMHandles:(id)arg1;
- (BOOL)isFullScreen;
- (id)layerView;
- (void)toggleRecording:(id)arg1;
- (id)_remoteIMHandles;
- (void)toggleFullScreen:(id)arg1;
- (void)volumeChanged:(id)arg1;
- (void)togglePause:(id)arg1;
- (void)toggleMute:(id)arg1;
- (void)_updateLocalUI;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)showRecordingIndicator:(BOOL)arg1;
- (void)_timerToggleRecordingIndicator;
- (void)_scheduleToggleRecordingIndicator:(BOOL)arg1;
- (void)endPreview;
- (void)updatePhaseTabWithState:(unsigned int)arg1;
- (void)endConference:(id)arg1;
- (void)_setTextReply:(id)arg1;
- (id)textReply;
- (void)declineVC:(id)arg1;
- (void)acceptVC:(id)arg1;
- (void)acceptAndClearVCNotifier;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)textReplyVC:(id)arg1;
- (id)_buildTextReply;
- (void)sendFile:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)startChat:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (id)ardUpgradeNegotiation;
- (id)recordingFileNames;
- (id)notifier;
- (BOOL)isVideo;
- (id)avWindow;
- (id)avChat;
- (void)windowDidResignKeyWindow;
- (void)windowDidBecomeKeyWindow;
- (void)dealloc;
- (void)_unobserveChatNotificationsForAVChat:(id)arg1;
- (void)_observeChatNotificationsForAVChat:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)removeVolumeIndicatorObservers;
- (void)addVolumeIndicatorObservers;
- (void)sendToItunes:(id)arg1;
- (void)windowDidLoad;
- (void)_vcCapsChanged;
- (int)effectiveARDRole;
- (id)initWithAVChat:(id)arg1;
- (id)_initWithAVChat:(id)arg1 ardRequest:(id)arg2 notifier:(id)arg3;
- (void)displayFullScreenString:(id)arg1 forTime:(double)arg2;
- (void)largeTypeControllerClosing:(id)arg1;
- (void)logEndOfConferenceToMessageTracer;
- (void)logChangeToMessageTracerWithParticipant:(id)arg1 isUpgrade:(BOOL)arg2;
- (id)_avChatString;
- (id)chatControls;
- (id)description;
- (void)declineInvitationScriptCommand:(id)arg1;
- (void)acceptInvitationScriptCommand:(id)arg1;

@end

@interface CameraPreferencesView : OpenGLLayerView
{
    OpenGLVideoConferenceLayer *_videoLayer;
    struct CGRect _oldTrackingRect;
    BOOL _videoCapable;
    BOOL _abortedVideo;
    BOOL _videoIsStarted;
    NSString *_videoErrorMessage;
    BOOL _registeredForNotifications;
    BOOL _videoCapabilityIsKnown;
}

- (void)prepareOpenGL;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setCameraOnState:(BOOL)arg1;
- (void)mouseDragged:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)stopVideo;
- (void)abortVideo;
- (void)restartVideo;
- (void)startVideo;
- (BOOL)canStartVideo;
- (void)_removeCameraPrefsNotifications;
- (BOOL)videoIsStarted;
- (void)_cameraChangedNotification:(id)arg1;
- (void)_irisStateNotification:(id)arg1;
- (void)clearKnownVideoState;
- (void)_createLayer;
- (id)layerName;
- (void)setVideoErrorMessage:(id)arg1;
- (id)videoErrorMessage;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;

@end

@interface OpenGLCGBitmapContextLayer : OpenGLTextureLayer
{
    char *_buffer;
    struct CGContext *_cgBitmapContext;
    int _textureMappingType;
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (void)renderTexture:(struct _CGLContextObject *)arg1;
- (void)_renderBorder:(struct _CGLContextObject *)arg1;
- (void)draw;
- (void)updateBuffer;
- (void)clearContext;
- (void)setMapCenter:(BOOL)arg1;
- (int)textureMappingType;
- (void)setBorderTextureMappingInsetLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (void)setTextureMappingType:(int)arg1;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2;

@end

@interface OpenGLColorLayer : OpenGLLayer
{
    float _bottomColor[4];
    float _topColor[4];
}

- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)setBottomWhite:(float)arg1 topWhite:(float)arg2;
- (void)setTopRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setBottomRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (void)setAlpha:(float)arg1;
- (void)setWhite:(float)arg1 alpha:(float)arg2;
- (void)setRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2 red:(float)arg3 green:(float)arg4 blue:(float)arg5 alpha:(float)arg6;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2;

@end

@interface FullScreenWindow : NSWindow
{
    NSView *_placeholderView;
}

- (void)restoreView;
- (void)acquireView:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithScreen:(id)arg1 backing:(unsigned long long)arg2;

@end

@interface OpenGLLayer : NSObject
{
    NSString *_name;
    struct CGRect _layerFrame;
    float _opacity;
    unsigned char _flags;
    BOOL _isValid;
    BOOL _isVisible;
    float _topMargin;
    unsigned int _autoresizingMask;
    NSMutableArray *_sublayers;
    unsigned int _positionInSublayers;
    OpenGLLayerModel *_layerModel;
    OpenGLLayer *_superLayer;
}

+ (id)masterOpenGLContext;
+ (id)sequentialLayerName:(id)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;
- (id)sublayerWithPrefix:(id)arg1;
- (id)sublayerWithName:(id)arg1;
- (BOOL)removeSublayer:(id)arg1;
- (void)removedFromSuperLayer:(id)arg1;
- (void)addSublayer:(id)arg1 underSelf:(BOOL)arg2 underSiblings:(BOOL)arg3;
- (void)addedToSuperLayer:(id)arg1;
- (int)positionInSublayers;
- (id)sublayers;
- (id)superLayer;
@property(readonly) BOOL useCoreImage;
@property(readonly) CIContext *ciContext;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)updateBuffer;
- (void)setUsesAlphaBlending:(BOOL)arg1;
- (id)layerModel;
- (void)_setLayerModel:(id)arg1;
- (void)setTopMargin:(float)arg1;
- (float)topMargin;
- (double)scaleFactor;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (void)setName:(id)arg1;
- (id)name;
- (void)containerViewResizedFrom:(struct CGSize)arg1 to:(struct CGSize)arg2;
- (unsigned int)autoresizingMask;
- (void)setAutoresizingMask:(unsigned int)arg1;
- (void)setLayerSize:(struct CGSize)arg1;
- (void)_parent:(id)arg1 resizedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (void)setLayerOrigin:(struct CGPoint)arg1;
- (void)_parentMovedFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (void)setLayerFrame:(struct CGRect)arg1;
- (struct CGRect)layerFrame;
- (struct CGRect)superLayerFrame;
- (BOOL)isVisible;
- (void)setIsVisible:(BOOL)arg1 recursive:(BOOL)arg2;
- (void)setIsVisible:(BOOL)arg1;
- (BOOL)isValid;
- (void)setLayerIsValid:(BOOL)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2;

@end

@interface OpenGLLayerModel : NSObject
{
    NSMutableArray *_remoteLayers;
    OpenGLVideoConferenceLayer *_localLayer;
    NSMutableArray *_floatingLayers;
    OpenGLLayerView *_layerView;
    float _scaleFactor;
    BOOL _needsDisplay;
    BOOL _theatricalLayout;
    BOOL _forceDepthInOrtho;
    unsigned int _orthoDepthForceCounter;
    int _auxVideoMode;
    BOOL _needsToUpdateProjection;
    CDStruct_82b9310e _projection;
    float _remoteAspectRatio;
    BOOL _needsMarginForOverlay;
    BOOL _localLayerHidden;
    int _localLayerSuppressed;
    struct CGSize _remoteVideoSize;
    struct CGSize _localVideoSize;
    float _localAspectRatio;
    void *_layoutStart;
    void *_layoutEnd;
}

+ (void)initialize;
- (id)layerForHit:(long long)arg1;
- (long long)layerHitAtPoint:(struct CGPoint)arg1 inCloseButton:(char *)arg2;
- (void)updateVCQuads;
- (void)endLayoutTransitionAsTheatrical:(BOOL)arg1 fullScreen:(BOOL)arg2;
- (void)tweenLayoutWithProgress:(float)arg1 resizeLayerView:(BOOL)arg2;
- (void)_getTweenLayout:(CDStruct_f8cc2bb8 *)arg1 progress:(float)arg2;
- (void)saveLayoutFor:(int)arg1 inBounds:(struct CGSize)arg2 transitionTo:(int)arg3 inBounds:(struct CGSize)arg4 extraIndex:(int)arg5 auxVideoMode:(int)arg6;
- (CDStruct_f8cc2bb8 *)_saveLayoutForLayers:(int)arg1 extraIndex:(int)arg2 inBoundsSize:(struct CGSize)arg3 auxVideoMode:(int)arg4;
- (void)compositeFloatingLayers:(struct _CGLContextObject *)arg1;
- (void)compositeAllLayers:(struct _CGLContextObject *)arg1;
- (void)_renderOverlayMarginFadeout:(struct _CGLContextObject *)arg1;
- (void)_setupCameraTheatrical:(BOOL)arg1 ctx:(struct _CGLContextObject *)arg2;
- (BOOL)depthForcedInOrtho;
- (void)setDepthForcedInOrtho:(BOOL)arg1;
- (BOOL)needsMarginForOverlay;
- (void)setNeedsMarginForOverlay:(BOOL)arg1;
- (double)controlsMarginForBoundsSize:(struct CGSize)arg1 remoteLayers:(int)arg2 auxVideoMode:(int)arg3;
- (double)controlsMarginForBoundsSize:(struct CGSize)arg1;
- (struct CGSize)sizeForRemoteLayers:(int)arg1 inBoundsSize:(struct CGSize)arg2;
- (struct CGSize)sizeForRemoteLayers:(int)arg1 inBoundsSize:(struct CGSize)arg2 auxVideoMode:(int)arg3;
- (struct CGSize)boundsSizeForRemoteLayers:(int)arg1 ofWidth:(float)arg2 auxVideoMode:(int)arg3;
- (struct CGSize)boundsSizeForRemoteLayers:(int)arg1 ofWidth:(float)arg2;
- (float)preferredAspectRatioForLayers:(int)arg1;
- (float)_preferredAspectRatioForLayers:(int)arg1 auxVideoMode:(int)arg2;
- (float)localAspectRatio;
- (float)remoteAspectRatio;
- (struct CGSize)defaultStandardVideoSize;
- (void)setLocalVideoSize:(struct CGSize)arg1;
- (void)setRemoteVideoSize:(struct CGSize)arg1;
- (struct CGSize)localVideoSize;
- (struct CGSize)remoteVideoSize;
- (int)auxVideoMode;
- (void)setAuxVideoMode:(int)arg1;
- (BOOL)theatricalLayout;
- (void)setTheatricalLayout:(BOOL)arg1;
- (void)_updateProjection;
- (void)_adjustProjectionToAspectRatio:(float)arg1 clipProjection:(BOOL)arg2;
- (void)_getProjection:(CDStruct_82b9310e *)arg1 forLayers:(int)arg2 ofSize:(struct CGSize)arg3 auxVideoMode:(int)arg4;
- (void)_getCameraHeight:(float *)arg1 distance:(float *)arg2 forLayers:(int)arg3 ofWidth:(float)arg4 auxVideoMode:(int)arg5;
- (void)updateTheatricalLayoutForBoundsSize:(struct CGSize)arg1;
- (void)_getTransforms:(CDStruct_818bb265 *)arg1 count:(int)arg2 forLayoutForLayers:(int)arg3 extraIndex:(int)arg4 ofWidth:(float)arg5 auxVideoMode:(int)arg6;
- (void)setScaleFactor:(double)arg1;
- (float)scaleFactor;
- (void)suppressLocalLayer:(BOOL)arg1;
- (BOOL)_isLocalLayerHidden;
- (void)_setLocalLayerHidden:(BOOL)arg1;
- (void)removeVCDropView;
- (void)removeFloatingLayer:(id)arg1;
- (void)removeRemoteLayer:(id)arg1;
- (void)removeLocalLayer;
- (void)positionRemoteParticipants:(id)arg1;
- (void)_positionLayerWithVCPartyID:(id)arg1 atIndex:(unsigned int)arg2 remoteLayersCount:(unsigned int)arg3;
- (void)layer:(id)arg1 changedFromSize:(struct CGSize)arg2 toSize:(struct CGSize)arg3;
- (id)layers;
- (id)vcDropView;
- (id)localLayer;
- (id)auxVideoLayer;
- (id)auxVideoLayerWithVCPartyID:(id)arg1;
- (id)remoteLayerWithVCPartyID:(id)arg1;
- (id)remoteLayers;
- (id)remoteLayer;
- (void)setLocalLayer:(id)arg1;
- (void)addVCDropView:(id)arg1;
- (void)_fadeInDropView:(BOOL)arg1;
- (id)floatingLayerWithName:(id)arg1;
- (void)addFloatingLayer:(id)arg1;
- (void)addRemoteLayer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setAllowsAnamorphicScaling:(BOOL)arg1;
- (BOOL)needsDisplay;
- (void)setLayerNeedsDisplay:(id)arg1;
- (void)setNeedsDisplay;
- (id)layerView;
- (void)setLayerView:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface OpenGLLayerView : NSOpenGLView
{
    CIContext *_ciContext;
    struct _CGLPixelFormatObject *_cglPixelFormat;
    OpenGLLayerModel *_layerModel;
    NSImage *_offscreenImage;
    float _bgRed;
    float _bgGreen;
    float _bgBlue;
    unsigned int _vramTextureId;
    VideoRecordingAdapter *_videoRecordingAdapter;
    NSTimer *_redrawTimer;
    BOOL _ignoreRedrawTimer;
}

- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (void)setRecordingAdapter:(id)arg1;
- (void)renderIntoContext:(id)arg1 width:(int)arg2 height:(int)arg3;
- (BOOL)saveVideoSnapshotToFile:(id)arg1;
- (struct CGSize)adjustWindow:(id)arg1 proposedSize:(struct CGSize)arg2;
- (struct CGSize)adjustWindow:(id)arg1 proposedSize:(struct CGSize)arg2 aspectRatio:(double)arg3;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundWhite:(float)arg1;
- (void)setBackgroundRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
- (void)update;
- (void)reshape;
- (void)setLayerModelNeedsDisplay;
- (void)drawRect:(struct CGRect)arg1;
- (void)_redrawTimerFired:(id)arg1;
- (void)setIgnoresRedrawTimer:(BOOL)arg1;
- (BOOL)ignoresRedrawTimer;
- (void)removeFromSuperview;
- (void)_recompositeLayers;
- (id)bitmapImageFromSurface;
- (id)bitmapImageFromSurfaceInRect:(struct CGRect)arg1;
- (void)draw;
- (BOOL)isOpaque;
- (void)_setAutoscalesBoundsToPixelUnits:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidMoveToWindow;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)_updateVirtualScreen;
- (id)layerModel;
- (void)setLayerModel:(id)arg1;
@property(readonly) CIContext *ciContext;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowChangedScreen:(id)arg1;
- (void)recreateCIContextFromWindow:(id)arg1;
- (void)_stopRedrawTimer;
- (void)_startRedrawTimer;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 masterContext:(id)arg2;

@end

@interface OpenGLNSViewLayer : OpenGLTextureLayer
{
    OpenGLNSViewLayerWindow *_window;
    NSView *_view;
    BOOL _alphaBorder;
    BOOL _projectsOrtho;
}

- (void)_cleanupAfterRetexture:(void *)arg1;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (id)view;
- (void)dealloc;
- (id)initWithView:(id)arg1 alphaBorder:(BOOL)arg2 layerName:(id)arg3;
- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;
- (BOOL)projectsOrtho;
- (void)setProjectsOrtho:(BOOL)arg1;
- (void)setLayerSize:(struct CGSize)arg1;
- (void)_updateLayout;
- (double)scaleFactor;
- (id)_initLabelWithStringValue:(id)arg1 fontSize:(double)arg2 lineBreakMode:(unsigned long long)arg3 layerName:(id)arg4;

@end

@interface OpenGLNSViewLayerWindow : NSWindow
{
    OpenGLNSViewLayer *_owner;
}

- (void)setViewsNeedDisplay:(BOOL)arg1;
- (void)setOwner:(id)arg1;

@end

@interface OpenGLTextureLayer : OpenGLLayer
{
    unsigned int _textureID;
    unsigned int _textureCapability;
    struct CGSize _textureSize;
    struct CGSize _bufferSize;
    unsigned int _pixelFormat;
    unsigned int _pixelType;
    unsigned int _internalFormat;
    BOOL _alphaIsPremultiplied;
    BOOL _textured;
    BOOL _mirrored;
    float _blackTint;
    BOOL _appWillTerminate;
}

- (void)handleApplicationWillTerminate:(id)arg1;
- (struct CGSize)bufferSize;
- (struct CGSize)textureSize;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)renderTexture:(struct _CGLContextObject *)arg1;
- (void)_retexture:(struct _CGLContextObject *)arg1;
- (void)_cleanupAfterRetexture:(void *)arg1;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (void)updateBuffer;
- (void)setTextureID:(unsigned int)arg1;
- (BOOL)isMirrored;
- (void)setMirrored:(BOOL)arg1;
- (float)blackTint;
- (void)setOpacity:(float)arg1;
- (void)setBlackTint:(float)arg1;
- (void)_updateAlphaBlending;
- (unsigned int)textureID;
- (void)deleteTextureID;
- (void)generateTextureID;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2;

@end

@interface OpenGLVideoConferenceLayer : OpenGLCoreVideoLayer
{
    BOOL _hasFirstFrame;
    NSString *_vcPartyID;
    BOOL _isLocal;
    BOOL _isAuxVideo;
    BOOL _isReplacement;
    BOOL _hidingUntilNextFrame;
    FramerateTracker *_framerateTracker;
    NSMutableDictionary *_frameSizesByPartyID;
    struct CGSize _localFrameSize;
    BOOL _anamorphicScaling;
    int _videoAppearance;
    BOOL _hasDropHighlight;
    BOOL _hasReflection;
    BOOL _spotlightEffect;
    BOOL _shouldFadeOutSpotlight;
    NSDate *_spotlightFadeoutStart;
    float _endedFadeoutProgress;
    float _translationX;
    float _translationZ;
    float _rotationY;
    float _scaleXY;
    BOOL _allowsJaggies;
    float _jaggiesSmoothingBrightness;
    CDStruct_ddd3e379 _layerQuad;
    CDStruct_ddd3e379 _closeQuad;
    OpenGLNSViewLayer *_bannerSublayer;
    OpenGLImageLayer *_closeButtonSublayer;
    float _rotationYAboutCenterWithAspect;
}

- (void)recursiveCompositeLayer:(struct _CGLContextObject *)arg1;
- (void)_projectOrtho:(struct CGSize)arg1 modelYTranslation:(float)arg2 ctx:(struct _CGLContextObject *)arg3;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)_renderDropHighlight:(struct _CGLContextObject *)arg1;
- (void)_renderTheaterOutline:(struct CGRect)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)_smoothJaggies:(struct _CGLContextObject *)arg1;
- (void)_renderSpotlightWithFrame:(struct CGRect)arg1 ctx:(struct _CGLContextObject *)arg2;
- (void)_renderReflectionFadeout:(struct _CGLContextObject *)arg1;
- (struct CGRect)frameOfLayerQuad;
- (void)isPoint:(struct CGPoint)arg1 inLayer:(char *)arg2 inCloseButton:(char *)arg3;
- (void)projectVCQuads:(double *)arg1 ctx:(struct _CGLContextObject *)arg2;
- (struct CGRect)_projectLayerFrame:(double *)arg1 ctx:(struct _CGLContextObject *)arg2;
- (CDStruct_ddd3e379)_project:(double *)arg1 model:(double *)arg2 viewport:(int *)arg3 rect:(struct CGRect)arg4 isOrtho:(BOOL)arg5;
- (void)_applyTransforms:(struct _CGLContextObject *)arg1;
- (BOOL)allowsJaggies;
- (void)setAllowsJaggies:(BOOL)arg1;
- (void)setShouldFadeOutSpotlight;
- (BOOL)hasSpotlightEffect;
- (void)setSpotlightEffect:(BOOL)arg1;
- (void)_removeSpotlight;
- (BOOL)hasReflection;
- (void)setHasReflection:(BOOL)arg1;
- (BOOL)hasDropHighlight;
- (void)setHasDropHighlight:(BOOL)arg1;
- (void)clearTransforms;
- (float)scaleXY;
- (void)setScaleXY:(float)arg1;
- (float)rotationYAboutCenterWithAspect;
- (void)setRotationYAboutCenterWithAspect:(float)arg1;
- (float)rotationY;
- (void)setRotationY:(float)arg1;
- (void)getTranslationX:(float *)arg1 z:(float *)arg2;
- (void)setTranslationX:(float)arg1 z:(float)arg2;
- (void)compositeTexture:(struct _CGLContextObject *)arg1;
- (struct CGSize)renderedFrameSize;
- (int)_textureFlags;
- (int)videoAppearance;
- (void)setVideoAppearance:(int)arg1;
- (id)_createAppeanceLayer:(BOOL)arg1;
- (void)setAllowsAnamorphicScaling:(BOOL)arg1;
- (BOOL)allowsAnamorphicScaling;
- (void)fadeToBlack:(BOOL)arg1 overTime:(double)arg2;
- (BOOL)removeSublayer:(id)arg1;
- (id)closeButtonSublayer;
- (void)addCloseButtonSublayer:(id)arg1;
- (id)bannerSublayer;
- (void)addBannerSublayer:(id)arg1;
- (void)hideUntilNextFrame;
- (void)freezeFrame;
- (BOOL)isReplacement;
- (BOOL)isAuxVideo;
- (BOOL)isLocal;
- (id)vcPartyID;
- (void)textureDidChange;
- (void)setTexture:(id)arg1;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 layerName:(id)arg2 vcPartyID:(id)arg3 appearance:(int)arg4 isLocal:(BOOL)arg5 isAuxVideo:(BOOL)arg6 isReplacement:(BOOL)arg7;

@end

@interface SelfPreviewController : NSWindowController
{
    NSExtendedBox *_vcBevel;
    CameraPreferencesView *_cameraView;
    NSTabView *_cameraTabView;
    NSExtendedBox *_noCameraBox;
    NSTextField *_noCameraTextField;
    VolumeIndicator *_volumeIndicator;
}

+ (id)sharedPreviewController;
- (BOOL)validateMenuItem:(id)arg1;
- (void)takeVideoSnapshot:(id)arg1;
- (void)copy:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidEndLiveResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)_layerViewVideoSizeChanged:(id)arg1;
- (void)_prefsChangedNotification:(id)arg1;
- (void)_setWindowTitle;
- (void)_startStopAV;
- (void)_updateUI;

@end

@interface StretchyImageView : NSView
{
    NSImage *_image;
    float _tileMargins[4];
    float _opacity;
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (void)getTileLeft:(float *)arg1 right:(float *)arg2 top:(float *)arg3 bottom:(float *)arg4;
- (void)setTile:(float)arg1;
- (void)setTileLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (id)image;
- (void)setImage:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface VCFullScreenScalingInfoController : NSObject
{
    NSMatrix *scalingTypeMatrix;
}

+ (int)fullScreenScalingType;
+ (void)showInfoWindow;
+ (void)initialize;
- (void).cxx_destruct;
- (void)setScalingType:(id)arg1;
- (void)awakeFromNib;

@end

@interface VCInfoController : NSWindowController <NSWindowRestoration>
{
    NSPopUpButton *_tabPopUp;
    NSButton *_helpButton;
    NSTabView *_tabView;
    NSTabViewItem *_statsTab;
    VCInfoTable *_statsTable;
    NSTextField *_noConferenceField;
    NSCell *_statCell;
    NSFormatter *_statFormatter;
    NSMutableArray *_statsList;
    NSTabViewItem *_capsTab;
    NSTableView *_capsTable;
    NSArrayController *_capsList;
    NSAttributedString *_capEnabledSymbol;
    NSAttributedString *_capDisabledSymbol;
    NSTabViewItem *_errorTab;
    NSTextView *_errorLogTextView;
    NSTabViewItem *_netTab;
    NSExtendedBox *_netBox;
    NSImageView *_bandwidthGem;
    NSTextField *_bandwidthText;
    NSButton *_bandwidthButton;
    NSImageView *_routerGem;
    NSTextField *_routerTitle;
    NSTextField *_routerType;
    NSTextField *_routerText;
    NSButton *_switchBandwidth;
    NSButton *_switchFirewall;
    SOTimerCenter *_timerCenter;
}

+ (void)clearErrorLogs;
+ (void)addErrorLog:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)showInfoWindowCapabilities;
+ (void)showInfoWindow;
+ (void)_createInfoWindow;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(int)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(int)arg4;
- (id)tableView:(id)arg1 statItemForRow:(int)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(int)arg3;
- (int)numberOfRowsInTableView:(id)arg1;
- (void)_refreshStats:(id)arg1;
- (void)_resizeWindowFromItem:(id)arg1 withSize:(float)arg2;
- (float)_updateRouterInformation;
- (float)_updateBandwidthLimitation;
- (void)_updateNetTab;
- (void)_refreshNetTab;
- (void)_setupCapsUpdating;
- (void)_updateCaps;
- (id)_descriptionForCap:(int)arg1 CPUCaps:(int)arg2 netCaps:(int)arg3 device:(BOOL)arg4;
- (id)_descriptionForCapability:(id)arg1 enabled:(BOOL)arg2 reason:(id)arg3;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_updateErrorLogUI;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)showPrefs:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)showTab:(id)arg1;
- (void)dealloc;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGRect)_bestFrameWithStats:(unsigned int)arg1;
- (float)_errorLogHeight;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VCLayoutController : NSObject
{
    VideoConferenceLayerView *_container;
    OpenGLLayerModel *_layerModel;
    BOOL _isPreview;
    BOOL _isFullScreen;
    BOOL _hasPIP;
    BOOL _theatricalLayout;
    BOOL _PIPHiddenByUser;
    BOOL _didMoveLocalLayerBelowBanner;
    BOOL _forceDisablePreviewLabel;
    NSDate *_transitionStartTime;
    NSDate *_AOLFadeOutStartTime;
    NSTimer *_timer;
    NSTimer *_AOLFadeOutTimer;
    NSMutableDictionary *_flipTimers;
    float _PIPScale;
    struct _RectPosition _PIPPosition;
    float _windowStartWidth;
    float _windowEndWidth;
    float _transitionProgress;
    struct CGRect _startPIPFrame;
    struct CGRect _endPIPFrame;
    long long _trackingRectTag;
    long long _vcLayerHit;
    BOOL _mouseInCloseButton;
    BOOL _mouseIsHidden;
    OpenGLImageLayer *_recordingDot;
}

+ (void)showCameraOff:(BOOL)arg1 inLayer:(id)arg2;
+ (void)_showMute:(BOOL)arg1 pause:(BOOL)arg2 off:(BOOL)arg3 stalled:(BOOL)arg4 large:(BOOL)arg5 blackOpacity:(double)arg6 inLayer:(id)arg7;
+ (id)_badgeImage:(id)arg1 atSize:(struct CGSize)arg2 inImageOfSize:(struct CGSize)arg3 atPoint:(struct CGPoint)arg4;
+ (void)_createTextLabel:(id)arg1 layerName:(id)arg2 inLayer:(id)arg3;
+ (struct CGRect)constrainedWindow:(id)arg1 frame:(struct CGRect)arg2 screen:(id)arg3 withContainerSize:(struct CGSize)arg4;
+ (void)_constrainWindow:(id)arg1 frame:(struct CGRect *)arg2 screen:(id)arg3 andContainerSize:(struct CGSize *)arg4;
+ (void)initialize;
- (void)_didHideParticipantStatus:(id)arg1;
- (void)_didShowParticipantStatus:(id)arg1;
- (void)setShowsRecordingDot:(BOOL)arg1 on:(BOOL)arg2;
- (void)scrollWheel:(id)arg1 at:(struct CGPoint)arg2;
- (void)mouseDraggedAt:(struct CGPoint)arg1;
- (void)mouseMovedAt:(struct CGPoint)arg1;
- (void)mouseUpAt:(struct CGPoint)arg1;
- (void)mouseDown:(id)arg1 at:(struct CGPoint)arg2;
- (BOOL)_trackMouseDown:(id)arg1 inCloseButtonAt:(struct CGPoint)arg2;
- (void)_movePIPWithStartFrame:(struct CGRect)arg1 baseOffset:(struct CGSize)arg2 useFistCursor:(BOOL)arg3;
- (void)_animatePIPFrom:(struct CGRect)arg1 to:(struct CGRect)arg2;
- (void)_animateLayer:(id)arg1 from:(struct CGRect)arg2 to:(struct CGRect)arg3;
- (void)_backgroundThreadAnimateLayerFromDictionary:(id)arg1;
- (void)_performMainThreadAnimateLayer:(id)arg1 frame:(struct CGRect)arg2;
- (void)_mainThreadPerformAnimateLayerFromDictionary:(id)arg1;
- (void)_resizePIPWithOriginalSize:(struct CGSize)arg1;
- (void)_updateBannerHitTesting;
- (void)_doBannerHitTest:(struct CGPoint)arg1;
- (void)_setMouseInLayer:(long long)arg1 inCloseButton:(BOOL)arg2;
- (void)_showCloseButton:(BOOL)arg1 rollover:(BOOL)arg2 inLayer:(id)arg3;
- (void)_showOverlay;
- (void)_hideOverlayAndCursorAfterDelay;
- (void)_dontHideOverlay;
- (void)_hideOverlayAndCursor;
- (void)_hideOverlay;
- (void)_addPIPBorder;
- (void)resetCursorRects;
- (struct CGRect)_resizeCornerRect;
- (unsigned int)_autoresizingMask;
- (void)showRemoteParty:(id)arg1 mute:(BOOL)arg2 pause:(BOOL)arg3 stalled:(BOOL)arg4;
- (void)showLocalMute:(BOOL)arg1 pause:(BOOL)arg2 off:(BOOL)arg3 stalled:(BOOL)arg4;
- (BOOL)isPIPHidden;
- (void)setPIPHidden:(BOOL)arg1;
- (void)setPIPHidden:(BOOL)arg1 byUser:(BOOL)arg2;
- (BOOL)canShowHidePIP;
- (void)showRemoteConnectionDoctorLabel:(id)arg1;
- (void)showLocalConnectionDoctorLabel;
- (void)_showConnectionDoctorLabelInLayer:(id)arg1;
- (void)disableBackdropsUpdates;
- (void)removeAllBanners;
- (void)showPreviewLabel:(BOOL)arg1;
- (void)forceDisablePreviewLabel:(BOOL)arg1;
- (void)_changeAOLLabelSize;
- (void)createAOLBadge;
- (void)_createAOLLabel;
- (id)createLayerWithLabel:(id)arg1 fontSize:(double)arg2 name:(id)arg3 margin:(double)arg4 bgSize:(struct CGSize)arg5;
- (void)createWhitePreviewLayerForLocalParticipant:(id)arg1;
- (void)removeCloseButtonForParticipant:(id)arg1;
- (void)createCloseButtonForAuxVideo:(id)arg1;
- (void)createCloseButtonForParticipant:(id)arg1;
- (void)_createCloseButtonForLayer:(id)arg1;
- (void)removeBannerForParticipant:(id)arg1;
- (void)repositionBannerForParticipant:(id)arg1;
- (id)bannerForParticipant:(id)arg1;
- (id)createBannerForParticipant:(id)arg1;
- (id)createLayerForParticipant:(id)arg1 appearance:(int)arg2 atIndex:(unsigned long long)arg3 isAuxVideo:(BOOL)arg4 isReplacement:(BOOL)arg5;
- (id)_createVCLayerNamed:(id)arg1 vcPartyID:(id)arg2 resizes:(BOOL)arg3 appearance:(int)arg4 atIndex:(unsigned long long)arg5 isLocal:(BOOL)arg6 isAuxVideo:(BOOL)arg7 isReplacement:(BOOL)arg8;
- (BOOL)startRemoteLayerFlip:(int)arg1;
- (BOOL)startLocalLayerFlip;
- (BOOL)_startLayerFlip:(id)arg1;
- (void)_stepLayerFlip:(id)arg1;
- (void)removeRemoteVCLayer:(id)arg1 fullScreenAnimationTime:(double)arg2;
- (void)removeRemoteVCLayer:(id)arg1 fullScreenAnimationTime:(double)arg2 willResultInOneWayChat:(BOOL)arg3;
- (void)animateAdditionOfRemoteLayerAtIndex:(unsigned long long)arg1 resizeTime:(double)arg2;
- (void)_runTheatricalTransition:(unsigned int)arg1 snapToVideo:(BOOL)arg2 auxVideoMode:(int)arg3 fullScreenAnimationTime:(double)arg4;
- (void)_runTheatricalTransition:(unsigned int)arg1 snapToVideo:(BOOL)arg2 auxVideoMode:(int)arg3 fullScreenAnimationTime:(double)arg4 sizePIPToWindow:(BOOL)arg5;
- (void)_updateCursorTracking;
- (void)_getAspectTransitionForLayers:(int)arg1 ofWidth:(double)arg2 auxVideoMode:(int)arg3 containerStart:(struct CGSize *)arg4 end:(struct CGSize *)arg5 windowStart:(struct CGRect *)arg6 end:(struct CGRect *)arg7;
- (void)_fadeOutAOLBadge;
- (void)containerDidEndLiveResize;
- (void)updateLayout;
- (struct CGRect)_banner:(id)arg1 frameInVCLayer:(id)arg2;
- (struct CGRect)_theoreticalPIPFrameForLayers:(int)arg1 inBounds:(struct CGRect)arg2 auxVideoMode:(int)arg3;
- (struct CGRect)_PIPFrameForBounds:(struct CGRect)arg1;
- (void)_containerDidResize:(id)arg1;
- (void)shouldFullscreenPillarbox:(char *)arg1 letterbox:(char *)arg2 aspect:(double *)arg3 forSize:(struct CGSize)arg4;
- (void)_windowBackingPropertiesChanged:(id)arg1;
- (struct CGSize)standardWindowSize;
- (void)fitWindowToLocalBannerHorizOnly:(BOOL)arg1;
- (void)freezeFrame;
- (BOOL)isFullScreen;
- (void)setNotFullScreen:(double)arg1;
- (void)setFullScreen;
- (void)_setFullScreen:(BOOL)arg1 layerWidth:(double)arg2;
- (void)setHasPIP;
- (void)setPreview:(BOOL)arg1 snapToVideo:(BOOL)arg2;
- (struct CGSize)_windowSizeForRemoteLayers:(int)arg1 ofWidth:(double)arg2;
- (double)_transitionProgressReverse:(BOOL)arg1;
- (BOOL)isPreview;
- (double)_videoWidthToSnapWithMin:(double)arg1;
- (double)currentLayerWidth;
- (struct _RectPosition)PIPPosition;
- (double)PIPScale;
- (id)container;
- (void)dealloc;
- (void)clearContainer;
- (void)stopAOLBadgeFadeOut;
- (void)stopPreviewTransition;
- (void)setLayerModel:(id)arg1;
- (id)layerModel;
- (id)initWithContainer:(id)arg1 videoOut:(BOOL)arg2 videoIn:(BOOL)arg3;
- (void)_syncScalePrefRead:(BOOL)arg1;
- (void)_syncPositionPrefsRead:(BOOL)arg1;

@end

@interface VideoChatController : AVChatController <NSAnimationDelegate, AuxVideoFeatureDelegate>
{
    NSExtendedBox *_vcBox;
    NSButton *_effectsButton;
    NSButton *_declineButton;
    NSButton *_acceptButton;
    NSViewAnimation *_fadeAnimation;
    VideoControlsOverlay *_controlsOverlay;
    NSWindow *_dropOverlay;
    VideoConferenceLayerView *_vcLayerView;
    OpenGLLayerModel *_layerModel;
    int _restoreTab;
    BOOL _receivedAFrame;
    BOOL _hasSetupVC;
    BOOL _userHasResizedWindow;
    BOOL _showingPIPBeforeReplacementStarted;
    NSString *_participantNames;
    BOOL _recordingUnderNegotiation;
    long long _flashingRecordingState;
    BOOL _windowIsTransitioningToFullScreen;
    BOOL _windowIsFullScreen;
    struct CGRect _fullScreenPriorFrame;
    double _fullScreenPriorVCBoxOriginY;
}

- (void)windowDidResignKeyWindow;
- (void)windowDidBecomeKeyWindow;
- (void)avChat:(id)arg1 participantBeginRecording:(id)arg2;
- (void)stopRecording;
- (void)avChat:(id)arg1 participantDeniedRecording:(id)arg2;
- (void)avChat:(id)arg1 participantGrantedRecording:(id)arg2;
- (void)requestRecording;
- (void)_showRecordingIndicatorOn:(BOOL)arg1;
- (void)showRecordingIndicator:(BOOL)arg1;
- (void)AVChatParticipantNetworkStalled:(id)arg1;
- (void)AVChatPauseChanged:(id)arg1;
- (void)AVChatMuteChanged:(id)arg1;
- (void)AVChatIrisStateChanged:(id)arg1;
- (void)AVChatStateChanged:(id)arg1;
- (void)AVChatParticipantStateChanged:(id)arg1;
- (void)AVChatParticipantRemoved:(id)arg1;
- (void)AVChatParticipantAdded:(id)arg1;
- (id)_windowForSecurityAlert:(id)arg1;
- (void)avChat:(id)arg1 participantEndedAuxiliaryReplacement:(id)arg2;
- (void)avChat:(id)arg1 participantBeganAuxiliaryReplacement:(id)arg2;
- (void)avChat:(id)arg1 participantEndedAuxiliaryInput:(id)arg2;
- (void)avChat:(id)arg1 participantBeganAuxiliaryInput:(id)arg2;
- (void)_tearDownReplacementUI;
- (void)_setUpReplacementUI;
- (void)_setupLocalLayerForReplacement:(BOOL)arg1;
- (void)_tearDownAuxInputUIFor:(id)arg1;
- (void)_setUpAuxInputUIFor:(id)arg1;
- (id)avChat:(id)arg1 bitmapDataForParticipant:(id)arg2;
- (void)_avChat:(id)arg1 addedParticipant:(id)arg2 isAuxVideo:(BOOL)arg3;
- (BOOL)_isParticipant:(id)arg1 theOnlyVideoSenderInAVChat:(id)arg2;
- (void)_createCloseButtonForOtherParticipant:(id)arg1;
- (void)logError:(id)arg1 forParticipant:(id)arg2;
- (BOOL)_performDragOperation:(id)arg1 onPartyID:(id)arg2 confirmFileSend:(BOOL)arg3;
- (unsigned long long)_operationForDrag:(id)arg1 onPartyID:(id)arg2 isFiles:(char *)arg3;
- (id)_updateDropView:(id)arg1;
- (void)_fadeInDropOverlay:(BOOL)arg1;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (id)_recipientForDropView:(id)arg1 dragSender:(id)arg2;
- (void)magnifyWithEvent:(id)arg1;
- (void)_windowDidExitFullScreen:(id)arg1;
- (void)_windowWillExitFullScreen:(id)arg1;
- (void)_windowDidEnterFullScreen:(id)arg1;
- (void)_windowWillEnterFullScreen:(id)arg1;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (id)_windowBackgroundColorForFullScreenMode:(id)arg1;
- (void)_aspectSizeFullScreenToVideoSize;
- (void)_sizeFullScreenToScreenSize;
- (struct CGRect)_rectToFullScreenAspectFitContent:(struct CGRect)arg1 forScreen:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)isFullScreen;
- (id)layerView;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (void)theaterSetTime:(id)arg1;
- (void)theaterSetVolume:(id)arg1;
- (void)theaterNext:(id)arg1;
- (void)theaterPlayPause:(id)arg1;
- (void)theaterPrevious:(id)arg1;
- (void)showEffectsPalette:(id)arg1;
- (void)toggleMuteOrPause:(BOOL)arg1;
- (void)toggleHideLocalVideo:(id)arg1;
- (void)toggleShowVideoSettings:(id)arg1;
- (void)setEffectsButtonHidden:(BOOL)arg1;
- (void)takeVideoSnapshot:(id)arg1;
- (void)restoreLayoutAfterFullScreenWithVCLayerWidth:(double)arg1;
- (void)stopFullScreen;
- (void)startFullScreen;
- (void)toggleFullScreen:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)_updateLocalUI;
- (void)updateControlsOverlay;
- (void)_updateOverlayMargin:(BOOL)arg1;
- (id)controlsOverlay;
- (void)_updateRemoteVideoStateIndicators:(id)arg1 forcingOff:(BOOL)arg2;
- (id)longWindowTitle;
- (id)shortWindowTitle;
- (void)_restoreSavedWindowFrame;
- (void)_saveWindowFrame;
- (float)_layerWidth;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)_setFSButton:(id)arg1 imageTemplateSize:(float)arg2;
- (id)windowNibName;
- (BOOL)areFullScreenControlsVisible;
- (void)showFullScreenControls:(BOOL)arg1;
- (void)removeParticipantWithID:(id)arg1;
- (void)_removeParticipantWithID:(id)arg1 auxVideoLayer:(BOOL)arg2;
- (void)_firstRemoteFrame:(id)arg1;
- (void)_firstRemoteFrameForParticipantWithID:(id)arg1;
- (void)endPreview;
- (void)_setupVC;
- (void)_createRemoteVCLayers;
- (void)_setupPreview;
- (id)_setupBannerFor:(id)arg1 inState:(unsigned int)arg2 layoutController:(id)arg3;
- (void)_updateNotifierUI;
- (void)_updateNeedsOverlayMargin;
- (void)_getIsFullScreen:(char *)arg1 theaterControlsRep:(id *)arg2 hasTheaterControls:(char *)arg3;
- (BOOL)isAddBuddyAllowed;
- (id)layerModel;
- (id)vcLayerView;
- (void)dealloc;
- (BOOL)isVideo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VideoConferenceLayerView : OpenGLLayerView
{
    VideoChatController *_videoChatController;
    VCLayoutController *_layoutController;
}

- (void)layer:(id)arg1 videoSizeChangedFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)_highlightVCPartyID:(id)arg1;
- (id)_vcPartyIDForDrag:(id)arg1;
- (BOOL)_isOneWayTo:(id *)arg1;
- (unsigned long long)draggingSourceOperationMask;
- (id)layoutController;
- (void)viewDidEndLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)resetCursorRects;
- (id)videoChatController;
- (void)setLayerModel:(id)arg1;
- (void)dealloc;
- (void)cleanup;
- (id)initWithFrame:(struct CGRect)arg1 videoChatController:(id)arg2;

@end

@interface VolumeIndicator : NSView
{
    float _floatValue;
    BOOL _isRemote;
    BOOL _isMute;
    float _opacity;
    NSImage *_onImage;
    NSImage *_offImage;
    NSImage *_muteImage;
    float _numSlices;
    BOOL _proStyle;
}

- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_invalidateValue:(float)arg1 to:(float)arg2;
- (float)_splicePointFor:(float)arg1;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (void)toggleMute:(id)arg1;
- (BOOL)isMute;
- (void)setMute:(BOOL)arg1;
- (BOOL)isRemote;
- (void)setRemote:(BOOL)arg1;
- (void)setSamplerLevelValue:(id)arg1;
- (void)setNumberValue:(id)arg1;
- (void)takeFloatValueFrom:(id)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (BOOL)proStyle;
- (void)setProStyle:(BOOL)arg1;
- (void)_recacheImages;
- (void)_updateNumSlices:(float)arg1;
- (id)_loadScaledImage:(id)arg1;

@end

@interface AutoAway : NSObject <IMSystemMonitorListener>
{
    NSPanel *_welcomeBackPanel;
    NSTextField *_messageField;
    NSButton *_dontShowAgainCheckbox;
    NSButton *_dontChangeButton;
    NSButton *_changeButton;
    NSTimer *_autoAwayTimer;
    NSMutableDictionary *_lastAccountAvailableStatus;
    NSMutableDictionary *_previousStatusWasAvailableStatus;
    NSMutableSet *_autoAwayAccounts;
    BOOL _welcomeBackPromptActive;
    BOOL _didGoIdle;
}

+ (void)setAutoReplyEnabled:(BOOL)arg1;
+ (void)setAutoAwayDelay:(double)arg1;
+ (double)autoAwayDelay;
+ (void)setAutoAwayEnabled:(BOOL)arg1;
+ (BOOL)autoAwayEnabled;
+ (void)setWelcomeBackMode:(int)arg1;
+ (int)welcomeBackMode;
+ (void)install;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)windowWillClose:(id)arg1;
- (void)dontGoAvailable:(id)arg1;
- (void)goAvailable:(id)arg1;
- (void)awakeFromNib;
- (void)_startAutoAwayTimer;
- (void)_clearAutoAwayTimer;
- (void)_autoAwayTimerFired;
- (void)_markWelcomeBackAccounts;
- (void)_myStatusChanged:(id)arg1;
- (void)_welcomeBack;
- (void)_returnAvailable;
- (void)dealloc;
- (id)init;

@end

@interface NameTableCell : NSActionCell
{
    PeopleList *_peopleList;
    BOOL _oneLine;
    BOOL _disabled;
    BOOL _usesLegacyScroller;
    int _imageIndex;
    struct CGRect _trackingRect;
    struct CGRect _cellTrackingFrame;
    BOOL _urlMouseDown;
    BOOL _urlMouseOver;
    BOOL _showVCIcons;
    BOOL _showArrow;
    BOOL _showColorHint;
}

+ (id)_lineBreakAttributes;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)_redisplay:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)urlRectForFrame:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_layoutInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2 urlRect:(struct CGRect *)arg3 layoutOnly:(BOOL)arg4;
- (id)peopleListItem;
- (id)imHandle;
- (struct CGRect)rectOfStatusImageWithFrame:(struct CGRect)arg1 inView:(id)arg2 forStatus:(unsigned long long)arg3;
- (struct CGRect)rectOfStatusImageWithFrame:(struct CGRect)arg1 inView:(id)arg2 usingStatusImageReference:(id)arg3;
- (struct CGRect)vcRectForFrame:(struct CGRect)arg1 multiway:(BOOL)arg2;
- (struct CGSize)vcImageSizeMultiway:(BOOL)arg1;
- (int)imageState;
- (BOOL)imageIsMultiway;
- (BOOL)imageIsVideo;
- (void)setImageState:(int)arg1;
- (void)setImageIsVideo:(BOOL)arg1 multiway:(BOOL)arg2 state:(int)arg3;
- (BOOL)hasImage;
- (void)setNoImage;
- (void)_setImageState:(int)arg1;
- (void)_setImageIsVideo:(BOOL)arg1 multiway:(BOOL)arg2 state:(int)arg3;
- (void)_setNoImage;
- (id)_currentVCImage;
- (void)setUsesLegacyScroller:(BOOL)arg1;
- (BOOL)isDisabled;
- (void)setDisabled:(BOOL)arg1;
- (BOOL)oneLine;
- (void)setOneLine:(BOOL)arg1;
- (BOOL)showVCIcon;
- (void)setShowVCIcon:(BOOL)arg1;
- (BOOL)showsArrow;
- (void)setShowsArrow:(BOOL)arg1;
- (BOOL)showsColorHint;
- (void)setShowsColorHint:(BOOL)arg1;
- (BOOL)_tracking;
- (void)_openURL;
- (BOOL)_validStatusURL:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPeopleList:(id)arg1;
- (id)accessibilityValueAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;

@end

@interface People : NSObject
{
}

+ (void)retitleRemoveBuddyItem:(id)arg1 forIMHandles:(id)arg2;
+ (void)retitleAddBuddyItem:(id)arg1 forIMHandle:(id)arg2;
+ (BOOL)showAddressCardForHandle:(id)arg1;
+ (BOOL)openMailtoURLWithAddresses:(id)arg1;
+ (BOOL)sendFileToPeople:(id)arg1 inWindow:(id)arg2;
+ (BOOL)blockPersonWithIMHandles:(id)arg1 inWindow:(id)arg2;
+ (BOOL)searchInSpotlightWithPeople:(id)arg1;
+ (id)startARDServerChatWithPeople:(id)arg1;
+ (id)startARDClientChatWithPeople:(id)arg1;
+ (id)startAudioChatWithPeople:(id)arg1;
+ (id)startVideoChatWithPeople:(id)arg1;
+ (BOOL)allPeopleHaveCommonService:(id)arg1 postWarning:(BOOL)arg2;
+ (void)showHandleInAddressBook:(id)arg1;
+ (void)addHandleToAddressBook:(id)arg1;
+ (void)newChatWithPeople:(id)arg1;
+ (id)startChatWithPeople:(id)arg1;
+ (id)sendMessageToPeople:(id)arg1;
+ (_Bool)sendMessageToIMHandle:(id)arg1;
+ (id)_sendMessageToPeople:(id)arg1 style:(int)arg2;
+ (BOOL)doDefaultActionForPeople:(id)arg1;
+ (void)menuNeedsUpdate:(id)arg1 forIMHandles:(id)arg2;
+ (BOOL)validateMenuItem:(id)arg1 forPeople:(id)arg2;
+ (BOOL)personCanMultiwayVideoChat:(id)arg1;
+ (BOOL)personCanMultiwayAudioChat:(id)arg1;
+ (BOOL)allPeopleCanBeARDServer:(id)arg1;
+ (BOOL)allPeopleCanBeARDClient:(id)arg1;
+ (BOOL)allPeopleCanBeRecorded:(id)arg1;
+ (BOOL)allPeopleCanJoinAudioChat:(id)arg1;
+ (int)_allPeopleCanJoinAudioChat:(id)arg1;
+ (int)_allPeopleCanJoinAudioChat:(id)arg1 allowReverseOneWay:(BOOL)arg2;
+ (BOOL)allPeopleCanJoinVideoChat:(id)arg1;
+ (BOOL)allPeopleCanJoinOneWayVideoChat:(id)arg1;
+ (int)_allPeopleCanJoinVideoChat:(id)arg1;
+ (int)_allPeopleCanJoinVideoChat:(id)arg1 allowReverseOneWay:(BOOL)arg2;
+ (BOOL)allPeopleCanTwoWayAudioChat:(id)arg1;
+ (BOOL)allPeopleCanTwoWayVideoChat:(id)arg1;
+ (int)_allPeople:(id)arg1 canConferenceWithVideo:(BOOL)arg2 ardCap:(unsigned long long)arg3 minRequirement:(int)arg4;
+ (int)_allPeople:(id)arg1 canConferenceWithVideo:(BOOL)arg2 ardCap:(unsigned long long)arg3 minRequirement:(int)arg4 allowReverseOneWay:(BOOL)arg5;
+ (BOOL)allPeopleCanBeDeleted:(id)arg1;
+ (BOOL)allPeopleHaveEMailAddresses:(id)arg1;
+ (id)commonServicesForPeople:(id)arg1 requireOnline:(BOOL)arg2;
+ (id)servicesForIMHandle:(id)arg1 requireOnline:(BOOL)arg2;
+ (BOOL)buddyExistInSelection:(id)arg1;
+ (BOOL)allPeopleCanChat:(id)arg1;
+ (BOOL)allPeopleCanReceiveFiles:(id)arg1;
+ (BOOL)allPeople:(id)arg1 haveCapability:(unsigned long long)arg2;
+ (BOOL)allPeopleCanReceiveIMs:(id)arg1;
+ (BOOL)_allPeople:(id)arg1 haveCapability:(unsigned long long)arg2 skipUnknown:(BOOL)arg3 rejectOffline:(BOOL)arg4;
+ (BOOL)allPeopleOnline:(id)arg1;
+ (id)bestIMHandlesForPeople:(id)arg1;
+ (id)bestIMHandlesForPeople:(id)arg1 requireOnline:(BOOL)arg2;
+ (id)bestIMHandlesForPeople:(id)arg1 commonServices:(id)arg2 requireOnline:(BOOL)arg3;
+ (void)_postOfflineWarningForPeople:(id)arg1;
+ (void)_postNoCommonServicesForPeople:(id)arg1;

@end

@interface PeopleList : FezPeopleList <IMDirectlyObservableObjectObserver, NSTableViewDelegate, NSTableViewDataSource, FezExtendedTableViewDelegate, FezExtendedTableViewDataSource>
{
    NSMutableDictionary *_buddyPictureIndexLookup;
    NSMenuItem *_showProfileMenuItem;
    PresenceTooltip *_tooltip;
    BOOL _awokenFromNib;
    NSTableColumn *_statusColumn;
    NSTableColumn *_nameColumn;
    NSTableColumn *_pictureColumn;
    unsigned long long _viewOptions;
    NSMutableArray *_savedSelection;
    NSTimer *_statusTransitionTimer;
    NSMutableArray *_itemsInTransition;
    long long _primarySort;
    long long _secondarySort;
    BOOL _sortManually;
    NSString *_sortDefaultKey;
    BOOL _suppressingAnimation;
    NSMutableSet *_statusChangeQueue;
    NSMutableSet *_groupChangeQueue;
    BOOL _willForceChangeProcessing;
    BOOL _dontAnimateStatusQueue;
    BOOL _animateWhenEnded;
    BOOL _allowsReorderingOfGroups;
    NSMenu *_contextMenu;
    AnimatingTableView *_table;
    id <PeopleListDelegate> _delegate;
}

+ (BOOL)pasteboardContainsPeople:(id)arg1;
+ (id)_typeFromPasteboard:(id)arg1;
+ (id)peoplePasteboardTypes;
+ (id)_notificationSelectors;
+ (id)_notificationNames;
@property(nonatomic) id <PeopleListDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) AnimatingTableView *table; // @synthesize table=_table;
@property(retain, nonatomic) NSTableColumn *pictureColumn; // @synthesize pictureColumn=_pictureColumn;
@property(retain, nonatomic) NSTableColumn *nameColumn; // @synthesize nameColumn=_nameColumn;
@property(retain, nonatomic) NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateAction:(SEL)arg1;
- (void)toggleShowsOfflines:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)openStatusAsURL:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)_mergeBuddies:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)_showSelectedInfo:(BOOL)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)block:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)createNewGroupWithPeople:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)screenShareWithBuddy:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)startChat:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)doDefaultAction:(id)arg1;
- (void)tableView:(id)arg1 returnKeyPressedAtRow:(int)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 menuForGroupRow:(long long)arg2;
- (void)tableView:(id)arg1 groupRowClicked:(long long)arg2;
- (void)showContextMenuForPeopleListItem:(id)arg1;
- (void)groupClicked:(id)arg1;
- (id)tableView:(id)arg1 numberStringForGroupRow:(long long)arg2 ignoreCollapsed:(BOOL)arg3;
- (id)tableView:(id)arg1 numberStringForPeopleListGroup:(id)arg2 ignoreCollapsed:(BOOL)arg3;
- (id)tableView:(id)arg1 titleForGroupRow:(long long)arg2;
- (unsigned long long)tableView:(id)arg1 groupRowGreaterThanIndex:(unsigned long long)arg2;
- (BOOL)tableView:(id)arg1 groupRowAtIndex:(long long)arg2;
- (void)_statusIndicatorDidChange:(id)arg1;
- (float)widthToFitContent;
- (BOOL)hides:(unsigned long long)arg1;
- (void)toggleHides:(unsigned long long)arg1;
- (void)setHides:(unsigned long long)arg1 to:(BOOL)arg2;
- (void)setHides:(unsigned long long)arg1;
- (void)_updateLayoutToMatchScrollerStyle;
- (void)_updateLayout;
- (void)tableViewDidFinishScrolling:(id)arg1;
- (void)refreshTracking;
- (BOOL)tableView:(id)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (struct CGRect)_vcRectOfRow:(int)arg1;
- (BOOL)tableView:(id)arg1 shouldShowTooltipForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 prepareTooltip:(id)arg2 row:(int)arg3;
- (id)tableView:(id)arg1 tooltipForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 pasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 canPasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (void)_promptToAddABPeople:(id)arg1 toGroup:(id)arg2;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)setDropGroup:(id)arg1;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)_imHandlePropertyListArrayForRows:(id)arg1;
- (id)_propertyListForIMHandles:(id)arg1 inGroup:(id)arg2;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (id)peopleFromPasteboard:(id)arg1 addToAB:(BOOL)arg2 notAddablePeople:(id *)arg3;
- (void)_getIMHandles:(id *)arg1 andGroups:(id *)arg2 fromPasteboard:(id)arg3 allowDuplicates:(BOOL)arg4;
- (id)_peopleToAddFromABPerson:(id)arg1 isOK:(char *)arg2;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (void)tableView:(id)arg1 performDragOperation:(unsigned long long)arg2 withPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 acceptsFirstMouse:(id)arg2;
- (BOOL)_mouseInButtons:(id)arg1;
- (void)tableView:(id)arg1 dragStarted:(id)arg2 originPoint:(struct CGPoint)arg3;
- (BOOL)tableView:(id)arg1 shouldStartDraggingForGroupRow:(int)arg2;
- (id)displayStatusForItem:(id)arg1;
- (id)displayNameForItem:(id)arg1;
- (double)alphaForItem:(id)arg1 throbs:(unsigned long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableViewShouldDrawBackgroundOverhang:(id)arg1;
- (void)_processStatusChangeQueueForced;
- (void)_processStatusChangeQueueUnforced;
- (void)_processStatusChangeQueue;
- (void)_processGroupChangeQueue;
- (void)_processIMHandleForGroupChange:(id)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (void)suppressAnimation;
- (void)_endAnimationSuppression;
- (void)_animateTransitions:(id)arg1;
- (void)_stopTransitions;
- (id)trackingPeopleListItem;
- (void)revealIMHandlesInBuddyList:(id)arg1;
- (void)setIMHandleNeedsDisplay:(id)arg1;
- (void)_setPeopleListItemNeedsDisplay:(id)arg1;
- (void)saveSortOrderToDefaultsAndNotify:(BOOL)arg1;
- (void)setSortOrderFromDefaults;
- (id)sortDefaultKey;
- (void)setSortDefaultKey:(id)arg1;
- (long long)secondarySortOrder;
- (long long)sortOrder;
- (void)setSortOrder:(long long)arg1 secondary:(long long)arg2;
- (void)setSortOrder:(long long)arg1;
- (BOOL)preferCustomSort;
- (long long)nameSortOrder;
- (BOOL)preferAvailabilitySort;
- (BOOL)preferNameSort;
- (void)setPreferCustomSort:(BOOL)arg1;
- (BOOL)allowsReorderingOfGroups;
- (void)setAllowsReorderingOfGroups:(BOOL)arg1;
- (CDStruct_7495ffd8)_FezSortParameters;
- (void)endChanges;
- (void)beginChanges;
- (void)disableAnimation;
- (void)_restoreSelection;
- (void)_rememberSelection;
- (id)imHandleForObjectValue:(id)arg1;
- (id)selectedIMHandles;
- (id)_selectedIMHandlesPreferHandleForDefaultAction:(BOOL)arg1 includeAllIMHandlesIfNotUsingPreferred:(BOOL)arg2;
- (id)imHandlesAtRow:(long long)arg1;
- (id)imHandleAtRow:(long long)arg1;
- (void)repopulateIMHandles:(id)arg1;
- (void)removeAllIMHandlesAndGroups:(BOOL)arg1;
- (void)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)pulseIMHandles:(id)arg1;
- (void)pulseIMHandle:(id)arg1;
- (void)_pulseIMHandle:(id)arg1 inCollection:(id)arg2;
- (void)_rebuildItems;
- (void)_refreshContents;
- (id)_groupsForIMHandle:(id)arg1 inItem:(id)arg2;
- (void)_removeGroup:(id)arg1;
- (id)groupForNewIMHandles;
- (void)setGroups:(id)arg1;
- (void)selectIMHandles:(id)arg1;
- (BOOL)isIMHandleVisible:(id)arg1;
- (unsigned long long)_visibleIndexOfItem:(id)arg1 startingAtIndex:(int)arg2;
- (unsigned long long)_visibleIndexOfIMHandle:(id)arg1 startingAtIndex:(int)arg2;
- (id)contextualMenu;
- (void)setShowsOfflinePeople:(BOOL)arg1;
- (void)setArrangesByGroup:(BOOL)arg1;
- (void)_customColorChangedForIMHandle:(id)arg1;
- (BOOL)peopleListItem:(id)arg1 canTransitionToStatus:(unsigned long long)arg2;
- (void)_peopleListItemAnimationStateChanged:(id)arg1;
- (void)_peopleListItemNeedsGroupChange:(id)arg1;
- (void)_peopleListItemSortOrderChangedNotification:(id)arg1;
- (void)_peopleListItemNeedsSorting:(id)arg1;
- (void)_peopleListItemNeedsUpdating:(id)arg1;
- (long long)nextSuitableRowForHighlightAfterRow:(long long)arg1;
- (void)detachFromTableView;
- (void)awakeFromNib;
- (void)setupUI;
- (void)dealloc;
- (void)_configureTableColumns;
- (id)init;
- (void)_localeChangedRefresh;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PeopleListItem : FezPeopleListItem <NSCopying, IMDirectlyObservableObjectObserver>
{
}

+ (id)displayNameForString:(id)arg1;
+ (id)displayStatusMessageForString:(id)arg1;
- (id)preferredDefaultHandle;
- (void)objectDidPostDirectNotification:(id)arg1;
- (id)displayStatusMessage;
- (id)displayName;
- (id)tooltipString;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface PeoplePicker : NSObject
{
    Service *_service;
    ABPeoplePickerView *_peoplePicker;
    NSView *_titleView;
    BOOL _alwaysPost;
}

- (void)personSelected:(id)arg1;
- (void)selectABPerson:(id)arg1 andValue:(id)arg2;
- (void)selectABPerson:(id)arg1;
- (void)selectABPerson:(id)arg1 andIMHandle:(id)arg2;
- (void)editInAddressBook:(id)arg1;
- (void)openInAddressBook:(id)arg1;
- (id)selectedPerson;
- (id)selectedValues;
- (id)selectedRecords;
- (id)displayedProperty;
- (void)propertyDidChange:(id)arg1;
- (void)valueDidChange:(id)arg1;
- (void)nameDidChange:(id)arg1;
- (void)groupDidChange:(id)arg1;
- (void)_postChangedNotification;
- (void)_postChangedNotificationNamed:(id)arg1;
- (void)setAlwaysPosts:(BOOL)arg1;
- (void)setService:(id)arg1;
- (void)setAllowsAccountSelection:(BOOL)arg1;
- (void)setAllowedServices:(id)arg1;
- (void)enableMultiplePeopleSelection:(BOOL)arg1;
- (void)setPeopleDoubleClickTarget:(id)arg1 andAction:(SEL)arg2;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface AnimatingTableView : FezExtendedTableView
{
    BOOL _animationEnabled;
    BOOL _drawingRowIntoImageCache;
    NSMutableArray *_originsSnapshot;
    NSMutableArray *_prevRowOrigins;
    NSDate *_startTime;
    double _animationTime;
    struct _NSRange _movementRange;
    struct CGRect _movementRect;
    double _spline;
    NSMutableDictionary *_rowCache;
    NSTimer *_timer;
}

- (id)accessibilityDescriptionAttribute;
- (id)accessibilityAttributeNames;
- (void)revealRowsInRange:(struct _NSRange)arg1;
- (void)concealRowsInRange:(struct _NSRange)arg1;
- (void)rowHeightsChanged;
- (void)reloadData;
- (void)tile;
- (long long)numberOfRows;
- (struct _NSRange)rowsInRect:(struct CGRect)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)setDrawingIntoRowCache:(BOOL)arg1;
- (struct CGRect)rectOfRow:(long long)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)_drawHighlightForRowCacheOfSize:(struct CGSize)arg1;
- (BOOL)drawsSelection;
- (BOOL)isAnimationEnabled;
- (void)setAnimationEnabled:(BOOL)arg1;
- (void)animateMovementOverTime:(double)arg1;
- (void)stepAnimation:(id)arg1;
- (void)rememberIndexes;
- (void)forgetIndexes;
- (id)_prevRowOriginsFromSnapshot;
- (BOOL)isAnimating;
- (struct CGPoint)_animatedRowOrigin:(long long)arg1;
- (void)logDebugInfo;
- (void)dealloc;
- (void)_finishAnimation;
- (void)removeFromSuperview;
- (void)_clearRowCache;

@end

@interface ChatViewController : NSViewController <SOInputLineViewControllerDelegate, IMChatSendProgressDelegate>
{
    BOOL _animatesChatDisplayControllerChanges;
    BOOL _animatingChatDisplayControllerTransition;
    BOOL _isStartingNewChat;
    BOOL _isAudioMessage;
    int _footerDisplay;
    NSView *_inputLineView;
    NSView *_rejoinView;
    NSView *_invitationView;
    ChatTranscriptViewController *_chatTranscriptViewController;
    SOInputLineViewController *_inputLineViewController;
    RecipientBarViewController *_recipientBarViewController;
    SOChatDisplayController *_chatDisplayController;
    Chat *_chat;
    NSWindow *_inviteMessageSheet;
    NSTextField *_inviteMessageText;
    NSTextField *_inviteMessageLabel;
    NSButton *_rejoinChatButton;
    NSVisualEffectView *_headerView;
    SOHeaderView *_headerViewContent;
    NSLayoutConstraint *_headerViewTopConstraint;
    NSView *_headerViewSeparator;
    NSVisualEffectView *_footerView;
    SOHeaderView *_footerViewContent;
    NSView *_footerViewSeparator;
    NSString *_inviteMessage;
    NSLayoutConstraint *_inputLineMinimumHeightConstraint;
    double _previousProgressSending;
}

+ (id)_displayButtonTitle;
+ (id)_acceptButtonTitle;
+ (double)minHeight;
+ (double)minWidth;
@property(nonatomic) double previousProgressSending; // @synthesize previousProgressSending=_previousProgressSending;
@property(nonatomic) BOOL isAudioMessage; // @synthesize isAudioMessage=_isAudioMessage;
@property(nonatomic) BOOL isStartingNewChat; // @synthesize isStartingNewChat=_isStartingNewChat;
@property(nonatomic) NSLayoutConstraint *inputLineMinimumHeightConstraint; // @synthesize inputLineMinimumHeightConstraint=_inputLineMinimumHeightConstraint;
@property(retain) NSString *inviteMessage; // @synthesize inviteMessage=_inviteMessage;
@property(nonatomic) int footerDisplay; // @synthesize footerDisplay=_footerDisplay;
@property(retain) NSView *footerViewSeparator; // @synthesize footerViewSeparator=_footerViewSeparator;
@property(retain) SOHeaderView *footerViewContent; // @synthesize footerViewContent=_footerViewContent;
@property(retain) NSVisualEffectView *footerView; // @synthesize footerView=_footerView;
@property(retain) NSView *headerViewSeparator; // @synthesize headerViewSeparator=_headerViewSeparator;
@property(retain) NSLayoutConstraint *headerViewTopConstraint; // @synthesize headerViewTopConstraint=_headerViewTopConstraint;
@property(retain) SOHeaderView *headerViewContent; // @synthesize headerViewContent=_headerViewContent;
@property(retain) NSVisualEffectView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) NSButton *rejoinChatButton; // @synthesize rejoinChatButton=_rejoinChatButton;
@property(retain) NSTextField *inviteMessageLabel; // @synthesize inviteMessageLabel=_inviteMessageLabel;
@property(retain) NSTextField *inviteMessageText; // @synthesize inviteMessageText=_inviteMessageText;
@property(retain) NSWindow *inviteMessageSheet; // @synthesize inviteMessageSheet=_inviteMessageSheet;
@property(nonatomic, getter=isAnimatingChatDisplayControllerTransition) BOOL animatingChatDisplayControllerTransition; // @synthesize animatingChatDisplayControllerTransition=_animatingChatDisplayControllerTransition;
@property(readonly) Chat *chat; // @synthesize chat=_chat;
@property BOOL animatesChatDisplayControllerChanges; // @synthesize animatesChatDisplayControllerChanges=_animatesChatDisplayControllerChanges;
@property(retain, nonatomic) SOChatDisplayController *chatDisplayController; // @synthesize chatDisplayController=_chatDisplayController;
@property(retain) RecipientBarViewController *recipientBarViewController; // @synthesize recipientBarViewController=_recipientBarViewController;
@property(retain, nonatomic) SOInputLineViewController *inputLineViewController; // @synthesize inputLineViewController=_inputLineViewController;
@property(retain) ChatTranscriptViewController *chatTranscriptViewController; // @synthesize chatTranscriptViewController=_chatTranscriptViewController;
- (void).cxx_destruct;
- (void)viewWillDisappear;
- (void)_footerViewFrameDidChange:(id)arg1;
- (void)_updateBottomOverlap;
- (void)_headerViewFrameDidChange:(id)arg1;
- (void)_updateTopOverlap;
- (void)_chatDisplayControllerChatDidChange:(id)arg1;
- (void)_chatDisplayControllerRecipientsDidChange:(id)arg1;
- (void)saveChatAs:(id)arg1;
- (void)fadeinAnimation:(double)arg1;
- (void)recipientsSelected:(id)arg1;
- (void)setChatShowsNamesAndPictures:(id)arg1;
- (void)setChatShowsPictures:(id)arg1;
- (void)setChatShowsNames:(id)arg1;
- (id)quicklookPreviewPanelDataSource;
- (void)toggleShowAllBuddyPicturesInConversations:(id)arg1;
- (void)clearTranscript:(id)arg1;
- (void)scrollToBottom:(id)arg1;
- (void)_inviteMsgDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)cancelInviteMessage:(id)arg1;
- (void)acceptInviteMessage:(id)arg1;
- (void)_runInviteSheetForInvitees:(id)arg1;
- (void)blockInvitation:(id)arg1;
- (void)rejectInvitation:(id)arg1;
- (void)acceptInvitation:(id)arg1;
- (void)_peopleChanged;
- (void)_showErrorSheetWithTitle:(id)arg1 message:(id)arg2 helpAnchor:(id)arg3;
- (void)_chatErrorPosted:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)block:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)toggleQuietMode:(id)arg1;
- (void)handleIMChatParticipantStateDidChange:(id)arg1;
- (id)_debugNSStringFromIMChatParticipantState:(unsigned long long)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)composeEMail:(id)arg1;
- (BOOL)_hasSendError;
- (id)localizedErrorMessage;
- (void)_displayIMessageChatError:(id)arg1;
- (void)_handleIMessageErrorForTokenFieldController:(id)arg1;
- (void)_displayIMessageErrorForTokenFieldController:(id)arg1;
- (void)sendPartialMessage:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)_sendMessage;
- (void)rejoinChat:(id)arg1;
- (void)_sendMessage:(BOOL)arg1 forceSend:(BOOL)arg2;
- (void)_sendMessage:(id)arg1;
- (void)chat:(id)arg1 progressDidChange:(float)arg2 sendingMessages:(id)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(BOOL)arg6;
- (id)undoManagerForInputLineManager:(id)arg1;
- (void)inputLineDidEnter:(id)arg1 isAudioMessage:(BOOL)arg2;
- (id)completionsForPartialString:(id)arg1;
- (BOOL)addNewIMHandles:(id)arg1;
- (void)_updateFooterContents:(id)arg1;
- (void)_accountLoginStatusChanged:(id)arg1;
- (void)_setJoinedState;
- (void)_setJoiningState;
- (void)_setUnjoinedState;
- (BOOL)isInputLineVisible;
- (void)pasteAndMatchStyle:(id)arg1;
- (void)paste:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)makeInputFieldFirstResponderAndResetSelection:(BOOL)arg1;
@property(readonly, nonatomic) SOInputLine *preparedFieldEditor;
- (void)_handleMenuUserSwitchedHandle:(id)arg1;
- (void)_setIsInvitingForGroupChatIfApplicable;
- (void)_postPeopleChanged;
@property(readonly, nonatomic) BOOL inputLineHasFocus;
- (id)undoManager;
@property(readonly, copy) NSString *description;
@property(readonly) NSArray *selectedIMHandles;
@property(readonly) FezWebView *chatTranscriptView; // @dynamic chatTranscriptView;
@property(readonly, nonatomic) NSWindow *window; // @dynamic window;
- (void)dealloc;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithChatDisplayController:(id)arg1;
- (void)_commonChatViewControllerInitWithChatDisplayController:(id)arg1;
- (void)viewDidLoad;
- (void)_beginNewChat;
@property(readonly, nonatomic) SOInputLine *inputLine; // @dynamic inputLine;
@property(readonly, nonatomic) NSView *invitationView; // @synthesize invitationView=_invitationView;
@property(readonly, nonatomic) NSView *rejoinView; // @synthesize rejoinView=_rejoinView;
@property(readonly, nonatomic) NSView *inputLineView; // @synthesize inputLineView=_inputLineView;
- (void)makeTextStandardSize:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextLarger:(id)arg1;
@property(nonatomic) BOOL showsFooterView; // @dynamic showsFooterView;
@property double topMargin; // @dynamic topMargin;
@property(nonatomic) BOOL showsHeaderView; // @dynamic showsHeaderView;
- (void)setChat:(id)arg1;
- (void)setChatDisplayController:(id)arg1 animated:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChooseBuddyButton : MenuButton
{
    Account *_account;
    int _buddiesShown;
    IMHandle *_selectedIMHandle;
    BOOL _registered;
    BOOL _menuIsValid;
    NSArray *_cachedPresentites;
    NSArray *_ignoredIMHandles;
    NSWindow *_customIDSheet;
    ExtendedComboBox *_customIDText;
    NSButton *_customIDOK;
    NSButton *_customIDCancel;
    ServicePopUp *_customIDService;
}

@property(nonatomic) int buddiesShown; // @synthesize buddiesShown=_buddiesShown;
- (void)_chooseIDDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)cancelCustomID:(id)arg1;
- (void)acceptCustomID:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)selectedAccountStatusChanged:(id)arg1;
- (void)customIDServiceSelected:(id)arg1;
- (void)chooseCustomID:(id)arg1;
- (void)_personSelected:(id)arg1;
- (void)_selectIMHandle:(id)arg1;
- (void)runPopUpInFrame:(struct CGRect)arg1 ofView:(id)arg2;
- (void)invalidateMenu;
- (id)comboBox:(id)arg1 completedString:(id)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)_recacheIMHandleInformation;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_rebuildBuddyMenu;
- (void)_loadChooseIDNibIfNecessary;
- (id)_addItemForAccount:(id)arg1 atTop:(BOOL)arg2;
- (id)_addItemForEmptyList;
- (id)_addItemForIMHandle:(id)arg1 toMenu:(id)arg2 showingDetails:(BOOL)arg3;
- (void)_invalidateMenu:(id)arg1;
- (void)_registerForNotifications;
- (id)selectedIMHandle;
- (void)setIgnoredIMHandles:(id)arg1;
@property(nonatomic) Account *account;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface MenuButton : NSButton
{
    NSPopUpButtonCell *_popUpCell;
    NSString *_axDescription;
    BOOL _overlayStyle;
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOverlayStyle;
- (void)setOverlayStyle:(BOOL)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
- (void)setAccessibilityDescription:(id)arg1;
- (void)performClick:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (BOOL)_runPopUp;
- (void)runPopUpInFrame:(struct CGRect)arg1 ofView:(id)arg2;
- (BOOL)usesMenu;
- (void)setUsesMenu:(BOOL)arg1;
- (void)dealloc;

@end

@interface OpenGLImageLayer : OpenGLTextureLayer
{
    NSBitmapImageRep *_bitmap;
    NSString *_imageName;
    BOOL _alphaBorder;
    NSMutableDictionary *_savedBitmaps;
    float _texCoords[8];
    float _borderLeft;
    float _borderRight;
    float _borderTop;
    float _borderBottom;
    BOOL _mapCenter;
}

- (void)renderTexture:(struct _CGLContextObject *)arg1;
- (void)_renderBorder:(struct _CGLContextObject *)arg1;
- (void)clearTextureBorders;
- (void)setTextureBorder:(float)arg1 mapCenter:(BOOL)arg2;
- (void)setTextureBorderLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4 mapCenter:(BOOL)arg5;
- (void)setImageToImageNamed:(id)arg1;
- (void)setImageToImage:(id)arg1 named:(id)arg2;
- (CDStruct_8a8b3360)_textureLayerInfo;
- (BOOL)hasAlphaBorder;
- (void)dealloc;
- (id)initWithImageNamed:(id)arg1 alphaBorder:(BOOL)arg2 layerName:(id)arg3;
- (id)initWithImage:(id)arg1 named:(id)arg2 alphaBorder:(BOOL)arg3 layerName:(id)arg4;
- (void)_setBitmap:(id)arg1;
- (id)_bitmapFromImage:(id)arg1;
- (void)_updateTexCoords;

@end

@interface AuthorizationRequestController : NSWindowController
{
    NSString *_guid;
    Notifier *_notifier;
    IMHandle *_imHandle;
    NSExtendedBox *_box;
    NSView *_bannerContainer;
    AVParticipantView *_bannerView;
}

+ (id)authorizationRequestControllerWithIMHandle:(id)arg1 notifier:(id)arg2;
- (id)imHandle;
- (id)guid;
- (void)setNotifier:(id)arg1;
- (void)imHandleInfoUpdated:(id)arg1;
- (void)rejectButtonPressed:(id)arg1;
- (void)acceptButtonPressed:(id)arg1;
- (void)dealloc;
- (void)windowDidLoad;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)awakeFromNib;
- (id)_initWithIMHandle:(id)arg1 notifier:(id)arg2;
- (id)objectSpecifier;
- (void)declineScriptCommand:(id)arg1;
- (void)acceptScriptCommand:(id)arg1;
- (id)scriptService;
- (id)scriptBuddy;
- (id)scriptID;

@end

@interface Account : IMAccount
{
    SFCertificateTrustPanel *_trustPanel;
    void *_trustPanelTrust;
    struct __CFArray *_trustPanelCertificates;
}

- (Class)imHandleClass;
- (void)groupsChanged:(id)arg1 error:(id)arg2;
- (void)loginStatusChanged:(unsigned int)arg1 message:(id)arg2 reason:(int)arg3 properties:(id)arg4;
- (void)certificateTrustSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)addPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (void)logoutAccount;
- (void)nowLoggedOut;
- (void)nowLoggedIn;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 reason:(int)arg3;
- (void)_setTimersForNotJustLoggedIn;
- (void)showForgotPasswordDialog;
@property(readonly) NSImage *smallImage; // @dynamic smallImage;
- (id)image;
- (id)_iaPlugin;
- (void)dealloc;
- (void)clearServiceCaches;
- (id)valueInScriptVideoChatsWithUniqueID:(id)arg1;
- (id)objectInScriptVideoChatsAtIndex:(unsigned long long)arg1;
- (id)scriptVideoChats;
- (id)valueInScriptAudioChatsWithUniqueID:(id)arg1;
- (id)objectInScriptAudioChatsAtIndex:(unsigned long long)arg1;
- (id)scriptAudioChats;
- (id)valueInScriptAVChatsWithUniqueID:(id)arg1;
- (id)objectInScriptAVChatsAtIndex:(unsigned long long)arg1;
- (id)scriptAVChats;
- (id)valueInScriptTextChatsWithName:(id)arg1;
- (id)valueInScriptTextChatsWithUniqueID:(id)arg1;
- (id)objectInScriptTextChatsAtIndex:(unsigned long long)arg1;
- (id)scriptTextChats;
- (id)valueInScriptChatsWithName:(id)arg1;
- (id)valueInScriptChatsWithUniqueID:(id)arg1;
- (id)scriptChats;
- (id)valueInBuddiesWithUniqueID:(id)arg1;
- (id)valueInBuddiesWithName:(id)arg1;
- (id)buddies;
- (id)scriptConnectionStatus;
- (id)scriptServiceType;
- (id)scriptServiceStatusMessage;
- (void)setScriptServiceStatusMessage:(id)arg1;
- (id)scriptServiceStatus;
- (void)setScriptServiceStatus:(id)arg1;
- (BOOL)scriptEnabled;
- (void)setScriptEnabled:(BOOL)arg1;
- (id)scriptImage;
- (void)setScriptImage:(id)arg1;
- (id)scriptName;
- (void)setScriptName:(id)arg1;
- (id)objectSpecifier;
- (void)sendScriptCommand:(id)arg1;
- (void)logoutScriptCommand:(id)arg1;
- (void)loginScriptCommand:(id)arg1;

@end

@interface Prefs_Accounts : NSPreferencesModule <IMPreferencePaneControllerProtocol>
{
    Account *_loadedAccount;
    long long _nextRowToSelect;
    NSTextField *_accountText;
    NSTableView *_serviceTable;
    NSSegmentedControl *_addRemoveSegmentedControl;
    NSMutableDictionary *_preferenceControllers;
    NSTabView *_servicesTab;
}

- (void)restoreState:(id)arg1;
- (id)encodableState;
- (void)updateBottomText;
- (void)showHelp:(id)arg1;
- (void)removeAccount:(id)arg1;
- (void)addAccount:(id)arg1;
- (void)accountControlsAction:(id)arg1;
- (void)selectFirstActiveAccount;
- (void)saveChanges;
- (BOOL)preferencesWindowShouldClose;
- (BOOL)moduleCanBeRemoved;
- (void)initializeFromDefaults;
- (void)willBeDisplayed;
- (id)viewForPreferenceNamed:(id)arg1;
- (void)selectAccount:(id)arg1;
- (void)_managedPrefsChanged:(id)arg1;
- (void)accountSelectionChanged:(id)arg1;
- (void)updateServiceTable:(id)arg1;
- (BOOL)isResizable;
- (void)dealloc;
- (id)init;
- (void)awakeFromNib;
- (void)loadPreferenceBundles;
- (void)_accountChanged:(id)arg1;
- (void)_accountDoubleClicked:(id)arg1;
- (void)_addressBookChanged:(id)arg1;
- (void)_windowBecameMain:(id)arg1;
- (void)_windowLostFocus:(id)arg1;
- (void)_accountSettingsChanged:(id)arg1;
- (void)_accountAdded:(id)arg1;
- (void)_updateAccountSync;
- (void)loadAccount:(id)arg1;
- (void)selectCurrentPrefTabViewItem;
- (id)currentPrefController;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)preferenceControllerForInternalServiceName:(id)arg1;

@end

@interface DocumentController : NSDocumentController
{
}

- (unsigned long long)maximumRecentDocumentCount;

@end

@interface Fezz : NSObject <FezHotKeyHandler, NSActivityApplicationDelegate, NSApplicationDelegate, NSMenuDelegate, SOUnreadCountHelperDelegate, SOURLFetcherDelegate>
{
    NSMenuItem *_smileyMenuItem;
    NSMenuItem *_balloonMenuItem;
    NSMenuItem *_firstServiceStatusItem;
    NSMenuItem *_statusSeparatorMenuItem;
    NSMenuItem *_myStatusMenuItem;
    NSMenuItem *_firstPeopleListMenuItem;
    NSMenuItem *_changeMyPictureMenuItem;
    NSMenuItem *_servicesMenuItem;
    NSMenuItem *_editAddLinkSeparatorMenuItem;
    NSMenuItem *_editAddLinkMenuItem;
    NSMenuItem *_viewShowSeparatorMenuItem;
    NSMenuItem *_viewShowBuddyPicturesMenuItem;
    NSMenuItem *_viewShowAudioStatusMenuItem;
    NSMenuItem *_viewShowVideoStatusMenuItem;
    NSMenuItem *_viewShowOfflineBuddiesMenuItem;
    NSMenuItem *_viewUseGroupsMenuItem;
    NSMenuItem *_viewUssOfflineGroupsMenuItem;
    NSMenuItem *_viewSortBuddiesMenuItem;
    NSMenuItem *_viewMessagesOptionsMenuItem;
    NSMenuItem *_buddiesShowInfoMenuItem;
    NSMenuItem *_buddiesShowProfileMenuItem;
    NSMenuItem *_buddiesShowInBuddyListMenuItem;
    NSMenuItem *_buddiesAddABuddyMenuItem;
    NSMenuItem *_buddiesRemoveABuddyMenuItem;
    NSMenuItem *_buddiesStartNewChatMenuItem;
    NSMenuItem *_buddiesSharingSeparatorMenuItem;
    NSMenuItem *_buddiesInviteToVideoChatMenuItem;
    NSMenuItem *_buddiesInviteToAudioChatMenuItem;
    NSMenuItem *_buddiesShareMyScreenMenuItem;
    NSMenuItem *_buddiesShareRemoteScreenMenuItem;
    NSMenuItem *_buddiesEndScreenSharingMenuItem;
    NSMenuItem *_buddiesAuthSeparatorMenuItem;
    NSMenuItem *_buddiesBlockPersonMenuItem;
    NSMenuItem *_buddiesRequestAuthorizationMenuItem;
    NSMenuItem *_buddiesNewGroupSeparatorMenuItem;
    NSMenuItem *_buddiesCreateNewGroupWithPeople;
    NSMenuItem *_formatMenuItem;
    NSMenuItem *_diagnosticsModeMenuItem;
    NSMenuItem *_collectLogsMenuItem;
    NSMenuItem *_collectLogsMenuSeparatorItem;
    StatusController *_statusController;
    StatusController *_dockStatusController;
    NSArray *_inviteData;
    NSMutableArray *_aeQueue;
    BOOL _connectedToDaemon;
    NSMenuItem *_switchToMenuItem;
    long long _switchToMenuIndex;
    NSWindow *_chooserWindow;
    NSAlert *_aliasValidationAlert;
    NSMutableDictionary *_hotKeyInfo;
    NSMutableDictionary *_chatWindowControllerToChatMap;
    NSDictionary *_buddyIconDownloadInfo;
    BOOL _finishedLaunching;
    BOOL _finishedDelayedLaunching;
    BOOL _finishedDeferredLaunching;
    BOOL _hasSetupAVController;
    BOOL _terminating;
    BOOL _isTogglingWindow;
    NSMutableArray *_filesToOpen;
    NSMutableArray *_pendingSMSRelayPINPrompts;
    SOUnreadCountHelper *_unreadCountHelper;
    BOOL _isInLegacyMode;
    NSMenuItem *_avMenuItem;
    long long _indexOfAVMenu;
    NSMenuItem *_deleteConversationMenuItem;
    NSMenuItem *_closeConversationMenuItem;
    NSMenuItem *_closeAllConversationsMenuItem;
}

+ (BOOL)hasUnsentMessages;
+ (unsigned long long)numberOfUnreadMessages;
+ (void)connectToDaemon;
+ (void)triggerStartConnecting;
+ (void)dismissCouldNotConnectDialog;
+ (void)showCouldNotConnectDialog;
+ (id)sharedInstance;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (int)drainTALCompletionHandlers;
+ (long long)restorableStateStorageVersion;
@property(nonatomic) BOOL isInLegacyMode; // @synthesize isInLegacyMode=_isInLegacyMode;
@property(retain, nonatomic) NSMenuItem *closeAllConversationsMenuItem; // @synthesize closeAllConversationsMenuItem=_closeAllConversationsMenuItem;
@property(retain, nonatomic) NSMenuItem *closeConversationMenuItem; // @synthesize closeConversationMenuItem=_closeConversationMenuItem;
@property(retain) NSMenuItem *deleteConversationMenuItem; // @synthesize deleteConversationMenuItem=_deleteConversationMenuItem;
@property(nonatomic) long long indexOfAVMenu; // @synthesize indexOfAVMenu=_indexOfAVMenu;
@property(retain, nonatomic) NSMenuItem *avMenuItem; // @synthesize avMenuItem=_avMenuItem;
- (void)setImageAtURL:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
- (void)_cleanUpDownloadWithError:(BOOL)arg1;
- (void)_setImage:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
- (void)urlFetcher:(id)arg1 fetchFailedWithError:(id)arg2;
- (void)urlFetcher:(id)arg1 fetchedResult:(id)arg2;
- (id)statusController;
- (id)chooserWindow;
- (void)showProfileForIMHandle:(id)arg1;
- (void)showInfoForIMHandle:(id)arg1;
- (void)doAddBuddyCommandForIMHandle:(id)arg1 withWindow:(id)arg2;
- (void)handleHotKey:(long long)arg1;
- (void)markChatGUIDAsRead:(id)arg1;
- (BOOL)isChatActive:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidBecomeActive:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)openFilesAfterLaunch;
- (id)_openFile:(id)arg1;
- (void)_unreadCountChanged:(id)arg1;
- (void)checkDaemonConnection;
- (void)dealloc;
- (id)init;
- (void)resurrectPersistentChats;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_revealLocalLogs:(id)arg1;
- (void)diagnosticsMode:(id)arg1;
- (void)collectLogs:(id)arg1;
- (void)sortConversationsManually:(id)arg1;
- (void)sortConversationsByDate:(id)arg1;
- (void)toggleMute:(id)arg1;
- (BOOL)forwardValidateMenuItem:(id)arg1 toController:(id)arg2;
- (void)logBuddyListInOrOut:(id)arg1;
- (void)performClose:(id)arg1;
- (void)terminate:(id)arg1;
- (void)unhideAllApplications:(id)arg1;
- (void)hideOtherApplications:(id)arg1;
- (void)hide:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)toggleRecording:(id)arg1;
- (void)toggleHideLocalVideo:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)sortByLastName:(id)arg1;
- (void)sortByFirstName:(id)arg1;
- (void)sortByStatus:(id)arg1;
- (void)sortByName:(id)arg1;
- (void)sortManually:(id)arg1;
- (void)doNothing:(id)arg1;
- (void)toggleUsesOfflineGroup:(id)arg1;
- (void)toggleArrangesByGroup:(id)arg1;
- (void)toggleShowOfflines:(id)arg1;
- (void)toggleHideVideoStatus:(id)arg1;
- (void)toggleHideAudioStatus:(id)arg1;
- (void)toggleHidePictures:(id)arg1;
- (void)toggleUnifiedChatWindow:(id)arg1;
- (void)block:(id)arg1;
- (void)deleteSelectedBuddies:(id)arg1;
- (void)togglePublishARD:(id)arg1;
- (void)togglePublishCamera:(id)arg1;
- (void)togglePublishMic:(id)arg1;
- (void)toggleEffectsPalette:(id)arg1;
- (void)changeBuddyPicture:(id)arg1;
- (void)showAddressBook:(id)arg1;
- (void)showSelfPreview:(id)arg1;
- (void)resetBackground:(id)arg1;
- (void)showVCInfo:(id)arg1;
- (void)cancelARDSession:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)showFileTransferManager:(id)arg1;
- (void)showPeopleListControllerWithActivate:(id)arg1;
- (void)showPeopleListControllerForAccount:(id)arg1;
- (void)showPeopleListControllerForBuddyListAccount:(id)arg1;
- (void)showPeopleListController:(id)arg1;
- (void)toggleAccountConnection:(id)arg1;
- (void)_togglePeopleList:(id)arg1;
- (void)closeAllConversations:(id)arg1;
- (void)goToChat:(id)arg1;
- (void)newChat:(id)arg1;
- (void)showVideoPrefs:(id)arg1;
- (void)addAccount:(id)arg1;
- (void)showAccounts:(id)arg1;
- (void)showPrefs:(id)arg1;
- (void)showAbout:(id)arg1;
- (void)sendStyleMessageTracerData;
- (void)_handleGURLAppleEvent:(id)arg1 reply:(id)arg2;
- (id)_accountForMessagingStringIDs:(id)arg1;
- (BOOL)_handleRequestFor:(id)arg1 style:(int)arg2 roomName:(id)arg3 message:(id)arg4 error:(id *)arg5;
- (id)_generateErrorWithReason:(id)arg1 descriptiveText:(id)arg2;
- (BOOL)_confirmAndGoToChatRoom:(id)arg1 account:(id)arg2;
- (BOOL)_confirmAndInviteToARD:(BOOL)arg1 imHandles:(id)arg2;
- (BOOL)_confirmAndInviteToAVChatVideo:(BOOL)arg1 imHandles:(id)arg2;
- (BOOL)_confirmActionWithMessage:(id)arg1 info:(id)arg2 button:(id)arg3;
- (id)_handleTextComposeRequestFor:(id)arg1 style:(int)arg2 roomName:(id)arg3 message:(id)arg4;
- (id)_imHandlesWithCardUIDs:(id)arg1 forAccount:(id)arg2 preferOnline:(BOOL)arg3;
- (id)_imHandlesWithCardUIDs:(id)arg1 forSpecificAccount:(id)arg2;
- (id)_imHandlesWithIDs:(id)arg1 forAccount:(id)arg2;
- (void)_handleAEQueue;
- (void)_installAEHandlers;
- (void)setChooserWindow:(id)arg1;
- (void)awakeFromNib;
- (void)_populateChatMenuItems;
- (BOOL)isAppTerminating;
- (BOOL)isAppLaunching;
- (BOOL)delayedLaunchComplete;
- (BOOL)deferredLaunchComplete;
- (void)afterLaunchMakeObject:(id)arg1 performSelector:(SEL)arg2;
- (void)_dockItemPicked:(id)arg1;
- (id)applicationDockMenu:(id)arg1;
- (void)updatePeopleListWindowItem;
- (void)_updateBuddyListMenu:(id)arg1;
- (BOOL)activateRecentChat;
- (void)_displayChatController:(id)arg1;
- (BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)_showTransferFromNotification:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)_daemonConnected;
- (void)_addressBookChanged:(id)arg1;
- (void)_updateLegacyMode:(id)arg1;
- (void)_updateLegacyMode;
- (void)_aliasValidationStatusChanged:(id)arg1;
- (void)setupFinished:(id)arg1;
- (void)_delayedApplicationLoading;
- (void)_smsRelayPINReceived:(id)arg1;
- (void)_showNextSMSRelayPINPrompt;
- (void)_showSMSRelayPromptIfNeeded;
- (BOOL)_shouldShowSMSRelayPrompt;
- (BOOL)shouldShowSetup;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (void)unifiedModeChanged:(id)arg1;
- (void)_messageSeletionChanged:(id)arg1;
- (void)_profileValidationChanged;
- (void)_timeZoneChanged;
- (void)_setupViceroy;
- (void)_deferredApplicationDidFinishLaunching;
- (void)_setupAVControllerIfNeeded;
- (void)_finishDeferredLaunching;
- (void)_loadBuddyLists;
- (void)_unloadBuddyLists;
- (void)createRequiredFolders;
- (void)_createDownloadsFolder;
- (void)_updateLaunchOnMessageReceipt;
- (void)_migrateAIMAccountsToAPI;
- (id)_menuItemWithTitle:(id)arg1 fromArray:(id)arg2 withPossibleSelectors:(id)arg3;
- (id)activeChat;
- (void)restoreArchivedChats:(id)arg1;
- (void)_prepareInternals;
- (void)_saveCameraSettings;
- (void)_createCacheFolder;
- (void)_initAVMenu;
- (void)_updateAVMenu;
- (void)unregisterGlobalHotKey;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VCStatItem : NSObject
{
    AVChatParticipant *_participant;
    int _type;
    NSAttributedString *_labelValue;
    id _statValue;
}

+ (id)statItemsForAVChat:(id)arg1 vcStats:(id)arg2 logFramerate:(BOOL)arg3;
+ (id)_labelAttributesForType:(int)arg1;
- (id)statValue;
- (id)labelValue;
- (int)type;
- (id)participant;
- (void)dealloc;
- (id)_initWithType:(int)arg1 label:(id)arg2 stat:(id)arg3;
- (id)_initWithParticipant:(id)arg1 type:(int)arg2 label:(id)arg3 stat:(id)arg4;

@end

@interface _VCInfoColumn : NSTableColumn
{
    NSLevelIndicatorCell *_levelCell;
}

- (id)dataCellForRow:(long long)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface VCInfoTable : NSTableView
{
}

- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)awakeFromNib;
- (void)_setupColumns;

@end

@interface ServiceController : NSObject
{
}

+ (id)sharedObject;
- (void)_accountNoLongerJustLoggedIn:(id)arg1;
- (id)init;

@end

@interface ConfigKeyEditor : NSTextView
{
    id _master;
    NSNumber *_virtualKey;
    unsigned long long _modifiers;
    id _textField;
    BOOL _operationModeEnabled;
    unsigned int _savedHotKeyOperatingMode;
}

- (void)setTextField:(id)arg1;
- (id)textField;
- (id)modifier;
- (id)key;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)dealloc;
- (id)initConfigKeyEditorWithMaster:(id)arg1;
- (void)_windowDidResignKeyNotification:(id)arg1;
- (void)_windowDidBecomeKeyNotification:(id)arg1;
- (void)_restoreHotKeyOperationMode;
- (void)_disableHotKeyOperationMode;

@end

@interface MultiBuddyImageView : NSView
{
    NSArray *_imHandles;
    unsigned long long _curImage;
    unsigned long long _oldImage;
    double _opacity;
    BOOL _transitionPending;
    BOOL _animateBuddyIcon;
    Animator *_animator;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_drawPicture:(id)arg1 fraction:(float)arg2;
- (void)stopCycling;
- (void)startCycling;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)_delayTransition;
- (void)_startTransition;
- (void)_nextImage;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (void)_needsDrawFromAnimate:(id)arg1;
- (BOOL)allowsBuddyIconAnimation;
- (void)setAllowsBuddyIconAnimation:(BOOL)arg1;
- (void)setIMHandles:(id)arg1;
- (void)setIMHandle:(id)arg1;
- (void)_subscribe:(BOOL)arg1;
- (void)_pictureChanged:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

@end

@interface ExtendedComboBox : NSComboBox
{
    BOOL _allowsLineBreaks;
    BOOL _passesReturnKey;
    BOOL _allowsRichText;
    BOOL _trimWhitespace;
    ServicePopUp *_servicePopUp;
    NSString *_prefKey;
    BOOL _autoFilled;
    NSString *_suffix;
    id _returnDelegate;
}

- (BOOL)becomeFirstResponder;
- (void)textDidEndEditing:(id)arg1;
- (void)saveRecentsList;
- (void)updateRecentsList;
- (void)loadLastRecentValue;
- (id)recentsListPrefKey;
- (void)setRecentsListPrefKey:(id)arg1;
- (id)_prefKey;
- (void)updateNumberOfVisibleItems;
- (void)setAutoFilled:(BOOL)arg1;
- (BOOL)isAutoFilled;
- (void)setObjectValue:(id)arg1;
- (void)setPopUpButtonVisible:(BOOL)arg1;
- (BOOL)isPopUpButtonVisible;
- (void)setStringValue:(id)arg1;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)suffix;
- (void)setSuffix:(id)arg1;
- (id)_suffixAttributes;
- (void)keyDown:(id)arg1;
- (BOOL)trimsWhitespace;
- (void)setTrimsWhitespace:(BOOL)arg1;
- (BOOL)allowsRichText;
- (void)setAllowsRichText:(BOOL)arg1;
- (BOOL)allowsLineBreaks;
- (void)setAllowsLineBreaks:(BOOL)arg1;
- (void)setReturnDelegate:(id)arg1;
- (void)setPassesReturnEvent:(BOOL)arg1;
- (BOOL)passesReturnEvent;
- (void)dealloc;
- (void)_installCustomCell;
- (id)init;

@end

@interface NSExtendedImageView : NSImageView
{
    BOOL _mouseDownCanMoveWindow;
}

- (void)setMouseDownCanMoveWindow:(BOOL)arg1;
- (BOOL)mouseDownCanMoveWindow;

@end

@interface NSExtendedComboBoxCell : NSComboBoxCell
{
    BOOL _drawPopUpButton;
    NSTextFieldCell *_textFieldCell;
}

- (float)_buttonWidth;
- (struct CGRect)boundsForButtonCell:(struct CGRect)arg1;
- (struct CGRect)boundsForTextCell:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isPopUpButtonVisible;
- (void)setPopUpButtonVisible:(BOOL)arg1;
- (void)dealloc;

@end

@interface ChatWindowController : NSWindowController <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    QLPreviewPanel *_previewPanel;
    id <QLPreviewPanelDelegate><QLPreviewPanelDataSource> _previewPanelDataSource;
    ChatViewController *_chatViewController;
    SOStaticImageView *_chatViewContainer;
    NSViewController *_currentViewController;
    id _TALCompletionBlock;
    NSUndoManager *_windowUndoManager;
}

+ (id)_chatWindowControllerRegistry;
+ (void)displayChatController:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (id)bestChatWindowControllerForChatController:(id)arg1;
+ (id)chatWindowControllerForChatDisplayController:(id)arg1;
+ (id)allChatWindowControllers;
@property(retain, nonatomic) NSUndoManager *windowUndoManager; // @synthesize windowUndoManager=_windowUndoManager;
@property(copy, nonatomic) id TALCompletionBlock; // @synthesize TALCompletionBlock=_TALCompletionBlock;
@property(retain, nonatomic) NSViewController *currentViewController; // @synthesize currentViewController=_currentViewController;
@property(retain, nonatomic) SOStaticImageView *chatViewContainer; // @synthesize chatViewContainer=_chatViewContainer;
@property(retain, nonatomic) ChatViewController *chatViewController; // @synthesize chatViewController=_chatViewController;
- (void).cxx_destruct;
- (void)printDocument:(id)arg1;
- (void)printOperationDidRun:(id)arg1 success:(BOOL)arg2 contextInfo:(void *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)_updateQuickLookPreviewPanel;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)quickLook:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidLoad;
- (void)restoreContentStateWithCoder:(id)arg1;
- (void)deleteSheetWasDismissed:(long long)arg1 forChatController:(id)arg2;
- (void)tryToDeleteConversation:(id)arg1;
- (void)deleteConversation:(id)arg1;
- (void)tryToCloseConversation:(id)arg1;
- (void)closeAndSaveConversation:(id)arg1;
- (void)_closeConversation:(id)arg1;
- (void)closeChatDisplayController:(id)arg1;
- (void)tryToCloseChatDisplayController:(id)arg1;
- (void)displayChatDisplayController:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)existingChatDisplayControllerForChat:(id)arg1;
- (BOOL)containsConversation:(id)arg1;
- (id)windowTitle;
- (void)updateWindowTitle;
- (void)chatDisplayControllerDidChange;
- (void)chatDisplayControllerWillChange:(id)arg1;
- (void)setChatDisplayController:(id)arg1 animated:(BOOL)arg2;
- (id)informativeTextForUnsentMessageCount:(unsigned long long)arg1;
- (BOOL)presentUnsentMessagesAlert;
- (id)alertTextForWindowClosingSheet;
- (void)cancelOperation:(id)arg1;
- (BOOL)canceledRecordingAudioMessage:(id)arg1;
- (void)dealloc;
- (BOOL)validateMenuItem:(id)arg1;
- (void)closeSelectedConversation:(id)arg1;
- (void)deleteSelectedConversation:(id)arg1;
@property(readonly, nonatomic) unsigned long long unsentMessageCount; // @dynamic unsentMessageCount;
@property(readonly, nonatomic) unsigned long long unreadMessageCount; // @dynamic unreadMessageCount;
@property(retain, nonatomic) SOChatDisplayController *chatDisplayController; // @dynamic chatDisplayController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OpenGLCoreVideoLayer : OpenGLLayer <FrameListener>
{
    BOOL _isRegisteredListener;
    NSString *_videoSourceName;
    Texture *_texture;
    BOOL _mirrored;
    float _blackTint;
    NSOpenGLContext *_frameReaderContext;
    CIContext *_frameReaderCIContext;
    FrameReader *_frameReader;
}

- (float)sceneBrightness;
- (id)bitmapFromLayer;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)compositeTexture:(struct _CGLContextObject *)arg1;
- (BOOL)isMirrored;
- (void)setMirrored:(BOOL)arg1;
- (float)blackTint;
- (void)setBlackTint:(float)arg1;
- (void)textureDidChange;
- (id)texture;
- (void)setTexture:(id)arg1;
- (void)_setLayerModel:(id)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 layerName:(id)arg2 videoSource:(id)arg3;
- (void)ensureRegisteredListener:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MyScroller : NSScroller
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MyScrollView : NSScrollView
{
}

- (void)viewDidEndLiveResize;
- (void)awakeFromNib;

@end

@interface BuddyInfo : NSWindowController <ServiceFieldControllerDelegate, NSTokenFieldDelegate>
{
    IMPerson *_person;
    NSMutableArray *_imHandles;
    IMHandle *_initialHandle;
    BOOL _profileViewsLayoutPending;
    BOOL _setFirstNamePending;
    BOOL _setLastNamePending;
    BOOL _setNicknamePending;
    BOOL _tryToMergeABPerson;
    BOOL _updatingUI;
    BOOL _fitProfile;
    NSWindow *_infoWindow;
    NSSegmentedControl *_tabControl;
    NSTabView *_tabView;
    NSTabViewItem *_profileTab;
    NSView *_profileContainer;
    NSTabViewItem *_addressCardTab;
    SOBuddyPictureView *_abPicture;
    NSButton *_abAlwaysUsePictureButton;
    NSTextField *_abAlwaysUsePictureField;
    NSTextField *_abFirstNameField;
    NSTextField *_abLastNameField;
    NSTextField *_abNicknameField;
    NSTokenField *_abEmailField;
    NSTokenField *_abPhoneNumberField;
    NSButton *_abButton;
    NSMenu *_tokenMenu;
    NSWindow *_peoplePickerSheet;
    PeoplePicker *_peoplePicker;
    NSButton *_chooseCardButton;
    NSCollectionView *_serviceFields;
    BOOL _loadedPeoplePickerNib;
    unsigned int _closing:1;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)restoreWindowAtLaunch:(id)arg1;
+ (void)openPictureIconWidgetWithImage:(id)arg1 forIMHandle:(id)arg2 allowEditing:(BOOL)arg3;
+ (void)pictureTakerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
+ (id)videoFrameProviderForPictureTaker:(id)arg1;
+ (id)openForIMHandle:(id)arg1 showProfile:(BOOL)arg2;
+ (id)buddyInfoForIMHandle:(id)arg1 showProfile:(BOOL)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (id)contextMenuForHandle;
- (void)handlesFieldDidChange:(id)arg1 service:(id)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidResize:(id)arg1;
- (void)_createProfileViews;
- (void)setProfileViewsNeedLayout;
- (void)_layoutProfileViews;
- (void)_updateMinMaxSizeForProfile;
- (struct CGSize)_minSizeForProfile;
- (struct CGSize)_maxSizeForProfile;
- (double)_addressCardTabHeight;
- (double)_profileTabHeight;
- (struct CGSize)_windowSizeForTabSize:(struct CGSize)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)block:(id)arg1;
- (void)toggleBuddy:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)composeEMail:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)startChat:(id)arg1;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (void)addressBookButton:(id)arg1;
- (void)_loadPeoplePickerNibIfNeeded;
- (void)_peoplePickerValueUpdated:(id)arg1;
- (void)chooseCard:(id)arg1;
- (void)cancelPicker:(id)arg1;
- (void)_pickerDoubleClicked;
- (void)_peoplePickerDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (id)_selectedABPerson;
- (void)setPhoneNumbers:(id)arg1;
- (void)setEmails:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)_setNickname;
- (void)_setLastName;
- (void)_setFirstName;
- (void)_setName;
- (void)_mergeWith:(id)arg1;
- (void)_addPhoneNumbers:(id)arg1 toABPerson:(id)arg2;
- (void)_addEmails:(id)arg1 toABPerson:(id)arg2;
- (void)_editPicture:(id)arg1;
- (void)toggleAlwaysUsePicture:(id)arg1;
- (void)setPicture:(id)arg1;
- (void)_updateABPicture;
- (void)_createCardAndAddIMHandle:(BOOL)arg1;
- (void)_createCardWithFirstName:(id)arg1 lastName:(id)arg2 nickname:(id)arg3 addIMHandle:(BOOL)arg4;
- (id)_existingCardsWithFirstName:(id)arg1 lastName:(id)arg2 nickname:(id)arg3;
- (void)_setABPerson:(id)arg1 addIMHandle:(BOOL)arg2;
- (void)_addIMHandlesToABPerson:(id)arg1 andSave:(BOOL)arg2;
- (void)_setABPerson:(id)arg1;
- (void)_abDBChanged:(id)arg1;
- (void)_updateUI;
- (void)_updateUIWithNoABPerson;
- (void)_updateUIWithABPerson;
- (void)_updateUIWithNoServiceField;
- (void)_updateIMHandlesArrayWithIMPerson:(id)arg1 orIMHandle:(id)arg2;
- (void)_updatePictureUI;
- (id)_bestCustomPicture;
- (void)_enumerateServiceFieldControllersWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)selectTab:(id)arg1;
- (void)updateWindowForNewTabSize;
- (void)windowDidLoad;
- (void)_updateWindowTitle;
- (id)_personName;
- (void)_tearDownServiceFields;
- (void)_setupServiceFields;
- (BOOL)_hasABFieldForService:(id)arg1;
- (void)_setupMetrics;
@property(readonly) NSSegmentedControl *tabControl;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UTF8ByteLengthFormatter : NSFormatter
{
    long long _maxBytes;
}

- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithMaxBytes:(int)arg1;

@end

@interface ProfileContainer : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (BOOL)isFlipped;

@end

@interface ProfileTextView : NSTextView <NSTextViewDelegate>
{
}

- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)scrollWheel:(id)arg1;
- (BOOL)shouldDrawInsertionPoint;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)_showSelectedText:(BOOL)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ProfileTextField : NSTextField
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface ProfileView : NSView <NSTextViewDelegate>
{
    BuddyInfo *_owner;
    IMHandle *_imHandle;
    NSBox *_separator;
    NSImageView *_statusGemView;
    SOBuddyPictureView *_buddyIconView;
    NSTextField *_accountNameField;
    NSImageView *_accountTypeView;
    NSTextField *_serviceNameField;
    NSImageView *_mobileIconView;
    NSView *_textContainer;
    NSTextField *_idleField;
    NSTextField *_profileLabel;
    NSTextView *_profileText;
    NSTextField *_messageLabel;
    NSTextView *_messageText;
    NSTextField *_capsLabel;
    NSTextView *_capsText;
    NSTextField *_notesLabel;
    NSTextField *_notesText;
    NSView *_contentView;
}

@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
- (void)setNotes:(id)arg1;
- (void)toggleBuddy:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setShowsSeparator:(BOOL)arg1;
- (void)setOwner:(id)arg1;
- (id)imHandle;
- (id)initWithIMHandle:(id)arg1 owner:(id)arg2 saveNib:(BOOL)arg3;
- (void)_accountStatusChanged:(id)arg1;
- (void)_extraPropsChanged:(id)arg1;
- (void)_infoChanged:(id)arg1;
- (void)_feedUpdatedDateChanged:(id)arg1;
- (void)_updateBot:(id)arg1;
- (void)_updateMobile:(id)arg1;
- (void)_updateNotesAndSetText:(BOOL)arg1;
- (void)_hideNotes:(BOOL)arg1;
- (void)_updatePicture:(id)arg1;
- (void)_updateCapabilities:(id)arg1;
- (void)_updateStatus:(id)arg1;
- (void)_updateServiceName;
- (id)_capabilitiesText;
- (void)mouseDown:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateLayout:(BOOL)arg1;
- (void)_removeNotes;
- (void)_removeProfile;
- (void)_hideMessage:(BOOL)arg1;
- (float)_adjustTextView:(id)arg1 dy:(float)arg2;
- (void)_adjustLabel:(id)arg1 toTextView:(id)arg2;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MyNameControl : RolloverButton
{
    float _heightOffset;
}

- (void)drawTitleInRect:(struct CGRect)arg1;
- (float)heightOffset;
- (void)setHeightOffset:(float)arg1;
- (void)awakeFromNib;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    NSMutableDictionary *_schemeToAppMap;
    NSMutableDictionary *_appToSchemesMap;
    NSMutableDictionary *_appToNameMap;
    NSMutableDictionary *_schemeToNameMap;
}

- (void)_selectApp:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)configurePopUp;
- (void)_rebuildMenu;
- (void)_addDummyItemWithTitle:(id)arg1;
- (void)_addItemForApp:(id)arg1;
- (id)_schemeNamesHandledByApp:(id)arg1;
- (id)_imageForApp:(id)arg1;
- (BOOL)_rebuildSchemeMaps;
- (id)_bundleForApp:(id)arg1;
- (unsigned long long)_countOfSchemesHandledByApp:(id)arg1;
- (void)dealloc;

@end

@interface DefaultApplicationPopUpButtonCell : NSPopUpButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface Tooltip : NSObject
{
    NSView *_view;
    BOOL _fadingIn;
    NSTimer *_animationTimer;
    NSDate *_animationStartDate;
    struct CGPoint _previousPosition;
    NSWindow *_window;
}

@property(retain) NSWindow *window; // @synthesize window=_window;
- (void)cleanupAfterClose;
- (void)hideWindowImmediately;
- (void)showWindowImmediately;
- (void)closeImmediately;
- (void)close;
- (BOOL)isVisible;
- (void)open;
- (void)_fadeIn:(BOOL)arg1;
- (BOOL)isAnimating;
- (void)_animationStep:(id)arg1;
- (void)_finishAnimation;
- (void)_setAnimationTimer;
- (void)_stopAnimationTimer;
- (void)_setAnimationStartDate;
- (void)positionAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)dealloc;
- (id)initWithNibNamed:(id)arg1;
- (void)awakeFromNib;

@end

@interface PresenceTooltip : Tooltip <IMDirectlyObservableObjectObserver>
{
    FezPresence *_presence;
    NSArray *_uniqueIMHandles;
    NSMutableArray *_tableText;
    BuddyPictureView *_iconView;
    NSTextField *_nameField;
    NSTableView *_table;
}

+ (id)_mobileStringRepresentation;
- (void)setPresence:(id)arg1;
- (id)presence;
- (void)accountOrderChanged:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_updateIMHandles;
- (void)_finishAnimation;
- (void)setupProfile;
- (void)_fetchProfile;
- (void)_updateUI;
- (void)_updateUIWithDisplay:(BOOL)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_updateTableText;
- (void)_addTextForIMHandle:(id)arg1 highlighted:(BOOL)arg2;
- (id)_otherServiceStringForIMHandle:(id)arg1;
- (id)_offlineStringForIMHandle:(id)arg1;
- (id)_idleStringForIMHandle:(id)arg1;
- (void)closeImmediately;
- (void)dealloc;
- (void)awakeFromNib;
- (id)_textCell;
- (id)init;
- (id)_attributesForProfile;
- (id)_attributesForProfileHeader;
- (id)_attributesForStatus;
- (id)_attributesForNameBold:(BOOL)arg1 disabled:(BOOL)arg2;

@end

@interface ShadowView : NSView
{
    NSColor *_backgroundColor;
    NSColor *_contentColor;
    NSShadow *_shadow;
    BOOL _drawsShadow;
    id _eventDelegate;
}

- (void)mouseDown:(id)arg1;
- (id)eventDelegate;
- (void)setEventDelegate:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)contentColor;
- (void)setContentColor:(id)arg1;
- (BOOL)drawsShadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (id)shadow;
- (void)setShadow:(id)arg1;
- (void)setDefaultShadow;
- (void)dealloc;

@end

@interface VCNotifier : Notifier
{
    NSDictionary *_vcProperties;
    AVChatController *_avChatController;
    AVParticipantView *_bannerView;
    BOOL _audioOnly;
    BOOL _oneWay;
    BOOL _ardClient;
    BOOL _ardServer;
}

+ (void)cleanUpOldNotifiersFrom:(id)arg1;
+ (void)openOnIncomingARDUpgradeRequest:(id)arg1;
+ (void)openOnIncomingVC:(id)arg1;
- (void)closeDownShop:(BOOL)arg1;
- (id)callerProperties;
- (void)updateBanner;
- (void)showTimeStamp;
- (void)setBannerTitle:(id)arg1;
- (id)bannerView;
- (id)avChatController;
- (void)doVCTextReplyWithChat:(id)arg1;
- (id)menuItemFormat;
- (void)disconnect;
- (id)_initForARDUpgradeRequest:(id)arg1;
- (id)initForAVChat:(id)arg1;
- (id)accessibilityFormat;
- (id)initForPersistentVCWithIMHandle:(id)arg1 isVideo:(BOOL)arg2 isOneWay:(BOOL)arg3;
- (BOOL)_makeRealVCNotifierWindow;
- (void)_makeVCFloaterWindow;
- (struct CGAffineTransform)_xformForFloaterScale:(double)arg1;
- (void)floaterBecomingVisible;
- (BOOL)isActiveNotification;
- (BOOL)canHideRealWindow;
- (BOOL)canShowRealWindow;
- (BOOL)isStale;
- (void)dealloc;

@end

@interface AuthNotifier : BannerNotifier
{
    AuthorizationRequestController *_authRequest;
}

+ (void)openOnRequestFrom:(id)arg1 message:(id)arg2;
- (void)dealloc;
- (void)closeDownShop:(BOOL)arg1;
- (id)initWithHandle:(id)arg1 message:(id)arg2;
- (id)authRequest;
- (id)bannerView;

@end

@interface FileTransferManager : NSWindowController <QLPreviewPanelDataSource, QLPreviewPanelDelegate, ViewTableDelegate, QLSeamlessOpenerDelegate>
{
    NSButton *_clearButton;
    NSTextField *_countField;
    ViewTable *_table;
    BOOL _securityDialogInProgress;
    NSMutableArray *_securityDialogQueue;
    QLPreviewPanel *_previewPanel;
}

+ (void)_handleTransferRemoved:(id)arg1;
+ (void)_handleTransferCreated:(id)arg1;
+ (id)sharedInstance;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 forceReplace:(BOOL)arg4 automaticallyRename:(BOOL)arg5;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 automaticallyRename:(BOOL)arg4;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3 forceReplace:(BOOL)arg4;
+ (void)fileTransfer:(id)arg1 saveTo:(id)arg2 attachedToWindow:(id)arg3;
+ (void)fileTransfer:(id)arg1 saveAs:(id)arg2 attachedToWindow:(id)arg3;
+ (BOOL)checkSavePath:(id)arg1 forFileTransfer:(id)arg2 postingErrorToWindow:(id)arg3;
- (id)seamlessOpener:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)seamlessOpener:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)_fileIconForItem:(id)arg1;
- (id)_fileDragOutViewForItem:(id)arg1;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)_qlPreviewItems;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)quicklookSelectedRowsInViewTable:(id)arg1;
- (void)quickLook:(id)arg1;
- (void)_fileTransferIconUpdated:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)selectFileTransfer:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)selectionDidChangeForViewTable:(id)arg1;
- (void)addToPhotosLibrary:(id)arg1;
- (void)removeSelectedTransferFromList:(id)arg1;
- (void)openSelectedTransfers:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)clearTransfers:(id)arg1;
- (void)showTransfer:(id)arg1;
- (void)refreshList;
- (void)showWindow:(id)arg1;
- (void)showWindowAndMakeKey:(BOOL)arg1;
- (void)deleteSelectedRowsInViewTable:(id)arg1;
- (void)openSelectedRowsInViewTable:(id)arg1;
- (void)_removeTransfersMatchingCondition:(int)arg1;
- (id)_transfersMatchingCondition:(int)arg1 wantsGUIDs:(BOOL)arg2;
- (void)_handleTransferRemoved:(id)arg1;
- (void)_handleTransferCreated:(id)arg1;
- (void)_addressBookPreferencesDidChange:(id)arg1;
- (void)_handleRefreshAllTransfers:(id)arg1;
- (void)_scrollToBottom;
- (void)_addTransfer:(id)arg1;
- (id)_viewForTransferGUID:(id)arg1;
- (void)_countChanged;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)windowDidLoad;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FileTransferView : ViewTableRow <FileDragOutViewDelegate>
{
    FileTransfer *_fileTransfer;
    BOOL _canUpdate;
    FileDragOutView *_fileIcon;
    NSTextField *_fileNameField;
    NSTextField *_statusField;
    NSProgressIndicator *_progressBar;
    NSButton *_stopButton;
    NSButton *_revealButton;
    NSImage *_pressedCancel;
    NSImage *_selectedCancel;
    NSImage *_activeCancel;
}

+ (id)statusStringForFileTransfer:(id)arg1;
+ (id)typeOfFileTransfer:(id)arg1;
+ (id)_timeRemainingStringWithProgress:(double)arg1 forTransfer:(id)arg2;
+ (id)_bytesTransferredPerSecondforTransfer:(id)arg1;
- (void)fileDragOutView:(id)arg1 fileDoubleClicked:(id)arg2;
- (void)fileDragOutView:(id)arg1 file:(id)arg2 draggedTo:(id)arg3;
- (BOOL)fileDragOutView:(id)arg1 shouldDragFile:(id)arg2;
- (void)quickLookWithEvent:(id)arg1;
- (void)revealInFinder:(id)arg1;
- (void)stopTransfer:(id)arg1;
- (void)acceptTransfer:(id)arg1;
- (double)dwToFit;
- (id)hitTest:(struct CGPoint)arg1;
- (void)selectedDidChange;
- (void)windowKeyChanged;
- (void)_updateTextColor;
- (void)viewDidMoveToWindow;
- (void)update;
- (void)_update:(id)arg1;
- (void)_updateButtons;
- (void)_removeProgressBar;
- (void)_userVisiblePathCreated:(id)arg1;
- (void)_userVisiblePathCopyBegan:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)fileIcon;
- (id)fileTransfer;
- (id)initWithFileTransfer:(id)arg1 saveNib:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ViewTable : NSView
{
    id <ViewTableDelegate> _delegate;
    float _rowSpacing;
    int _selectionBehavior;
    BOOL _usesAlternatingRowBackgroundColors;
    float _defaultRowHeight;
    NSColor *_bgColor;
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)_scrollToVisibleSelectionShowingTop:(BOOL)arg1;
- (id)_nextView:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectView:(id)arg1;
- (void)selectionDidChange;
- (int)selectionBehavior;
- (void)setSelectionBehavior:(int)arg1;
- (void)_windowKeyChanged:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (float)defaultRowHeight;
- (void)setDefaultRowHeight:(float)arg1;
- (BOOL)usesAlternatingRowBackgroundColors;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)arg1;
- (BOOL)isFlipped;
- (void)tile;
- (struct CGSize)contentSize;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)_clipViewFrameChanged:(id)arg1;
- (void)_setHeight:(float)arg1 inClipView:(id)arg2;
- (float)rowSpacing;
- (void)setRowSpacing:(float)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

@end

@interface ViewTableRow : NSView
{
    BOOL _selected;
    NSView *_containerView;
}

@property(retain, nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_extendSelection;
- (void)_setSingleSelection;
- (void)_deselect;
- (void)_setSelected;
- (void)_setSelected:(BOOL)arg1;
- (void)windowKeyChanged;
- (void)selectedDidChange;
- (BOOL)isSelected;
- (void)dealloc;
- (id)initWithNibNamed:(id)arg1 saveNib:(BOOL)arg2;
- (void)awakeFromNib;

@end

@interface BannerNotifier : Notifier
{
    AVParticipantView *_bannerView;
}

- (void)dealloc;
- (void)makeFloaterWindow;
- (id)bannerView;
- (BOOL)isActiveNotification;

@end

@interface ServiceErrorDialog : NSObject
{
    NSPanel *_errorPanel;
    NSTextField *_errorMessageField;
    NSTextField *_errorInfoTextField;
    NSTextField *_errorTimestampField;
    NSImageView *_errorIcon;
    NSButton *_okButton;
    long long _requestID;
    Account *_account;
    int _type;
    unsigned int _isClosing:1;
}

+ (void)displayDaemonDisconnectedDialog;
+ (void)displayError:(id)arg1 forAccount:(id)arg2 ofType:(int)arg3;
+ (void)displayDisconnectAlertInfoText:(id)arg1 wasConnected:(BOOL)arg2 forAccount:(id)arg3;
+ (void)_displayAlertMessage:(id)arg1 infoText:(id)arg2 windowTitle:(id)arg3 forAccount:(id)arg4 ofType:(int)arg5;
+ (id)allErrorDialogs;
+ (id)errorDialogsForAccount:(id)arg1;
+ (void)closeErrorDialogsForAccount:(id)arg1;
+ (id)allErrorDialogsOfType:(int)arg1;
+ (id)errorDialogsForAccount:(id)arg1 ofType:(int)arg2;
+ (void)closeErrorDialogsForAccount:(id)arg1 ofType:(int)arg2;
- (id)initWithMessage:(id)arg1 infoText:(id)arg2 windowTitle:(id)arg3 date:(id)arg4 image:(id)arg5 associatedAccount:(id)arg6 errorType:(int)arg7 closeOnDaemonReconnect:(BOOL)arg8;
- (void)dealloc;
- (void)_resizePanelForField:(id)arg1 withOtherField:(id)arg2 havingYMargin:(unsigned long long)arg3;
- (void)windowWillClose:(id)arg1;
- (void)closeErrorPanel:(id)arg1;
- (void)showPanel:(id)arg1;
- (id)associatedAccount;
- (int)type;

@end

@interface ModifierTabView : AnimatingTabView
{
    unsigned int _modifierFlags[5];
    BOOL _disabled;
}

- (id)tabViewItemForFlags:(unsigned int)arg1;
- (BOOL)isDisabled;
- (void)setDisabled:(BOOL)arg1;
- (unsigned int *)modifierFlags;
- (void)setStandardFlags;
- (void)setModifierFlags:(unsigned int [5])arg1;
- (void)_flagsChanged:(id)arg1;
- (void)_updateNotification;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FezCellTipWindow : NSWindow
{
    FezCellTipView *_cellTipView;
}

- (id)cellTip;
- (void)setCellTip:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FezCellTipView : NSView
{
    NSAttributedString *_cellTip;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)attributedCellTip;
- (void)setAttributedCellTip:(id)arg1;

@end

@interface ErrorReport : NSObject
{
    NSMutableString *_fullReport;
}

- (void)send;
- (void)_threadedSubmitProblemReport:(struct __CFDictionary *)arg1;
- (id)fullReport;
- (void)dealloc;
- (id)initWithDescription:(id)arg1;

@end

@interface ErrorReporterController : NSObject <NSWindowDelegate>
{
    NSWindow *_errorReporterSheet;
    NSTextField *_textualDescription;
    NSTextView *_errorLogTextView;
    NSTextView *_supportTextView;
    NSButton *_sendButton;
    NSButton *_dontSendButton;
    NSButton *_revealButton;
    NSBox *_revealBox;
    AVChatController *_chatController;
    NSInvocation *_endingCallback;
    BOOL _displayedAsSheet;
    BOOL _revealBoxShown;
    float _fullSizeFrameAdditionalHeight;
    float _minWidth;
    float _largeSizeMinHeight;
    ErrorReport *_errorReport;
}

+ (void)presentErrorReporterForChatController:(id)arg1 asSheet:(BOOL)arg2 thenInvoke:(id)arg3;
- (void)dealloc;
- (void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)revealButtonPressed:(id)arg1;
- (void)_showRevealBox;
- (void)_hideRevealBox;
- (void)dontSendToApple:(id)arg1;
- (void)sendToApple:(id)arg1;
- (void)_setupErrorReport;
- (void)_setupSupportString;
- (id)initForAVChatController:(id)arg1 asSheet:(BOOL)arg2 thenInvoke:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GoToChatTableCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityValueAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;

@end

@interface ARDOverlayContentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ARDOverlayWindow : AVChatWindow
{
}

- (void)configureContentView;
- (void)setTitle:(id)arg1;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface NonKeyPanel : NSPanel
{
}

- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;

@end

@interface ARDFullScreenClientController : AudioChatController <AVChatARDFeatureDelegate, SSSessionDelegate, SSFrameBufferViewDelegate>
{
    SSSession *_clientSession;
    unsigned int _clientSessionConnected:1;
    unsigned int _firstUpdate:1;
    struct CGSize _currentRemoteSize;
    NSData *_credentials;
    ARDImageView *_clientView;
    ShadowView *_shadowView;
    NSScrollView *_scrollView;
    unsigned int _hudIsClosing:1;
    unsigned int _endConferenceWhenDone:1;
    unsigned int _inTransition:1;
    unsigned int _sentConnection:1;
    unsigned int _closeWindowAfterTransition:1;
    NSWindow *_mainWindow;
    struct _RectPosition _HUDPosition;
    unsigned long long _HUDScreenIndex;
    float _HUDTitleMargin;
    struct CGRect _cachedLocalVisibleRect;
    ARDLocalDesktopImage *_localDesktop;
    NSTimer *_localSnapshotTimer;
    CAAnimation *_animation;
    int _mainWindowState;
    unsigned int _discreteGPUEnabled:1;
}

- (void)ssFrameBufferView:(id)arg1 didDropRemotePaths:(id)arg2 atLocalDropDestination:(id)arg3;
- (void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3;
- (void)ssSessionRemotePasteboardChanged:(id)arg1;
- (void)ssSession:(id)arg1 cursorPositionChanged:(struct SSPoint)arg2;
- (void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2;
- (void)ssSession:(id)arg1 sizeChanged:(struct SSSize)arg2;
- (void)ssSessionReady:(id)arg1;
- (void)ssSession:(id)arg1 authenticationResult:(int)arg2;
- (void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2;
- (void)ssSessionTerminated:(id)arg1;
- (void)ssSession:(id)arg1 connectDidFail:(int)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)_authorizeFileTransferFrom:(id)arg1 to:(id)arg2 toServer:(BOOL)arg3;
- (void)tabView:(id)arg1 willSwitchFromTab:(long long)arg2 toTab:(long long)arg3 effect:(int *)arg4 direction:(int *)arg5;
- (void)windowWillClose:(id)arg1;
- (void)_hudPanelDidMove:(id)arg1;
- (void)_hudPanelWillClose:(id)arg1;
- (void)_ardViewDidResignKey:(id)arg1;
- (void)_mainWindowDidResignKey:(id)arg1;
- (void)_mainWindowDidBecomeKey:(id)arg1;
- (void)_handleSystemScreenChange:(id)arg1;
- (void)endConference:(id)arg1;
- (void)AVChatParticipantStateChanged:(id)arg1;
- (void)AVChatStateChanged:(id)arg1;
- (void)showLocalScreen:(id)arg1;
- (void)showRemoteScreen:(id)arg1;
- (void)switchView:(id)arg1;
- (void)transferFile:(id)arg1;
- (void)_centerRemoteViewInFullScreen;
- (void)_showControllerAndPrepare;
- (void)finishARDUpgrade;
- (void)_updateControllerStateForRemote:(BOOL)arg1;
- (id)_windowTitleForRemote:(BOOL)arg1;
- (void)_updateControllerState;
- (void)_transitionComplete:(id)arg1;
- (void)_localPipImageRefresh:(id)arg1;
- (void)_stopLocalSnapshotTimer;
- (void)_startLocalSnapshotTimer;
- (void)_transitionToRemote:(BOOL)arg1 swap:(BOOL)arg2;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_switchScreen;
- (void)_switchScreenNow:(id)arg1;
- (id)remoteImageScreenshot;
- (struct CGImage *)localImageScreenshot;
- (struct CGRect)_clientViewFrame;
- (void)_snapHUDPanel;
- (void)_setHUDContentFrame:(struct CGRect)arg1 animate:(BOOL)arg2;
- (struct CGRect)_HUDContentFrameWithImageSize:(struct CGSize)arg1 relativeTo:(struct CGRect)arg2;
- (struct CGRect)_currentHUDContentFrame;
- (void)transitionDidFinish:(id)arg1;
- (void)_makeARDViewKey;
- (void)_saveHUDPosition;
- (void)_loadHUDPosition;
- (void)setARDWindowState:(int)arg1;
- (int)ARDWindowState;
- (void)_adjustHudPanelLevelBehindDock:(BOOL)arg1;
- (long long)_HUDScreenIndex;
- (BOOL)isShowingRemoteScreen;
- (BOOL)avFeature:(id)arg1 startARDClientToParticipant:(id)arg2;
- (void)_disconnectClient;
- (void)_closeHUD;
- (BOOL)isClientConnected;
- (void)dealloc;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BorderedButtonCell : NSButtonCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface BorderedButton : NSButton
{
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)_commonInit;

@end

@interface FullScreenQCTransitionWindow : NSWindow
{
    QCView *_qcView;
    double _transitionTime;
    id _completionDelegate;
    SEL _completionSelector;
    BOOL _transitionOnMainScreen;
}

+ (void)performTransitionWithScreen:(id)arg1 transitionPath:(id)arg2 image1:(id)arg3 fromRect:(struct CGRect)arg4 toRect:(struct CGRect)arg5 image2:(id)arg6 fromRect:(struct CGRect)arg7 toRect:(struct CGRect)arg8 bgColor:(id)arg9 completionDelegate:(id)arg10 completionSelector:(SEL)arg11 transitionTime:(double)arg12;
- (void)dealloc;
- (void)_startTransition;
- (void)_transitionDidComplete;
- (id)_initWithScreen:(id)arg1 transitionPath:(id)arg2 image1:(id)arg3 fromRect:(struct CGRect)arg4 toRect:(struct CGRect)arg5 image2:(id)arg6 fromRect:(struct CGRect)arg7 toRect:(struct CGRect)arg8 bgColor:(id)arg9 completionDelegate:(id)arg10 completionSelector:(SEL)arg11 transitionTime:(double)arg12;

@end

@interface FZLargeTypeView : NSView
{
    NSString *_phoneString;
    NSDictionary *_attributes;
    ABPhoneFormatter *_formatter;
}

- (void)mouseDown:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (void)finalize;
- (void)dealloc;
- (void)setAttributes:(id)arg1;
- (void)setPhoneString:(id)arg1;
- (struct CGRect)contentRectForString;

@end

@interface FZBezelWindow : NSPanel
{
}

- (void)resignMainWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface FZLargeTypeController : NSWindowController <NSAnimationDelegate>
{
    FZLargeTypeView *largeTypeView;
    NSString *_phoneString;
    BOOL _closing;
    BOOL _fadeIn;
    id _delegate;
}

+ (id)newDisplayString:(id)arg1 forTime:(double)arg2 delegate:(id)arg3;
- (void)close;
- (void)windowWillClose:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)fadeOut:(id)arg1;
- (void)fadeIn:(id)arg1;
- (void)_startTimer;
- (void)_fadeInTimer:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (id)windowNibName;
- (void)stupidKitWorkaround;
- (void)windowDidLoad;
- (void)awakeFromNib;
- (void)dealloc;
- (void)unsetDelegate:(id)arg1;
- (id)initWithString:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKDashboardButton : NSButton
{
    int _direction;
    NSMutableDictionary *_attr;
    long long _trackingRectTag;
    BOOL _active;
    BOOL _displayCapsule;
    struct CGRect _activeRect;
    NSString *_string;
}

- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)setIndex:(unsigned int)arg1 count:(unsigned int)arg2;
- (void)setDirection:(int)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)checkPoint:(struct CGPoint)arg1;
- (struct CGRect)hoverRectForDirection;
- (struct CGRect)capsuleRectForDirection;
- (void)drawCapsule;
- (void)drawHoverTarget;
- (void)updateTrackingRect;
- (struct CGSize)sizeForString;
- (id)capsulePathInRect:(struct CGRect)arg1;
- (id)rightArrowPathInRect:(struct CGRect)arg1;
- (id)leftArrowPathInRect:(struct CGRect)arg1;

@end

@interface ExtendedSliderCell : NSSliderCell
{
    NSImage *_knobImage;
    NSImage *_knobDownImage;
    struct CGRect _knobSourceRect;
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawTickMarks;
- (void)drawKnob:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ExtendedSlider : NSSlider
{
    StretchyImageView *_backgroundImage;
}

- (void)setEnabled:(BOOL)arg1;
- (void)awakeFromNib;

@end

@interface FezQCRenderer : QCRenderer
{
}

+ (id)defaultRenderingOptions;
+ (BOOL)requires8BitInternalBuffers;
@property(retain) id currentFrame;
- (id)init;

@end

@interface FrameReader : GLObject
{
    unsigned long long _rowBytes;
    unsigned long long _pixelsWide;
    unsigned long long _pixelsHigh;
    unsigned int _glPixelBufferId;
    void *_frameBuffer;
    void *_flipBuffer;
    GLFBO *_fbo;
    GLSLProgram *_shader;
}

+ (BOOL)_isIntel950Graphics:(id)arg1;
+ (unsigned int)nativePixelType;
+ (unsigned int)nativePixelFormat;
- (struct CGSize)size;
- (void)copyFrameTo:(struct __CVBuffer *)arg1;
- (void)copyFrameTo:(struct __CVBuffer *)arg1 flipBuffer:(BOOL)arg2;
- (id)bitmap;
- (void)_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3 flipBuffer:(BOOL)arg4;
- (void)_PBuffer_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3;
- (void)_glReadPixels_readFrameIntoBuffer:(void *)arg1 wantYuv:(BOOL)arg2 rowBytes:(long long)arg3;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)dealloc;
- (id)initWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
- (void)_destroyResources;
- (void)_initResources;

@end

@interface Texture : NSObject
{
    struct __CVBuffer *_sourceBuffer;
    struct __CVBuffer *_texture;
    QCImage *_qcImage;
    CIImage *_ciImage;
    BOOL _mirrored;
    BOOL _replacementVideo;
}

+ (id)textureWithCVImageBuffer:(struct __CVBuffer *)arg1;
+ (BOOL)useCoreImage;
+ (void)flushCache;
+ (struct __CVOpenGLTextureCache *)sharedTextureCache;
@property BOOL mirrored; // @synthesize mirrored=_mirrored;
- (void)drawInCIContext:(id)arg1 textureRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInCIContext:(id)arg1 userId:(id)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInContext:(struct _CGLContextObject *)arg1 textureRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (void)drawInContext:(struct _CGLContextObject *)arg1 userId:(id)arg2 inRect:(struct CGRect)arg3 flags:(int)arg4;
- (struct CGRect)sizeOfFrameWithUserId:(id)arg1 flags:(int)arg2;
- (id)attachments;
- (double)time;
- (float)gamma;
- (struct CGRect)userRect:(id)arg1;
- (struct CGRect)userRect:(id)arg1 auxVideo:(BOOL)arg2;
- (BOOL)isReplacementVideo;
- (void)setReplacementVideo:(BOOL)arg1;
- (BOOL)hasAuxVideoFrame;
- (id)userIds;
- (id)_auxVideoUserFrame;
- (id)_userFrameForId:(id)arg1;
- (id)_userFrames;
@property(readonly) CIImage *displayImage;
- (struct CGRect)textureRect;
- (BOOL)_isFlipped;
- (unsigned int)name;
- (unsigned int)target;
- (id)qcImage;
- (id)CVOpenGLTextureObj;
@property(readonly) struct __CVBuffer *sourceImage;
- (void)dealloc;
- (id)initWithCVImageBuffer:(struct __CVBuffer *)arg1;

@end

@interface VideoProcessor : NSObject <VCRenderDelegateProtocol>
{
    NSOpenGLContext *_displayContext;
    CIContext *_ciCtx;
    CIContext *_colorCorrectingCtx;
    struct __CVOpenGLBufferPool *_displayBufferPool;
    FrameResizer *_localResizer;
    FrameResizer *_remoteResizer;
    FrameReader *_localReader;
    NSObject<OS_dispatch_queue> *_startStopQueue;
    struct OpaqueVTPixelTransferSession *_scaleAndResizeTransferSession;
    NSMutableDictionary *_inputPorts;
    QCRenderer *_renderer;
    QCRenderer *_gamma;
    NSArray *_keyPaths;
    QCPatchController *_qcController;
    struct CGPoint _inputXY;
    BOOL _backdropsSupported;
    BOOL _effectsSupported;
    BOOL _cameraLocked;
    unsigned long long _auxVideoMode;
    BOOL _dvWorkaround;
    Texture *_spotlightFrame;
    FramerateTracker *_framerateTracker;
    NSRecursiveLock *_renderLock;
    QCComposition *_composition;
    BOOL _backdropsEnabled;
    NSMutableDictionary *_remoteTextures;
    Texture *_auxVideoFrame;
    BOOL _auxVideoNeedsRendering;
    BOOL _showRecordingBadge;
    unsigned int _rendererStarted:1;
}

+ (BOOL)isBackdropsAvailable;
+ (BOOL)isEffectsAvailable;
+ (BOOL)_realCameraConnected;
+ (id)sharedProcessor;
@property(readonly) BOOL backdropsEnabled; // @synthesize backdropsEnabled=_backdropsEnabled;
@property struct CGPoint inputXY; // @synthesize inputXY=_inputXY;
- (int)resizeRemoteVideoForUserID:(id)arg1 outBuffer:(struct __CVBuffer *)arg2;
- (void)newRemoteCVPixelBuffer:(struct __CVBuffer *)arg1;
- (void)gammaCorrectBuffer:(struct __CVBuffer *)arg1;
- (int)processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (int)_AuxVideo_processCVPixelBufferIntoCVPixelBuffer:(struct __CVBuffer *)arg1 withHint:(id)arg2;
- (int)_GPU_processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (int)_Software_processCVPixelBuffer:(struct __CVBuffer *)arg1 intoCVPixelBuffer:(struct __CVBuffer *)arg2 withHint:(id)arg3;
- (struct __CVBuffer *)_convertToARGB:(struct __CVBuffer *)arg1;
- (struct __CVBuffer *)_normalizeDVBuffer:(struct __CVBuffer *)arg1;
- (BOOL)auxVideoModeIsReplacement;
- (unsigned long long)auxVideoMode;
- (void)setAuxVideoMode:(unsigned long long)arg1;
@property(retain) QCComposition *composition;
- (void)_setBackdropPaths;
- (void)setBackPath:(id)arg1 forePath:(id)arg2;
- (id)auxVideoFrame;
- (void)setAuxVideoFrame:(struct __CVBuffer *)arg1;
- (void)observeValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_captureTimedout;
- (void)_stopCapture;
- (void)_captureEnded;
- (void)startCapture;
- (void)_updateCapture;
- (void)setShowBackgroundMotion:(BOOL)arg1;
- (BOOL)finishedCapture;
- (BOOL)hasCaptured;
- (void)setHasCaptured:(BOOL)arg1;
- (BOOL)capture;
- (void)setCapture:(BOOL)arg1;
@property NSString *backdropsMessage;
- (void)frameNotifier:(id)arg1 didRemoveListener:(id)arg2;
- (void)frameNotifier:(id)arg1 didAddListener:(id)arg2;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)_stopRenderer;
- (void)_startRenderer;
- (void)_stopGPURenderer;
- (BOOL)_startGPURenderer;
- (void)lockCamera:(BOOL)arg1;
- (void)_setMicronCameraAELock:(BOOL)arg1;
- (void)_applicationWillTerminate:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface AccessibilityIgnoredButton : NSButton
{
}

- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;

@end

@interface CustomFrameSavingWindow : NSWindow
{
    id _frameSaveDelegate;
    NSString *_autosaveFrameName;
    BOOL _restoringWindowFrame;
    BOOL _registered;
}

+ (void)saveRect:(struct CGRect)arg1 forFrameName:(id)arg2;
+ (struct CGRect)autosavedRectForFrameName:(id)arg1;
- (void)_customWindowDidResizeNotification:(id)arg1;
- (void)_customWindowDidMoveNotification:(id)arg1;
- (void)saveFrameIfNecessary;
- (struct CGRect)rectToSave;
- (id)targetView;
- (void)setFrameSaveDelegate:(id)arg1;
- (id)frameSaveDelegate;
- (void)setTargetedFrameAutosaveName:(id)arg1;
- (void)dealloc;
- (id)targetedFrameAutosaveName;
- (struct CGRect)savedFrame;
- (struct CGRect)savedFrameForName:(id)arg1;
- (void)_restoreFrameFromAutosaveName;

@end

@interface BuddyPictureCell : NSActionCell
{
    PeopleList *_peopleList;
    struct CGSize _iconSize;
    BOOL _usesLegacyScrollers;
}

- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)shouldAnimate;
- (void)setUsesLegacyScrollers:(BOOL)arg1;
- (id)peopleListItem;
- (id)imHandle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGSize)iconSize;
- (void)setIconSize:(struct CGSize)arg1;
- (struct CGRect)rectOfPictureWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initWithPeopleList:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityRoleAttribute;

@end

@interface CompositionList : QCPlugIn
{
    NSMutableArray *_effectsArray;
    NSMutableArray *_pageList;
    unsigned long long _pageIndex;
    unsigned long long _previousIndex;
    NSDictionary *_normalDesc;
    BOOL _updateOutput;
}

+ (id)attributes;
+ (int)timeMode;
+ (int)executionMode;
- (BOOL)execute:(id)arg1 atTime:(double)arg2 withArguments:(id)arg3;
- (void)enableExecution:(id)arg1;
- (BOOL)startExecution:(id)arg1;
- (void)_rebuildBankList;
- (void)_loadAllEffects;
- (void)_repositoryUpdated;
- (void)dealloc;
- (id)init;

@end

@interface IndexChanged : QCPlugIn
{
    unsigned long long _previousIndex;
}

+ (id)attributes;
+ (int)timeMode;
+ (int)executionMode;
- (BOOL)execute:(id)arg1 atTime:(double)arg2 withArguments:(id)arg3;
- (id)init;

@end

@interface FindPanelController : NSWindowController
{
    NSTextField *searchTextField;
    NSTextField *statusTextField;
    long long _lastFindPasteboardChangeCount;
    NSWindow *_searchTargetWindow;
}

+ (id)sharedController;
@property __weak NSWindow *searchTargetWindow; // @synthesize searchTargetWindow=_searchTargetWindow;
- (void).cxx_destruct;
- (void)selectText;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (BOOL)readyToFind;
- (void)_findWithDirection:(BOOL)arg1 caseSensitive:(BOOL)arg2;
- (void)_setStatus:(id)arg1;
- (BOOL)_doSearchForString:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 inTarget:(id)arg4;
- (id)_searchTarget;
- (id)_searchString;
- (void)_updateSearchFieldFromFindPasteboard;
- (void)updateFindPasteboardFromSearchField;
- (id)windowFrameAutosaveName;
- (id)windowNibName;
- (void)dealloc;

@end

@interface HiddenButton : AccessibilityIgnoredButton
{
}

- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;

@end

@interface ReplaceBackgroundUIView : NSView
{
    NSDictionary *_attributes;
    NSString *_message;
    NSCell *_cell;
}

- (id)cell;
- (void)setTextMessage:(id)arg1;
- (id)textMessage;
- (id)textAttributes;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ReplaceBackgroundUILayer : OpenGLNSViewLayer
{
}

- (void)addedToSuperLayer:(id)arg1;
- (void)stopReceivingMessageChangedNotifications;
- (void)setTextMessage:(id)arg1;
- (void)_adjustLayerSize;
- (void)_replaceBackgroundMessageChanged:(id)arg1;
- (void)compositeLayer:(struct _CGLContextObject *)arg1;
- (void)dealloc;
- (id)initWithLayerName:(id)arg1;

@end

@interface SystemSound : NSObject
{
    unsigned int _soundID;
    id _delegate;
    unsigned int _delgateRespondsToSoundFinishedPlaying:1;
}

+ (id)soundForPath:(id)arg1;
- (void)play;
- (void)_finishedPlaying;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)_initWithSystemSoundID:(unsigned int)arg1;

@end

@interface FramerateTracker : NSObject
{
    unsigned long long _sampleCount;
    double *_samples;
    unsigned long long _curSample;
    unsigned long long _totalSamples;
    double _sampleSum;
    double _curTime;
    double _rounding;
}

- (void)dealloc;
- (double)sampleVariation;
- (unsigned long long)totalSamples;
- (double)nextSample;
- (double)rounding;
- (unsigned long long)sampleCount;
- (id)initWithSampleCount:(unsigned long long)arg1 framerate:(double)arg2 rounding:(double)arg3;

@end

@interface AuxVideoAlert : NSWindowController
{
}

+ (void)showAlert:(BOOL)arg1;
- (void)cancelAuxVideo:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;

@end

@interface InstantPopUpSegementedControlCell : NSSegmentedCell
{
    long long _segmentToToggle;
}

- (long long)interiorBackgroundStyleForSegment:(long long)arg1;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (id)_segmentsDeselectedBySegment:(long long)arg1;
- (void)setSegmentToAllowToggle:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_commonCellInit;

@end

@interface AVSegmentedControl : NSSegmentedControl <NSMenuDelegate>
{
    id _avSegmentedControlTarget;
    NSMenu *_addBuddyMenu;
    BOOL _menuIsValid;
    BOOL _registered;
    Account *_account;
    BOOL _muted;
    BOOL _paused;
    BOOL _muteAllowed;
    BOOL _pauseAllowed;
    BOOL _showingPause;
    BOOL _shouldShowPause;
}

+ (Class)cellClass;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)setAccount:(id)arg1;
- (void)invalidateAddMenu;
- (void)menuWillOpen:(id)arg1;
- (void)_rebuildMenuIfNecessary;
- (void)_registerForNotifications;
- (void)_addItemForEmptyList;
- (void)_addItemForIMHandle:(id)arg1 toMenu:(id)arg2 atIndex:(int)arg3 showingDetails:(BOOL)arg4;
- (void)_addItemForAccount:(id)arg1 atIndex:(int *)arg2;
- (void)_personSelected:(id)arg1;
- (void)selfAction:(id)arg1;
- (void)_sendActionForSegmentType:(int)arg1;
- (void)setActionTarget:(id)arg1;
- (void)_showMuteUI;
- (void)_showPauseUI;
- (BOOL)isPaused;
- (void)setPaused:(BOOL)arg1;
- (BOOL)isPauseAllowed;
- (void)setPauseAllowed:(BOOL)arg1;
- (BOOL)isMuteAllowed;
- (void)setMuteAllowed:(BOOL)arg1;
- (BOOL)isMuted;
- (void)setMuted:(BOOL)arg1;
- (BOOL)isAddEnabled;
- (void)setAddEnabled:(BOOL)arg1;
- (void)setAddTooltip:(id)arg1;
- (void)setFullScreenEnabled:(BOOL)arg1;
- (void)_flagsChanged:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (void)_configureButtons;
- (long long)segmentForTag:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface InviteCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FezDeleteCommand : NSDeleteCommand
{
}

- (id)performDefaultImplementation;

@end

@interface FezCreateCommand : NSCreateCommand
{
}

- (id)_createAVChat;
- (id)_createTextChat;
- (id)_createTextChatWithService:(id)arg1 participants:(id)arg2 name:(id)arg3 invitation:(id)arg4;
- (id)_genericIMFromIMHandle:(id)arg1 withText:(id)arg2;
- (BOOL)_verifyParticipants:(id)arg1 areOnService:(id)arg2;
- (BOOL)_retrieveBoolNamed:(id)arg1;
- (long long)_retrieveIntNamed:(id)arg1;
- (id)_retrieveStringNamed:(id)arg1;
- (id)_retrieveAccountNamed:(id)arg1;
- (id)_retrieveParticipantsArrayNamed:(id)arg1;
- (id)_retrieveObjectOfClass:(Class)arg1 named:(id)arg2;
- (id)performDefaultImplementation;

@end

@interface FezIKPictureTakerVideoReceiver : NSObject <IKPictureTakerVideoProvider, FrameListener>
{
    id <IKPictureTakerVideoReceiver> _receiver;
    FrameReader *_frameReader;
    NSOpenGLContext *_glContext;
    struct __CVBuffer *_readBuffer;
}

+ (id)sharedInstance;
- (BOOL)canStartGrabbing;
- (void)stopGrabbing;
- (void)startGrabbingForReceiver:(id)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)dealloc;
- (id)init;
- (struct __CVBuffer *)_textureToCVPixelBuffer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FramePoster : NSObject
{
    id _frame;
    NSArray *_targets;
    FrameNotifier *_notifier;
    NSString *_source;
}

- (void)post;

@end

@interface ThreadNotifier : NSObject
{
    NSString *_name;
    NSThread *_thread;
    FrameNotifier *_frameNotifier;
    NSMutableSet *_listeners;
    unsigned int _isPostingFrame:1;
    NSObject<OS_dispatch_queue> *_lock;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly) NSString *name; // @synthesize name=_name;
- (BOOL)postFrame:(id)arg1;
- (id)queue;
- (void)removeListener:(id)arg1;
- (BOOL)addListener:(id)arg1;
- (long long)listenerCount;
- (void)dealloc;
- (id)initWithName:(id)arg1 thread:(id)arg2 frameNotifier:(id)arg3;

@end

@interface FrameNotifier : NSObject
{
    NSString *_sourceName;
    NSObject<OS_dispatch_queue> *_lock;
    NSMutableDictionary *_notifiers;
    id _lastFrame;
    FPS *_fps;
    id _delegate;
}

+ (id)_backgroundNotificationThread;
+ (void)_backgroundThreadRunner;
+ (void)_setupThread;
+ (id)runLoopModes;
+ (id)frameNotifierForSource:(id)arg1;
+ (BOOL)postFrame:(id)arg1 fromSource:(id)arg2;
+ (BOOL)hasListenersForSource:(id)arg1;
- (id)lastFrame;
- (BOOL)canPostFrame;
- (void)postFrame:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1 onThread:(id)arg2;
- (BOOL)hasListeners;
- (id)sourceName;
- (void)dealloc;
- (id)initWithSourceName:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)description;

@end

@interface FPS : NSObject
{
    long long _frames;
    double _frameTime;
    double _lastTime;
    NSString *_name;
}

- (void)countFrame;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface _MoveRecordedTracksOp : FezExtendedOperation
{
    NSMutableArray *_filenames;
    NSString *_trackTitle;
}

- (void)main;
- (id)trackTitle;
- (id)filenames;
- (void)dealloc;
- (id)initWithFilenames:(id)arg1 trackTitle:(id)arg2;

@end

@interface _iTunesCreatePlaylistOp : FezExtendedOperation
{
    NSString *_playlistName;
}

- (void)dealloc;
- (void)main;
- (id)playlistName;

@end

@interface iTunesAdditionOp : FezExtendedOperation
{
    BOOL _didStart;
    FezExtendedOperation *_moveOperation;
    FezExtendedOperation *_playlistOperation;
}

- (void)main;
- (void)didChangeValueForKey:(id)arg1;
- (void)start;
- (void)dealloc;
- (id)initWithFilenames:(id)arg1 trackTitle:(id)arg2;

@end

@interface BorderedProgressIndicator : NSProgressIndicator
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface DownloadFolderImportHelper : NSObject
{
}

- (void)importLegacyDownloadFolderPref:(CDUnknownBlockType)arg1;

@end

@interface ARDFileTransferButton : NSButton
{
    id _dragDelegate;
    IMHandle *_targetIMHandle;
    BOOL _remote;
    BOOL _dropDestination;
}

- (BOOL)wantsPeriodicDraggingUpdates;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)_springLoad;
- (void)_blink:(int)arg1;
- (void)_doBlink:(BOOL)arg1;
- (id)targetIMHandle;
- (void)setTargetIMHandle:(id)arg1;
- (void)_setDropDestination:(BOOL)arg1;
- (BOOL)isRemote;
- (void)setRemote:(BOOL)arg1;
- (void)setDragDelegate:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_updateImage;

@end

@interface ARDPIPButton : NSButton
{
    id _dragDelegate;
    BOOL _remote;
    BOOL _dropDestination;
    NSString *_remoteName;
    NSTrackingArea *_trackingArea;
    NSExtendedBox *_labelBox;
    AbbreviatingTextField *_label;
}

- (BOOL)wantsPeriodicDraggingUpdates;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)_springLoad;
- (void)_blink:(int)arg1;
- (void)_doBlink:(BOOL)arg1;
@property(copy) NSString *remoteName;
- (BOOL)isRemote;
- (void)setRemote:(BOOL)arg1;
- (void)_setDropDestination:(BOOL)arg1;
- (void)_setLabelText:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_updateTracking;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)setDragDelegate:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface FrameResizer : NSObject
{
    NSOpenGLContext *_context;
    FrameReader *_frameReader;
    struct __CVOpenGLBufferPool *_bufferPool;
    struct __CVBuffer *_buffer;
}

+ (BOOL)resizeBufferPool:(struct __CVOpenGLBufferPool **)arg1 width:(int)arg2 height:(int)arg3;
- (void)resizeTexture:(id)arg1 intoBuffer:(struct __CVBuffer *)arg2 fromRect:(struct CGRect)arg3 sizeToFitCIF:(BOOL)arg4;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _VCDropRegion : NSView
{
    id _recipient;
    BOOL _highlighted;
    float _opacity;
    Animator *_animator;
    BOOL _needsLayout;
    AbbreviatingTextField *_titleField;
    NSBezierPath *_fillPath;
    NSColor *_fillColor;
    NSShadow *_fillGlow;
    NSBezierPath *_borderPath;
}

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)recipient;
- (void)setRecipient:(id)arg1;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (void)setOpacity:(float)arg1;
- (void)_setTitle;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_updateLayout;
- (void)_updateMarquee:(float)arg1;

@end

@interface VCDropView : NSView
{
    float _opacity;
}

- (id)updateHighlightingForPoint:(struct CGPoint)arg1;
- (float)opacity;
- (void)setOpacity:(float)arg1;
- (void)createRegionsForRecipients:(id)arg1;

@end

@interface GLSLProgram : GLObject
{
    void *_prog;
    void *_frag;
    void *_vert;
}

+ (id)newRGBToYCbCr601Shader:(id)arg1;
- (int)uniformLocation:(id)arg1;
- (void)unuseProgram;
- (void)useProgram;
- (void)dealloc;
- (id)initWithVertexShader:(const char *)arg1 fragmentShader:(const char *)arg2 context:(id)arg3;

@end

@interface GLObject : NSObject
{
    NSOpenGLContext *_context;
    struct _CGLContextObject *cgl_ctx;
}

- (void)throwOnGLError:(id)arg1;
- (void)throwOnGLError:(const char *)arg1:(int)arg2;
- (id)context;
- (void)dealloc;
- (id)initWithOpenGLContext:(id)arg1;

@end

@interface GLTexture : GLObject
{
    unsigned int _target;
    unsigned int _name;
    unsigned int _wide;
    unsigned int _high;
}

+ (id)yuvTextureWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
+ (id)bgraTextureWithOpenGLContext:(id)arg1 pixelsWide:(unsigned int)arg2 pixelsHigh:(unsigned int)arg3;
@property(readonly) unsigned int pixelsHigh; // @synthesize pixelsHigh=_high;
@property(readonly) unsigned int pixelsWide; // @synthesize pixelsWide=_wide;
@property(readonly) unsigned int name; // @synthesize name=_name;
@property(readonly) unsigned int target; // @synthesize target=_target;
- (void)unbind;
- (void)bind;
- (void)dealloc;
- (id)initWithOpenGLContext:(id)arg1 target:(unsigned int)arg2 pixelsWide:(unsigned int)arg3 pixelsHigh:(unsigned int)arg4 internalFormat:(unsigned int)arg5 format:(unsigned int)arg6 type:(unsigned int)arg7 pixels:(const void *)arg8;

@end

@interface GLFBO : GLObject
{
    unsigned int _textureTarget;
    unsigned int _textureName;
    unsigned int _fboName;
    int _width;
    int _height;
}

+ (BOOL)fboIsSupportedOnContext:(id)arg1;
- (void)setAsDestination;
- (void)setAsSource;
@property(readonly) unsigned int textureName;
@property(readonly) unsigned int name;
- (void)readBack:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(unsigned int)arg5:(unsigned int)arg6:(void *)arg7:(unsigned int)arg8;
- (void)readBack:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(unsigned int)arg5:(unsigned int)arg6:(void *)arg7;
- (void)unbind;
- (void)bind;
- (void)dealloc;
- (id)initWithTarget:(unsigned int)arg1 width:(int)arg2 height:(int)arg3 internalFormat:(unsigned int)arg4 format:(unsigned int)arg5 type:(unsigned int)arg6 context:(id)arg7;

@end

@interface Stopwatch : NSObject
{
    NSString *_name;
    double _startTime;
    double _elapsedTime;
    double _averageTime;
    double _averageSum;
    double _lastSampleTime;
    double _logInterval;
    double _lastLogTime;
    int _averageCount;
}

+ (id)stopwatchWithName:(id)arg1 logInterval:(double)arg2;
+ (id)stopwatchWithName:(id)arg1;
@property(readonly) double averageTime; // @synthesize averageTime=_averageTime;
@property(readonly) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property double logInterval; // @synthesize logInterval=_logInterval;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void)sampleAndLogIfNeeded;
- (BOOL)shouldLog;
- (void)sampleAndLogWithLabel:(id)arg1;
- (void)sampleAndLog;
- (id)description;
- (void)sample;
- (void)resetElapsed;
- (void)reset;
@property(readonly) double totalElapsedTime;
- (void)dealloc;
- (id)initWithName:(id)arg1 logInterval:(double)arg2;

@end

@interface InstantMessage : IMMessage
{
    NSMutableAttributedString *_textWithAppAttributes;
    NSMutableAttributedString *_subjectWithAppAttributes;
    BOOL _didHighlightMyName;
    BOOL _didParseText;
    BOOL _didParseSubject;
    BOOL _saved;
    NSURL *_fileURL;
}

@property(retain) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(getter=isSaved) BOOL saved; // @synthesize saved=_saved;
- (void).cxx_destruct;
- (void)useScriptReplacementText:(id)arg1;
- (void)highlightMyNameAtRange:(struct _NSRange)arg1;
- (id)senderName;
- (BOOL)isAddressedToMe;
- (id)messageSubject;
- (id)text;
- (id)superText;
- (id)superMessageSubject;
- (void)_upgradeText;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ChatTranscriptViewHelper : NSObject
{
    ChatTranscriptViewController *_chatTranscriptViewController;
}

@property(nonatomic) ChatTranscriptViewController *chatTranscriptViewController; // @synthesize chatTranscriptViewController=_chatTranscriptViewController;
- (id)initWithChatTranscriptViewController:(id)arg1;

@end

@interface ProgressAnimation : NSAnimation
{
}

- (void)setCurrentProgress:(float)arg1;

@end

@interface ChatTranscriptViewController : NSViewController <FezWebViewViewDelegate, FezWebViewDragDelegate, FezWebViewQuickLookDelegate, FezWebViewPasteboardDelegate, AVAudioPlayerDelegate, NSAnimationDelegate>
{
    NSMutableArray *_selectedMessageMenuItems;
    NSMutableArray *_selectedUnsavedMessageMenuItems;
    NSMenuItem *_quickLookTransferMenuItem;
    ChatTranscriptViewDragDestinationHelper *_dragHelper;
    ChatTranscriptViewBuddyPictureHelper *_buddyPictureHelper;
    ChatTranscriptViewQLHelper *_qlHelper;
    ChatTranscriptViewFileTransferHelper *_fileTransferHelper;
    NSMutableSet *_highlightedItems;
    BOOL _pinToBottomOnResize;
    BOOL _pinToContentOnChange;
    BOOL _needsNewLayout;
    BOOL _isForcingRelayout;
    BOOL _isLoading;
    BOOL _canShowMessages;
    BOOL _aboutBlankHandled;
    BOOL _delayScrolling;
    BOOL _handingKeyEvent;
    BOOL _unreadCountChanged;
    NSMutableArray *_loadingIdentifiers;
    int _changeCount;
    int _changeCountForTranscriptStyleController;
    double _heightBeforeChange;
    struct CGRect _clipRectBeforeChange;
    TranscriptKeyDownHandler *_transcriptKeyDownHandler;
    NSMutableArray *_changeCallStacks;
    NSTimer *_changeTimeoutTimer;
    BOOL _shouldAnimatePinAfterChange;
    BOOL _hasHitBoundsLimit;
    BOOL _isHandlingTick;
    BOOL _isHandlingLiveScroll;
    IMTranscriptChatItem *_pinnedToChatItem;
    SOChatDisplayController *_chatDisplayController;
    Chat *_chat;
    ChatViewController *_chatViewController;
    SOInputLine *_inputLine;
    FezWebView *_webView;
    TranscriptStyleController *_transcriptStyleController;
    TranscriptDOMController *_transcriptDOMController;
    BuddyCSSProvider *_buddyCSSProvider;
    SOTranscriptSettings *_transcriptSettings;
    NSMutableOrderedSet *_selectedChatItems;
    ChatTranscriptViewScrollHelper *_scrollHelper;
    IMMessage *_lastClickedMessage;
    NSString *_lastRightClickedTransferGUID;
    IMTranscriptChatItem *_delayedChatItemSelection;
    AVAudioPlayer *_audioMessagePlayer;
    NSMutableArray *_audioMessagePlayingChatItems;
    DOMElement *_audioMessagePlayedWaveformElement;
    DOMElement *_audioMessageTimeElement;
    DOMElement *_audioMessageProgressElement;
    SODynamicLayoutManager *_dynamicLayoutManager;
    double _lastDistanceFromBottom;
    ProgressAnimation *_dynamicLayoutAnimation;
    NSMutableSet *_previousVisibleElements;
    SOTypingIndicatorView *_typingView;
    NSLayoutConstraint *_typingIndicatorXConstraint;
    NSLayoutConstraint *_typingIndicatorYConstraint;
}

+ (id)_defaultViewMenu;
+ (void)initialize;
@property(retain, nonatomic) NSLayoutConstraint *typingIndicatorYConstraint; // @synthesize typingIndicatorYConstraint=_typingIndicatorYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *typingIndicatorXConstraint; // @synthesize typingIndicatorXConstraint=_typingIndicatorXConstraint;
@property(retain, nonatomic) SOTypingIndicatorView *typingView; // @synthesize typingView=_typingView;
@property(nonatomic) BOOL isHandlingLiveScroll; // @synthesize isHandlingLiveScroll=_isHandlingLiveScroll;
@property(nonatomic) BOOL isHandlingTick; // @synthesize isHandlingTick=_isHandlingTick;
@property(retain, nonatomic) NSMutableSet *previousVisibleElements; // @synthesize previousVisibleElements=_previousVisibleElements;
@property(retain, nonatomic) ProgressAnimation *dynamicLayoutAnimation; // @synthesize dynamicLayoutAnimation=_dynamicLayoutAnimation;
@property(nonatomic) double lastDistanceFromBottom; // @synthesize lastDistanceFromBottom=_lastDistanceFromBottom;
@property(retain, nonatomic) SODynamicLayoutManager *dynamicLayoutManager; // @synthesize dynamicLayoutManager=_dynamicLayoutManager;
@property(retain, nonatomic) DOMElement *audioMessageProgressElement; // @synthesize audioMessageProgressElement=_audioMessageProgressElement;
@property(retain, nonatomic) DOMElement *audioMessageTimeElement; // @synthesize audioMessageTimeElement=_audioMessageTimeElement;
@property(retain, nonatomic) DOMElement *audioMessagePlayedWaveformElement; // @synthesize audioMessagePlayedWaveformElement=_audioMessagePlayedWaveformElement;
@property(retain, nonatomic) NSMutableArray *audioMessagePlayingChatItems; // @synthesize audioMessagePlayingChatItems=_audioMessagePlayingChatItems;
@property(retain, nonatomic) AVAudioPlayer *audioMessagePlayer; // @synthesize audioMessagePlayer=_audioMessagePlayer;
@property(retain, nonatomic) IMTranscriptChatItem *delayedChatItemSelection; // @synthesize delayedChatItemSelection=_delayedChatItemSelection;
@property(retain, nonatomic) NSString *lastRightClickedTransferGUID; // @synthesize lastRightClickedTransferGUID=_lastRightClickedTransferGUID;
@property(retain, nonatomic) IMMessage *lastClickedMessage; // @synthesize lastClickedMessage=_lastClickedMessage;
@property BOOL hasHitBoundsLimit; // @synthesize hasHitBoundsLimit=_hasHitBoundsLimit;
@property(retain, nonatomic) ChatTranscriptViewScrollHelper *scrollHelper; // @synthesize scrollHelper=_scrollHelper;
@property(readonly, nonatomic) NSMutableOrderedSet *selectedChatItems; // @synthesize selectedChatItems=_selectedChatItems;
@property(retain, nonatomic) SOTranscriptSettings *transcriptSettings; // @synthesize transcriptSettings=_transcriptSettings;
@property(retain, nonatomic) BuddyCSSProvider *buddyCSSProvider; // @synthesize buddyCSSProvider=_buddyCSSProvider;
@property(retain, nonatomic) TranscriptDOMController *transcriptDOMController; // @synthesize transcriptDOMController=_transcriptDOMController;
@property(retain, nonatomic) TranscriptStyleController *transcriptStyleController; // @synthesize transcriptStyleController=_transcriptStyleController;
@property(retain, nonatomic) FezWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) SOInputLine *inputLine; // @synthesize inputLine=_inputLine;
@property(nonatomic) __weak ChatViewController *chatViewController; // @synthesize chatViewController=_chatViewController;
@property(retain, nonatomic) Chat *chat; // @synthesize chat=_chat;
@property(retain, nonatomic) SOChatDisplayController *chatDisplayController; // @synthesize chatDisplayController=_chatDisplayController;
@property(nonatomic) BOOL shouldAnimatePinAfterChange; // @synthesize shouldAnimatePinAfterChange=_shouldAnimatePinAfterChange;
@property(retain, nonatomic) IMTranscriptChatItem *pinnedToChatItem; // @synthesize pinnedToChatItem=_pinnedToChatItem;
- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2;
- (void)didFinishPlayingAudio;
- (void)stopPlayingAudio;
- (void)updatePlayProgress;
- (void)updateAudioMessageTime;
- (void)startPlayingAudioForChatItem:(id)arg1;
- (void)insertTextFromSelectedMessageToPasteboard:(id)arg1;
- (BOOL)hasSelectedMessages;
- (BOOL)fezWebView:(id)arg1 quickLookWithEvent:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (id)quicklookPreviewPanelDataSource;
- (void)fezWebView:(id)arg1 concludeDragOperation:(id)arg2;
- (BOOL)fezWebView:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)fezWebView:(id)arg1 prepareForDragOperation:(id)arg2;
- (void)fezWebView:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)fezWebView:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)fezWebView:(id)arg1 draggingEntered:(id)arg2;
- (void)fezWebViewShouldRegisterForDraggedTypes:(id)arg1;
- (void)deleteMessages:(id)arg1;
- (void)delete:(id)arg1;
- (void)copy:(id)arg1;
- (void)fezWebViewDidEndLiveResize:(id)arg1;
- (void)fezWebViewWillStartLiveResize:(id)arg1;
- (void)fezWebView:(id)arg1 setFrameSize:(struct CGSize)arg2;
- (BOOL)webView:(id)arg1 validateUserInterfaceItem:(id)arg2 defaultValidation:(BOOL)arg3;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
- (void)webView:(id)arg1 willPerformDragSourceAction:(unsigned long long)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)webView:(id)arg1 didLayout:(unsigned long long)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)_decreaseResourceLoadCountForURL:(id)arg1;
- (void)_increaseResourceLoadCountForURL:(id)arg1;
- (void)_chatDisplayControllerDisplayedSearchResultDidChange:(id)arg1;
- (void)_chatDisplayControllerDidStopDisplayingSearchResults:(id)arg1;
- (void)setTranscriptStyleFromMenuItem:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextLarger;
- (void)forwardSelectedMessages:(id)arg1;
- (void)copySelectionToFindPboard:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_selectionChanged:(id)arg1;
- (void)_clearTextSelection:(id)arg1;
- (void)_selectionCleared:(id)arg1;
- (void)_loadMoreHistory;
- (void)_quickLookGUID:(id)arg1 threeFingerTap:(BOOL)arg2;
- (void)_reloadAttachmentsIfNeeded;
- (void)_messageClicked:(id)arg1;
- (void)_videoMessageVolumeChanged:(id)arg1;
- (void)_videoMessageSeeked:(id)arg1;
- (void)_videoMessageEnded:(id)arg1;
- (void)_videoMessagePaused:(id)arg1;
- (void)_videoMessageStarted:(id)arg1;
- (void)_clearDelayedSelectionForVideo;
- (void)_audioMessageClicked:(id)arg1;
- (void)_keepClicked:(id)arg1;
- (void)_augmentDDContext:(id)arg1 withChatItem:(id)arg2;
- (void)_ddResultClicked:(id)arg1;
- (void)_messageDBLClicked:(id)arg1;
- (void)_setUpResponderChain;
- (void)showErrorSheetForExpiredFileTransfer;
- (void)_showMessageErrorDialogForSavedChat;
- (void)_showMessageErrorDialogForMessage:(id)arg1;
- (id)_localizedErrorMessageForIMMessage:(id)arg1;
- (BOOL)_errorShouldOfferRetryForMessage:(id)arg1;
- (void)deselectChatItem:(id)arg1;
- (void)selectChatItem:(id)arg1;
- (void)dateTimeDisplayChanged:(id)arg1;
- (void)_fontStyleChanged:(id)arg1;
- (void)_nameStyleChanged:(id)arg1;
- (BOOL)shouldPinToBottom;
- (unsigned long long)maximumNumberOfMessagesVisibleForHeight:(double)arg1;
- (double)distanceFromBottom;
- (void)addSampleChatItem:(id)arg1;
- (void)_documentFrameChanged:(id)arg1;
- (void)_boundsChanged:(id)arg1;
- (void)_startDynamicLayoutAnimation;
- (void)_liveScrollEnd:(id)arg1;
- (void)_liveScrollStart:(id)arg1;
- (double)_verticalMidPoint;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (void)_dynamicPositionTick:(BOOL)arg1;
- (BOOL)lastMessageIsVisible;
- (void)clearUnreadMessageIfVisible;
- (id)visibleChatItems;
- (id)chatItemRects;
- (struct _NSRange)visibleChatItemRange;
- (id)visibleDOMElements;
- (void)_watchMessageAddressingDidChange:(id)arg1;
- (void)_applyTextSizeDisplayToTranscriptController;
- (void)_applyTextCustomFontSelected;
- (void)_applyParticipantDisplayToTranscriptStyleController;
- (void)_setupTranscriptStyleController;
- (void)_transcriptSettingsTextSizeDisplayDidChange:(id)arg1;
- (void)_transcriptSettingsCustomFontDidBecomeSelected:(id)arg1;
- (void)_transcriptSettingsParticipantDisplayDidChange:(id)arg1;
@property(readonly, nonatomic) BOOL showNames; // @dynamic showNames;
@property(readonly, nonatomic) BOOL showPictures; // @dynamic showPictures;
- (void)_updateTypingIndicatorPosition;
- (void)_updateFont:(id)arg1;
- (void)_updateBackgroundSize;
- (void)_updateDynamicElements;
- (void)_checkTypingIndicator;
- (struct CGPoint)typingIndicatorPosition;
- (void)clearAllMessages;
- (void)insertAllMessages;
- (void)_unreadCountChanged:(id)arg1;
- (void)_chatControllerDidCompleteDelete:(id)arg1;
- (void)_handleChatItemsChanged:(id)arg1;
- (void)_handleSearchResultsDidChange:(id)arg1;
- (void)scrollHelperDidFinishScrolling;
- (id)lastVisibleChatItem;
- (BOOL)scrollToChatItem:(id)arg1 center:(BOOL)arg2;
- (BOOL)scrollToChatItem:(id)arg1;
- (void)scrollToBeginningSmoothly:(BOOL)arg1;
- (void)scrollToEndWithTime:(float)arg1;
- (void)scrollToEndSmoothly:(BOOL)arg1;
- (void)scrollToPosition:(double)arg1 smoothly:(BOOL)arg2;
- (void)scrollFromPosition:(double)arg1 toPosition:(double)arg2 smoothly:(BOOL)arg3;
- (double)savedScrollPosition;
- (void)restoreSavedScrollPosition:(double)arg1;
- (void)_layoutIfNecessary;
- (void)endChanges;
- (void)beginChanges;
- (void)_changeTimeoutFired:(id)arg1;
- (void)clearHighlightedItems;
- (void)highlightChatItem:(id)arg1;
- (void)highlightSearchString:(id)arg1;
- (void)_loadBaseDocument;
- (void)finishLoad;
- (void)_createTranscriptStyleController;
@property(readonly) ChatController *chatController; // @dynamic chatController;
- (void)_chatDisplayControllerChatDidChange:(id)arg1;
- (void)_chatDisplayControllerChatWillChange:(id)arg1;
- (void)invalidate;
- (void)quickLookTransfer;
- (void)setupFileTransferContextualMenuItems;
- (void)downgradeMessage:(id)arg1;
- (void)setupSelectedUnsavedMessageContextualMenuItems;
- (void)setupSelectedMessageContextualMenuItems;
- (BOOL)_unsavedMessageSelected;
- (BOOL)_shouldShowSendAsSMS;
- (void)_initWebView;
- (void)_userScrolled:(id)arg1;
- (void)_loadMoreIfNeeded;
- (double)_boundsLimitForHeight:(double)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)_commonChatTranscriptViewControllerInit;
@property(readonly) struct CGRect visibleContentBounds; // @dynamic visibleContentBounds;
@property(nonatomic) double bottomOverlap; // @dynamic bottomOverlap;
@property(nonatomic) double topOverlap; // @dynamic topOverlap;
- (void)_updateBodyMarginsWithExtraTop:(double)arg1 extraBottom:(double)arg2;
@property(readonly) NSScrollView *webViewScrollView; // @dynamic webViewScrollView;
@property(readonly, nonatomic) BOOL isAnimatingReceipt; // @dynamic isAnimatingReceipt;
- (BOOL)isPinnedToBottom;
@property(readonly, nonatomic, getter=isScrolling) BOOL scrolling; // @dynamic scrolling;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TranscriptKeyDownHandler : NSResponder
{
    ChatTranscriptViewController *_transcriptViewController;
}

@property __weak ChatTranscriptViewController *transcriptViewController; // @synthesize transcriptViewController=_transcriptViewController;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (id)initWithChatTranscriptViewController:(id)arg1;

@end

@interface ChatTranscriptViewDragDestinationHelper : ChatTranscriptViewHelper
{
    BOOL _willAddNewInvitees;
    NSMutableArray *_newInvitees;
    BOOL _addIMHandlesToChat;
    BOOL _shouldForwardDragEvent;
}

+ (id)supportedDragTypes;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)isSenderFromMyWindow:(id)arg1;
- (id)editor;

@end

@interface ChatTranscriptViewPasteboardHelper : ChatTranscriptViewHelper <NSPasteboardItemDataProvider>
{
    DOMRange *_selectedDOMRange;
    NSString *_sender;
    NSMutableAttributedString *_copyString;
    NSMutableArray *_copiedFileTransferURLs;
    NSDictionary *_senderAttributes;
    NSAttributedString *_richMessagePrefix;
    NSAttributedString *_richMessagePostfix;
    NSSet *_messageNodeNames;
    NSSet *_leafClasses;
    NSSet *_leafNodeNames;
    BOOL _selectionContainsText;
}

+ (id)selectedMessageToMessagePartMap;
+ (void)setSelectedMessageToMessagePartMap:(id)arg1;
- (void)insertIntoPasteboard:(id)arg1;
- (BOOL)_shouldApplyFormattingForChatItems:(id)arg1;
- (BOOL)_itemsToCopyInRange:(id)arg1;
- (unsigned long long)_offsetIncludingNode:(id)arg1 messageStart:(BOOL)arg2;
- (unsigned long long)_realEndOffset;
- (unsigned long long)_realStartOffset;
- (id)_allUserContentNodesInSubTreeOfNode:(id)arg1;
- (id)_findAllNodesInSubTreeOf:(id)arg1 withClassNames:(id)arg2 andNodeNames:(id)arg3;
- (id)_chatItemForMessageSpan:(id)arg1;
- (void)_parseDataFromChatDict:(id)arg1 andApplyFormatting:(BOOL)arg2;
- (void)_parseFileTransfersInText:(id)arg1;
- (void)dealloc;
- (id)initWithChatTranscriptViewController:(id)arg1 andDOMRange:(id)arg2;
- (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3;
- (id)_newAppKitStringFromIMString:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChatTranscriptViewScrollHelper : ChatTranscriptViewHelper
{
    Animator *_currentScrollerAnimation;
    double _startingValue;
    double _endingValue;
    ScrollViewWatcher *_scrollViewWatcher;
}

@property(retain) ScrollViewWatcher *scrollViewWatcher; // @synthesize scrollViewWatcher=_scrollViewWatcher;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (void)restoreSavedScrollPosition:(double)arg1;
- (void)restoreSavedScrollPositionFromNumber:(id)arg1;
- (double)savedScrollPosition;
- (void)scrollSmoothlyFromPosition:(double)arg1 toPosition:(double)arg2 inTime:(float)arg3;
- (void)scrollToEndWithTime:(float)arg1;
- (void)scrollToBeginningSmoothly:(BOOL)arg1;
- (void)scrollToEndSmoothly:(BOOL)arg1;
- (void)scrollToPosition:(double)arg1 smoothly:(BOOL)arg2;
- (void)animator:(id)arg1 doStep:(double)arg2 lastStep:(BOOL)arg3;
- (BOOL)isScrollingToEnd;
- (BOOL)isScrolling;
- (void)scrollFromPosition:(double)arg1 toPosition:(double)arg2 smoothly:(BOOL)arg3;
- (void)setScrollPositionToEnd;
- (double)scrollPositionForDocumentHeight:(double)arg1 clipRect:(struct CGRect)arg2;
- (void)userPerformedScroll;
- (void)setIsPinnedToBottom:(BOOL)arg1;
- (BOOL)isPinnedToBottom;
- (void)dealloc;
- (id)initWithChatTranscriptViewController:(id)arg1;

@end

@interface ChatTranscriptViewBuddyPictureHelper : ChatTranscriptViewHelper
{
    NSMutableSet *_deferredInfoUpdates;
    NSMutableSet *_deferredPictureUpdates;
}

- (void)_handleInfoChangedNotification:(id)arg1;
- (void)_handlePictureChangedNotification:(id)arg1;
- (void)_updateDeferredHandles;
- (void)cancelDeferredUpdates;
- (void)dealloc;
- (id)initWithChatTranscriptViewController:(id)arg1;

@end

@interface FezWebView : WebView <NSServicesMenuRequestor>
{
    NSObject<FezWebViewDragDelegate> *_dragDestinationDelegate;
    NSObject<FezWebViewViewDelegate> *_viewDelegate;
    NSObject<FezWebViewQuickLookDelegate> *_quickLookDelegate;
    id <FezUserScrollEventDelegate> _userScrollEventDelegate;
    NSObject<FezWebViewPasteboardDelegate> *_pasteboardDelegate;
}

@property(nonatomic) NSObject<FezWebViewPasteboardDelegate> *pasteboardDelegate; // @synthesize pasteboardDelegate=_pasteboardDelegate;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)setUserScrollEventDelegate:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)setQuickLookDelegate:(id)arg1;
- (id)quickLookDelegate;
- (void)viewDidMoveToWindow;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setViewDelegate:(id)arg1;
- (id)viewDelegate;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)setDragDestinationDelegate:(id)arg1;
- (id)dragDestinationDelegate;
- (BOOL)isOpaque;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextLarger;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ARDLocalDesktopImage : NSObject
{
    NSSet *_fezWindows;
    unsigned int _fezCID;
    unsigned int _displayID;
}

- (struct CGImage *)snapshotIgnoringWindows:(id)arg1;
- (struct CGImage *)_captureWindows:(unsigned int *)arg1 count:(long long)arg2;
- (void)_setWindowNumbersToIgnore:(id)arg1;
@property unsigned int displayID;
- (void)dealloc;
- (id)init;

@end

@interface AuxVideoController : NSObject
{
    BOOL _theaterDisabled;
    QLAuxVideoReceiver *_qlAuxVideoReceiver;
    RemoteAuxVideoMuxer *_remoteAuxVideoMuxer;
    NSMutableArray *_receivers;
    AuxVideoReceiver *_currentReceiver;
    BOOL _setFramerateScheduled;
    BOOL _setVideoSizeScheduled;
    double _frameRate;
    struct CGSize _videoSize;
    VideoProcessor *_videoProcessor;
    unsigned long long _state;
    NSTimer *_pollListenerTimer;
    double _timerStart;
}

+ (id)sharedController;
+ (BOOL)activeAVChatPreventsTheater;
+ (void)_auxVideoControllerChangedState:(id)arg1;
+ (void)registerForStateChanges;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (id)currentControlBarDictionaryRepresentation;
- (void)auxVideoReceiver:(id)arg1 updateControlBarFromDictionaryRepresentation:(id)arg2;
- (void)auxVideoReceiver:(id)arg1 providedFrame:(struct __CVBuffer *)arg2;
- (void)auxVideoReceiverDidDisconnect:(id)arg1;
- (void)auxVideoReceiverDidConnect:(id)arg1;
- (void)remoteAuxVideoReceivePortDidDie;
- (void)removeAuxVideoReceiver:(id)arg1;
- (void)endAuxiliaryInput;
- (void)cancelAuxiliaryInput;
- (void)beginAuxiliaryInput:(struct CGSize)arg1;
- (void)stopServer;
- (void)_startTheaterWithReceiver:(id)arg1;
- (void)_pollListener:(id)arg1;
- (void)_stopPollingListener;
- (void)_startPollingListener:(id)arg1;
- (void)listenerConnected:(id)arg1;
- (void)_connectToClient:(id)arg1;
- (BOOL)startServerForProvider:(id)arg1 URL:(id)arg2;
- (BOOL)startServerForQuickLookURLs:(id)arg1;
- (void)_setInputState:(unsigned long long)arg1;
- (void)setTheaterDisabled:(BOOL)arg1 forceDisconnect:(BOOL)arg2;
- (void)setVideoSize:(struct CGSize)arg1;
- (void)_setVideoSize:(id)arg1;
- (void)updateFramerateWith:(id)arg1;
- (void)_setFramerate:(id)arg1;
- (BOOL)hasVideoProvider;
- (BOOL)hasAudioProvider;
- (struct CGSize)videoSize;
- (double)frameRate;
- (BOOL)isTheaterDisabled;
- (unsigned long long)state;
- (BOOL)requestedReplacementMode;
- (BOOL)requestedOptimizeVideoStills;
- (id)providerBundleID;
- (id)currentReceiver;
- (id)receiverForProviderID:(id)arg1;
- (id)receiverForBundleID:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RemoteAuxVideoReceiver : AuxVideoReceiver
{
    IMRemoteObject<IMAuxVideoProvider> *_videoProvider;
}

- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (void)setControls:(id)arg1;
- (id)_controls:(id)arg1 withVolumeLevel:(double)arg2;
- (void)_connectionUpdated:(id)arg1;
- (void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (void)_clientDidDisconnect:(id)arg1;
- (void)_mainThreadClientDidDisconnect:(id)arg1;
- (void)setFrameRate:(double)arg1;
- (void)dealloc;

@end

@interface RemoteAuxVideoMuxer : NSObject <IMAuxVideoReceiver>
{
    AuxVideoController *_auxVideoController;
    IMLocalObject *_videoReceiver;
}

- (oneway void)provider:(id)arg1 updateControlBarFromDictionaryRepresentation:(id)arg2;
- (oneway void)provider:(id)arg1 sentBuffer:(int)arg2 withAttachments:(id)arg3;
- (oneway void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (void)dealloc;
- (id)initWithController:(id)arg1;
- (void)_receivePortDidDie:(id)arg1;
- (void)_destroyReceivePort;
- (void)_connectionRequested:(id)arg1;
- (void)_createReceivePort;

@end

@interface AuxVideoReceiver : NSObject
{
    AuxVideoController *_auxVideoController;
    NSString *_bundleID;
    NSString *_providerID;
    NSURL *_URLToShare;
    IMSharedPixelBufferPool *_sharedBufferPool;
    BOOL _receivedFrameFromProvider;
    long long _numAudioChannels;
    unsigned int _providerPixelFormat;
    double _frameRate;
    NSTimer *_activityTimeoutTimer;
    BOOL _requestedReplacementMode;
    BOOL _requestedOptimizeVideoStills;
    NSDictionary *_controls;
}

- (void)updateControlBarFromDictionaryRepresentation:(id)arg1;
- (void)setControls:(id)arg1;
- (id)currentControlBarDictionaryRepresentation;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (void)processBuffer:(int)arg1 withAttachments:(id)arg2;
- (void)provider:(id)arg1 bundleID:(id)arg2 connectWithPixelFormat:(unsigned int)arg3 videoStills:(BOOL)arg4 replacement:(BOOL)arg5 audioChannels:(int)arg6 controlsDictionary:(id)arg7;
- (void)deactivateProvider;
- (void)activateProvider;
- (void)_registerActivity:(BOOL)arg1;
- (void)_activityTimeout;
- (void)setFrameRate:(double)arg1;
- (double)frameRate;
- (unsigned int)pixelFormat;
- (long long)numAudioChannels;
- (BOOL)requestedReplacementMode;
- (BOOL)requestedOptimizeVideoStills;
- (id)providerID;
- (void)setProviderID:(id)arg1;
- (id)URLToShare;
- (id)bundleID;
- (void)dealloc;
- (void)_cleanup;
- (id)initWithAuxVideoController:(id)arg1 bundleID:(id)arg2 URL:(id)arg3;

@end

@interface QLAuxVideoReceiver : AuxVideoReceiver <QLPreviewViewDelegate, QLPreviewSlideshowDelegate>
{
    QLPreviewView *_previewView;
    QLPreviewSlideshow *_slideshow;
    NSArray *_items;
    unsigned long long _currentIndex;
    long long _indexDelta;
    IMAuxVideoProvider *_provider;
    BOOL _slideshowNeedsAutostart;
    NSTimer *_sliderTimer;
    BOOL _needsUpdate;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scheduleUpdate;
- (void)scheduleUpdateTimerFired:(id)arg1;
- (void)_deferredPerformUpdate;
- (void)theaterScrollWheel:(id)arg1 atRelativePoint:(struct CGPoint)arg2;
- (void)performActionForControlWithIdentifier:(id)arg1 control:(id)arg2;
- (id)nextSlideshowItem;
- (id)currentSlideshowItem;
- (void)slideshowGoToNextItem:(id)arg1;
- (void)_advanceBy:(long long)arg1;
- (void)previewView:(id)arg1 didChangeDisplayStateForPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)_updateControlsForPreviewView:(id)arg1;
- (void)_configureBufferPoolAndAudioChannels;
- (id)currentControlBarDictionaryRepresentation;
- (void)_setCurrentItemIndex:(unsigned long long)arg1 delta:(long long)arg2 withTransition:(int)arg3 blocking:(BOOL)arg4;
- (unsigned long long)_indexWithDelta:(long long)arg1;
- (void)setURLs:(id)arg1;
- (oneway void)provider:(id)arg1 sentBuffer:(int)arg2 withAttachments:(id)arg3;
- (void)deactivateProvider;
- (void)activateProvider;
- (void)dealloc;
- (void)_qlCleanup;
- (id)initWithAuxVideoController:(id)arg1 bundleID:(id)arg2 URLs:(id)arg3;
- (void)_observeSlideshowRunning:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ARDImageView : SSFrameBufferView
{
    BOOL _resigned;
    int _state;
    unsigned long long _options;
    BOOL _mouseIsOverClient;
    BOOL _trackingAreaSet;
    struct CGRect _localDropZone;
}

- (BOOL)mouse:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (void)setLocalDropZone:(struct CGRect)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateTrackingAreas;
- (void)_clearTrackingAreas;
@property int remoteEventState;
- (void)drawRect:(struct CGRect)arg1;
@property BOOL resigned;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FileTransferCenter : IMFileTransferCenter <NSOpenSavePanelDelegate>
{
    NSMutableDictionary *_visibleTransfers;
}

+ (Class)fileTransferClass;
+ (void)initialize;
- (BOOL)doesUserReallyWantToGoOffline;
- (void)sendFileURLs:(id)arg1 toIMHandle:(id)arg2 showManagerWindow:(BOOL)arg3;
- (void)askAndSendFilesOnPasteboard:(id)arg1 toIMHandle:(id)arg2;
- (void)askAndSendFileURLs:(id)arg1 toIMHandle:(id)arg2;
- (void)selectAndSendFileToIMHandle:(id)arg1 window:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)selectAndSendFileToIMHandle:(id)arg1 window:(id)arg2;
- (void)clearFinishedTransfers;
@property(readonly, nonatomic) NSArray *orderedFileTransfers;
- (void)_handleTransferUpdated:(id)arg1;
- (void)_handleTransferRemoved:(id)arg1;
- (void)_handleTransferCreated:(id)arg1;
- (void)removeTransfer:(id)arg1;
- (void)removeTransferFromManager:(id)arg1;
- (void)_displayNameUpdated:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)isTransferVisible:(id)arg1;
- (void)_blockUntilTransferDataRetreived;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChatTranscriptViewQLHelper : ChatTranscriptViewHelper <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
    QLPreviewPanel *_panel;
    NSArray *_attachments;
    long long _startIndex;
}

@property(nonatomic) long long startIndex; // @synthesize startIndex=_startIndex;
@property(retain, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) QLPreviewPanel *panel; // @synthesize panel=_panel;
- (void).cxx_destruct;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FezApplication : NSApplication
{
    id _keyEventHandler;
    unsigned long long _previousEventHandlerModifierFlags;
    BOOL _isTALRestored;
    int _applicationBadgeUnreadCount;
}

+ (void)initialize;
@property int applicationBadgeUnreadCount; // @synthesize applicationBadgeUnreadCount=_applicationBadgeUnreadCount;
@property id keyEventHandler;
- (void)sendEvent:(id)arg1;
- (BOOL)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly) BOOL isTALRestored;
- (BOOL)shouldRestoreStateOnNextLaunch;
- (void)dealloc;

@end

@interface FezHotKeyManager : NSObject
{
    NSMutableDictionary *_handlers;
}

+ (int)disableSystemHotKey:(unsigned int)arg1;
+ (int)enableSystemHotKey:(unsigned int)arg1;
+ (id)sharedInstance;
- (void)triggerHotKeyEvent:(unsigned long long)arg1;
- (int)unregisterHotKey:(unsigned long long)arg1;
- (int)registerHotKey:(unsigned long long)arg1 keyCode:(unsigned short)arg2 keyMask:(unsigned int)arg3 handler:(id)arg4;
- (void)dealloc;
- (id)init;

@end

@interface FezAVRecorder : NSObject
{
    id _delegate;
    NSString *_outputFilePathName;
    BOOL _isRecording;
    BOOL _didRecordVideo;
    NSLock *_fileWriterLock;
    NSURL *_outputFileURL;
    struct OpaqueCMByteStream *_outputByteStreamRef;
    struct OpaqueFigFormatWriter *_outputFormatWriterRef;
    CDStruct_1b6d18a9 _firstFrameTime;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    FezMPEG4AACAudioRecorder *_audioRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    FezH264VideoRecorder *_videoRecorder;
    CDStruct_1b6d18a9 _refFirstPresentationTime;
}

- (void)videoRecordingAdapter:(id)arg1 didEncounterError:(int)arg2;
- (void)audioRecordingAdapter:(id)arg1 didEncounterError:(int)arg2;
- (void)recorder:(id)arg1 didEncounterError:(int)arg2;
- (void)recordAudioBufferList:(struct AudioBufferList *)arg1 description:(struct AudioStreamBasicDescription)arg2 channelLayout:(struct AudioChannelLayout *)arg3 channelLayoutSize:(unsigned int)arg4 presentationTime:(CDStruct_1b6d18a9)arg5;
- (void)recordFrame:(struct __CVBuffer *)arg1;
- (CDStruct_1b6d18a9)normalizePresentationTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)normalizeDuration:(CDStruct_1b6d18a9)arg1;
- (int)cancelRecording;
- (int)saveRecording;
- (int)startRecording;
- (int)prepareRecording;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setDidRecordVideo:(BOOL)arg1;
- (BOOL)didRecordVideo;
- (id)videoAdapter;
- (void)setVideoAdapter:(id)arg1;
- (id)audioAdapter;
- (void)setAudioAdapter:(id)arg1;
- (id)outputFilePathName;
- (void)setOutputFilePathName:(id)arg1;
- (id)fileWriterLock;
- (void)dealloc;
- (void)_cleanup;
- (id)init;

@end

@interface FezH264VideoRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezVideoRecordingAdapter> *_videoAdapter;
    BOOL _didRecordVideo;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputVideoTrackID;
    BOOL _compressingVideo;
    BOOL _readyToCompressFrame;
    struct __CFArray *_bufferedCompressedVideoFrames;
    struct OpaqueVTCompressionSession *_compressionSessionRef;
    struct _opaque_pthread_t *_videoCompressionThread;
    struct _opaque_pthread_cond_t _inputVideoReadyCondition;
    struct _opaque_pthread_mutex_t _inputVideoReadyMutex;
    struct __CVBuffer *_currentFrame;
    CDStruct_1b6d18a9 _currentFrameTime;
    CDStruct_1b6d18a9 _currentFrameDuration;
    CDStruct_1b6d18a9 _refEncodedFrameDuration;
    CDStruct_1b6d18a9 _refEncodedFramePresentationTime;
}

- (void)recordFrame:(struct __CVBuffer *)arg1;
- (int)cancelRecording;
- (int)saveRecording;
- (int)startRecording;
- (int)prepareRecording;
- (void)setVideoRecordingAdapter:(id)arg1;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)arg1;
- (void)dealloc;
- (void)_cleanup;
- (id)initWithAVRecorder:(id)arg1;
- (int)_flushBufferedVideo;
- (void *)_videoCompressionThreadMethod;

@end

@interface FezMPEG4AACAudioRecorder : NSObject
{
    FezAVRecorder *_avRecorder;
    NSObject<FezAudioRecordingAdapter> *_audioAdapter;
    BOOL _isRecording;
    struct OpaqueFigFormatWriter *_figFormatWriterRef;
    int _outputAudioTrackID;
    BOOL _didSetUpAudioConverter;
    struct OpaqueAudioConverter *_audioConverter;
    struct AudioStreamBasicDescription _inputStreamDescription;
    struct AudioStreamBasicDescription _actualInputStreamDescription;
    BOOL _didSetUpCompressedStreamDescription;
    struct AudioStreamBasicDescription _outputStreamDescription;
    struct opaqueCMFormatDescription *_fileAudioFormatDescription;
    CDStruct_1b6d18a9 _currentOutputPTS;
    long long _outputPTSDelta;
    struct AudioBufferList *_bufferListToCompress;
}

- (void)recordAudioBufferList:(struct AudioBufferList *)arg1 description:(struct AudioStreamBasicDescription)arg2 channelLayout:(struct AudioChannelLayout *)arg3 channelLayoutSize:(unsigned int)arg4 presentationTime:(CDStruct_1b6d18a9)arg5;
- (int)cancelRecording;
- (int)saveRecording;
- (int)startRecording;
- (int)prepareRecording;
- (struct AudioBufferList *)bufferListToCompress;
- (void)clearBufferListToCompress;
- (struct AudioStreamBasicDescription)actualInputStreamDescription;
- (void)setAudioRecordingAdapter:(id)arg1;
- (void)setFigFormatWriter:(struct OpaqueFigFormatWriter *)arg1;
- (BOOL)isRecording;
- (void)dealloc;
- (void)_cleanup;
- (id)initWithAVRecorder:(id)arg1;

@end

@interface VideoRecordingAdapter : NSObject <FezVideoRecordingAdapter>
{
    FezAVRecorder *_avRecorder;
    NSView *_view;
    long long _width;
    long long _height;
    OpenGLLayerView *_layerView;
    NSOpenGLContext *_context;
    NSOpenGLPixelBuffer *_nsPixelBuffer;
    FrameReader *_frameReader;
    BOOL _skippedFirstFrame;
}

- (void)newFrameAvailable;
- (struct CGSize)inputSize;
- (void)start;
- (void)stop;
- (void)prepare;
- (void)newVideoFrameAvailable;
- (void)askForFrame;
- (void)setAVRecorder:(id)arg1;
- (void)dealloc;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2 layerView:(id)arg3;
- (void)_initOpenGL;
- (void)_destroyOpenGL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AudioRecordingAdapter : NSObject <FezAudioRecordingAdapter>
{
    CDStruct_1b6d18a9 _audioTimestamp;
    AVChat *_avChat;
    FezAVRecorder *_avRecorder;
    unsigned int _incomingDeviceID;
    CDUnknownFunctionPointerType _ioProcID;
    struct AudioStreamBasicDescription _incomingStreamDescription;
    unsigned long long _numBuffersRequired;
    NSMutableDictionary *_userIDsToChannels;
    NSMutableDictionary *_bufferIndexToChannelMap;
    BOOL _compressingAudio;
    struct _opaque_pthread_t *_audioCompressionThread;
    struct _opaque_pthread_cond_t _inputAudioReadyCondition;
    struct _opaque_pthread_mutex_t _inputAudioReadyMutex;
    struct AudioChannelLayout _outputAudioChannelLayout;
    unsigned int _outputAudioChannelLayoutSize;
    struct AudioBufferList *_inputAudioRingBuffer;
    unsigned int _inputAudioRingBufferPacketLength;
    unsigned int _inputAudioRingBufferLengthInPackets;
    unsigned int _inputAudioRingBufferLengthInBytes;
    unsigned int _inputAudioRingBufferStartPosition;
    unsigned int _inputAudioRingBufferEndPosition;
}

- (void *)_audioCompressionThreadMethod;
- (BOOL)setShouldRecordAudio:(BOOL)arg1 forParticipant:(id)arg2;
- (BOOL)setShouldRecordAudio:(BOOL)arg1 forChannel:(int)arg2;
- (void)recordAudioForAllCurrentParticipants;
- (BOOL)addAudioForParticipant:(id)arg1;
- (BOOL)removeAudioForParticipant:(id)arg1;
- (void)stop;
- (void)start;
- (void)prepare;
- (void)setAVChat:(id)arg1;
- (void)setAVRecorder:(id)arg1;
- (struct AudioStreamBasicDescription)incomingStreamDescription;
- (void)dealloc;
- (void)_cleanup;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ARDWarningView : NSView
{
    SOGradientView *_gradientView;
    NSTextField *_message;
    NSImageView *_icon;
    NSButton *_help;
    NSExtendedBox *_box;
}

- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (double)autosizeHeight;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface AuxVideoApps : NSObject
{
}

+ (id)applicationsSupportingAuxVideo;

@end

@interface VideoControlsOverlay : NSObject <NSAnimationDelegate>
{
    id _delegate;
    NSWindow *_overlayWindow;
    NSWindow *_parentWindow;
    NSView *_parentView;
    double _horizPosition;
    NSViewAnimation *_fadeAnimation;
    BOOL _fadedOut;
    BOOL _trackingTimeSlider;
    NSView *_overlayContentView;
    OverlayBackground *_overlayContainer;
    ModifierTabView *_mutePauseTabView;
    NSTabView *_theaterPlayPauseTabView;
    NSExtendedBox *_controlsDivider;
    NSView *_fullScreenControlsContainer;
    MenuButton *_endChatButton;
    MenuButton *_muteChatButton;
    MenuButton *_pauseChatButton;
    MenuButton *_effectsButton;
    MenuButton *_endFullScreenButton;
    NSView *_theaterControlsContainer;
    MenuButton *_previousButton;
    MenuButton *_playButton;
    MenuButton *_pauseButton;
    MenuButton *_nextButton;
    AVVolumeSlider *_volumeControl;
    AVTimeSlider *_timeSlider;
    NSView *_fullScreenFullTemplate;
    NSView *_fullScreenNoSliderTemplate;
    NSView *_fullScreenOnlyTemplate;
    NSView *_windowedFullTemplate;
    NSView *_windowedNoVolumeTemplate;
    NSView *_windowedNoSliderTemplate;
    NSView *_windowedButtonsOnlyTemplate;
    NSView *_controlsFullTemplate;
    NSView *_controlsPrevNextTemplate;
    NSView *_currentTemplate;
}

- (void)theaterSetTime:(id)arg1;
- (void)theaterSetVolume:(id)arg1;
- (void)theaterNext:(id)arg1;
- (void)theaterPlayPause:(id)arg1;
- (void)theaterPrevious:(id)arg1;
- (void)toggleFullScreen:(id)arg1;
- (void)showEffectsPalette:(id)arg1;
- (void)toggleMute:(id)arg1;
- (void)togglePause:(id)arg1;
- (void)endConference:(id)arg1;
- (void)sliderDidEndTracking:(id)arg1;
- (void)_stopTracking;
- (void)sliderWillStartTracking:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)performNext;
- (void)performPrevious;
- (void)_performClickOnButton:(id)arg1;
- (void)setMute:(BOOL)arg1 enabled:(BOOL)arg2 paused:(BOOL)arg3 enabled:(BOOL)arg4 effectsEnabled:(BOOL)arg5;
- (void)setFullScreen:(BOOL)arg1 theaterControls:(id)arg2;
- (void)_setFullScreen:(BOOL)arg1 playPause:(id)arg2 previous:(id)arg3 next:(id)arg4 volume:(id)arg5 slider:(id)arg6;
- (BOOL)isVisible;
- (void)fadeInAnimated:(BOOL)arg1;
- (void)fadeOutIfPossible;
- (void)_fadeOut:(BOOL)arg1 animated:(BOOL)arg2;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)_updateOpacity;
- (id)overlayWindow;
- (id)parentWindow;
- (void)setParentView:(id)arg1 horizPosition:(double)arg2;
- (void)_setParentView:(id)arg1 horizPosition:(double)arg2 forceReposition:(BOOL)arg3;
- (void)_repositionOverlayWindow;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_setButton:(id)arg1 imageTemplateDimension:(double)arg2;
- (void)_setButton:(id)arg1 imageTemplateSize:(struct CGSize)arg2;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OverlayBackground : NSView
{
    double _radius;
    NSColor *_borderColor;
    NSColor *_interiorColor;
    double _borderLeft;
    double _borderTop;
    double _borderRight;
    double _borderBottom;
    double _minBorder;
    double _maxBorder;
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(copy, nonatomic) NSColor *interiorColor; // @synthesize interiorColor=_interiorColor;
@property(copy, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)getBorderWidthLeft:(double *)arg1 top:(double *)arg2 right:(double *)arg3 bottom:(double *)arg4;
- (void)setBorderWidthLeft:(double)arg1 top:(double)arg2 right:(double)arg3 bottom:(double)arg4;

@end

@interface TemplateView : NSView
{
    NSView *_actualView;
}

- (void)apply;
- (id)actualView;

@end

@interface FezAVSlider : NSControl
{
    id _delegate;
    double _minValue;
    double _maxValue;
    double _leftCapWidth;
    double _rightCapWidth;
    NSImage *_backgroundImage;
    NSImage *_thumbImage;
    BOOL _drawsBorder;
    BOOL _mouseDown;
}

+ (Class)cellClass;
@property(nonatomic) BOOL drawsBorder; // @synthesize drawsBorder=_drawsBorder;
@property(nonatomic) double rightCapWidth; // @synthesize rightCapWidth=_rightCapWidth;
@property(nonatomic) double leftCapWidth; // @synthesize leftCapWidth=_leftCapWidth;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void)mouseDown:(id)arg1;
- (void)_trackMouseFrom:(struct CGPoint)arg1 trackWidth:(double)arg2;
@property(nonatomic) double maxValue;
@property(nonatomic) double minValue;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_thumbRect;
- (void)_generateThumbImage:(struct CGRect)arg1;
- (void)_generateBackgroundImage:(struct CGRect)arg1;
- (void)dealloc;
- (void)_clearImages;
- (void)awakeFromNib;

@end

@interface AVTimeSlider : FezAVSlider
{
    NSDictionary *_fontAttributes;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_drawText;
- (id)_attributedStringForTimeInterval:(double)arg1 negative:(BOOL)arg2;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface AVVolumeSlider : FezAVSlider
{
    NSButton *_muteButton;
    double _preMuteDoubleValue;
}

- (void)mouseDown:(id)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)_toggleMute:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)_createMuteButton;

@end

@interface AnamorphicSampler : CIFilter
{
    CIImage *inputImage;
    CIVector *inputSize;
    CIKernel *_kernelHorizontal;
    CIKernel *_kernelVertical;
}

- (id)outputImage;
- (struct CGRect)regionOf:(int)arg1 destRect:(struct CGRect)arg2 userInfo:(id)arg3;
- (id)scalingTableForSourceSize:(struct CGSize)arg1 destinationSize:(struct CGSize)arg2;

@end

@interface AccountHeader : NSTableHeaderView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface ChatRegistry : IMChatRegistry
{
    NSMutableDictionary *_chatGUIDToSavedChatMap;
}

- (void)unregisterSavedChatWithGUID:(id)arg1;
- (id)savedChatWithAccount:(id)arg1 style:(unsigned char)arg2 roomName:(id)arg3 messages:(id)arg4 participants:(id)arg5;
- (id)allSavedChats;
- (void)dealloc;
- (id)init;

@end

@interface ChatTranscriptManager : NSObject
{
    NSMutableDictionary *_cachedChatTranscripts;
    SOTimer *_autoSaveTimer;
    NSMutableArray *_dirtyChatGUIDs;
    NSMutableDictionary *_chatGUIDToSavePathMap;
    NSMutableSet *_loadingChatGUIDs;
    NSOperationQueue *_findOperationQueue;
    NSOperationQueue *_loadOperationQueue;
    NSOperationQueue *_saveOperationQueue;
    NSString *_cachedArchivedChatPath;
    BOOL _archivedChatPathCreated;
    SOTimerCenter *_timerCenter;
    NSMutableDictionary *_queryToCompletionBlock;
    NSMutableDictionary *_chatGUIDToQueryID;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *chatGUIDToQueryID; // @synthesize chatGUIDToQueryID=_chatGUIDToQueryID;
@property(retain, nonatomic) NSMutableDictionary *queryToCompletionBlock; // @synthesize queryToCompletionBlock=_queryToCompletionBlock;
- (void)_handleChatRegistryDidUnregisterChat:(id)arg1;
- (void)_startAutosaveTimer;
- (void)updateChatFilesByRemovingMessages:(id)arg1 replacingMessages:(id)arg2;
- (void)_worker_updateChatAtFilePath:(id)arg1 removeGuids:(id)arg2 replaceMessages:(id)arg3;
- (void)_chatTranscriptFinishedSaving:(id)arg1;
- (void)_chatTranscriptStartedSaving:(id)arg1;
- (void)saveChat:(id)arg1 toTranscriptAtPath:(id)arg2 includeArchivedItems:(BOOL)arg3;
- (void)autosaveChats:(BOOL)arg1;
- (void)autosaveChats;
- (void)_autosaveChatsTimerFired:(id)arg1;
- (void)autosaveChat:(id)arg1;
- (id)_savedChatPathForChat:(id)arg1 onDate:(id)arg2;
- (void)_saveChat:(id)arg1 toTranscriptAtPath:(id)arg2 isAutosave:(BOOL)arg3 includeArchivedItems:(BOOL)arg4 allowDBLoad:(BOOL)arg5;
- (void)_saveChat:(id)arg1 toTranscriptAtPath:(id)arg2 isAutosave:(BOOL)arg3 includeArchivedItems:(BOOL)arg4;
- (void)_chatLoaded:(id)arg1;
- (id)archivedChatPath;
- (id)defaultSaveNameForChat:(id)arg1;
- (id)_baseSaveNameForChat:(id)arg1 withDate:(id)arg2;
- (id)_otherIMHandleOrChatroomForChat:(id)arg1;
- (void)_worker_saveChatToPath:(id)arg1 guid:(id)arg2 dateCreated:(id)arg3 dateModified:(id)arg4 accountInternalName:(id)arg5 serviceName:(id)arg6 messages:(id)arg7 loginIMHandle:(id)arg8 participants:(id)arg9 roomName:(id)arg10 isAutosave:(BOOL)arg11 includeArchivedItems:(BOOL)arg12 aggregateChatStyle:(id)arg13;
- (id)_dataForChatWithDateCreated:(id)arg1 dateModified:(id)arg2 accountInternalName:(id)arg3 serviceName:(id)arg4 messages:(id)arg5 loginIMHandle:(id)arg6 participants:(id)arg7 roomName:(id)arg8 includeArchivedItems:(BOOL)arg9 aggregateChatStyle:(id)arg10 lastMessageID:(id)arg11 fileURL:(id)arg12 outChatSummary:(id *)arg13;
- (id)_newMetadataForServiceName:(id)arg1 dateCreated:(id)arg2 dateModified:(id)arg3 loginIMHandle:(id)arg4 participants:(id)arg5 roomName:(id)arg6 lastMessageID:(id)arg7;
- (void)_main_chatWasSaved:(id)arg1;
- (void)loadTranscriptData:(id)arg1 intoChatDoc:(id)arg2 fromFileURL:(id)arg3;
- (void)_worker_loadTranscriptData:(id)arg1 intoChatDoc:(id)arg2 fromFileURL:(id)arg3;
- (void)_main_finishLoadTranscriptDataIntoChatDoc:(id)arg1;
- (BOOL)isChatLoadingData:(id)arg1;
- (void)decodeTranscriptSearchData:(id)arg1 intoChat:(id)arg2;
- (void)_worker_loadSearchResults:(id)arg1 intoChat:(id)arg2;
- (void)_loadedItemsIntoChat:(id)arg1;
- (BOOL)isChatDirty:(id)arg1;
- (void)deleteFileForGUID:(id)arg1;
- (void)markChatGUIDAsClean:(id)arg1;
- (void)markChatAsDirty:(id)arg1;
- (BOOL)_worker_loadData:(id)arg1 fromFileURL:(id)arg2 outAccount:(id *)arg3 outMessages:(id *)arg4 outParticipants:(id *)arg5 outRoomName:(id *)arg6 outStyle:(id *)arg7 outDateCreated:(id *)arg8 outDateModified:(id *)arg9 outLastMessageID:(id *)arg10;
- (void)dealloc;
- (id)init;

@end

@interface FZVideoConferenceControllerHacks : NSObject <FZVideoProcessorProtocol, FZAuxVideoControllerProtocol, AVControllerDelegate>
{
}

- (void)incomingNegotiationRequest:(id)arg1;
- (void)inviteFailedFromIMHandle:(id)arg1 reason:(long long)arg2;
- (void)invitedToAVChat:(id)arg1;
@property(readonly, nonatomic) BOOL auxVideoModeIsReplacement;
@property(readonly, nonatomic) BOOL shouldCPUResize;
@property(readonly, nonatomic) id renderDelegate;
@property(readonly, nonatomic) BOOL hasAudioProvider;
@property(readonly, nonatomic) BOOL hasVideoProvider;

@end

@interface AVChatAuxVideoFeature : AVChatFeature <FrameListener>
{
    unsigned int _auxVideoRunningOrUnderNegotiation:1;
    unsigned int _auxInputAllowed:1;
    unsigned int _watchingForAuxVideo:1;
}

- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;
- (void)_auxVideoControllerChangedReplacementMode:(id)arg1;
- (void)_auxVideoControllerChangedState:(id)arg1;
- (void)_endAuxInput;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)_setWatchForFirstAuxVideoFrame:(BOOL)arg1;
- (void)_setupAuxVideo;
- (void)_startAuxVideo;
- (void)_removeAllEndedParticipantsInAuxVideo;
- (BOOL)_shouldAllowOutgoingAuxVideo;
- (BOOL)_shouldAllowIncomingAuxVideo;
- (void)setAuxVideoRunningOrUnderNegotiation:(BOOL)arg1;
- (BOOL)isAuxVideoRunningOrUnderNegotiation;
- (id)auxVideoFeatureDelegate;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (void)participantInvited:(id)arg1;
- (void)conferenceEndedWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)participantRemoved:(id)arg1;
- (void)dealloc;
- (id)initWithAVChat:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AVChatARDFeature : AVChatFeature
{
    AVChatController *_ardUpgradeController;
    CDStruct_7a6dc4e9 *_RFBConnectionResult;
    int _ardRole;
}

- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;
- (void)startARDClientToParticipant:(id)arg1;
- (BOOL)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (void)_updatePeopleListARDStatus;
- (unsigned int)addStatusForIMHandle:(id)arg1 asVideo:(BOOL)arg2 ardRole:(int)arg3;
- (BOOL)setConnection:(CDStruct_378d7ba3 *)arg1 withHandle:(id)arg2;
- (void)_cleanupARDResult;
- (void)setConnectionResult:(CDStruct_7a6dc4e9 *)arg1;
- (CDStruct_7a6dc4e9 *)connectionResult;
- (void)delegateChangedTo:(id)arg1;
@property(nonatomic) AVChatController *upgradeController;
- (void)dealloc;

@end

@interface RecordingAVChatFeature : AVChatFeature
{
    NSMutableDictionary *_recordingNegotiations;
    unsigned int _lastRecordingNegotiationID;
    NSMutableDictionary *_vcPartyIDToRecordingNegotiationID;
    unsigned int _recordingRequested:1;
}

- (BOOL)hasAddableParticipantsOtherwiseStatus:(unsigned int *)arg1;
- (BOOL)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)_sendRecordingMessageToParticipant:(id)arg1 type:(unsigned int)arg2 forParticipant:(id)arg3 onBehalfOf:(id)arg4 withID:(unsigned int)arg5;
- (BOOL)hasRecordingNegotiations;
- (void)recordingFinished;
- (void)_participantGrantedRecording:(id)arg1 forParticipant:(id)arg2 withID:(unsigned int)arg3;
- (void)_broadcastRecordingBeginForParticipant:(id)arg1 withID:(unsigned int)arg2;
- (void)_participantDeniedRecording:(id)arg1 forParticipant:(id)arg2 withID:(unsigned int)arg3;
- (void)_participantRequestedRecording:(id)arg1 withID:(unsigned int)arg2;
- (void)respondToRecordingRequestFromParticipant:(id)arg1 canRecord:(BOOL)arg2;
- (void)requestRecording;
- (void)_requestRecordingOnBehalfOf:(id)arg1 withID:(unsigned int)arg2;
- (BOOL)recordingRequested;
- (void)_participantFinishedRecording:(id)arg1 withID:(unsigned int)arg2;
- (void)_participantBeginRecording:(id)arg1 withID:(unsigned int)arg2;
- (id)recordingFeatureDelegate;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (void)dealloc;

@end

@interface ChatWindowSplitViewController : NSSplitViewController
{
    ChatWindowSplitView *_chatWindowSplitView;
}

@property(retain, nonatomic) ChatWindowSplitView *chatWindowSplitView; // @synthesize chatWindowSplitView=_chatWindowSplitView;
- (void).cxx_destruct;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ChatTranscriptViewFileTransferHelper : ChatTranscriptViewHelper
{
    NSMutableSet *_expiredTransferGUIDs;
}

@property(readonly, retain, nonatomic) NSMutableSet *expiredTransferGUIDs; // @synthesize expiredTransferGUIDs=_expiredTransferGUIDs;
- (void)_fileTransferUpdated:(id)arg1;
- (void)_transferResourceLoaded:(id)arg1;
- (void)dealloc;
- (id)initWithChatTranscriptViewController:(id)arg1;

@end

@interface SearchBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface AccountsTableController : NSObject <NSTableViewDelegate, NSTableViewDataSource>
{
    PeopleListController *_peopleListController;
    MyStatusControl *_mainStatusControl;
    AccountsScrollView *_accountsScrollView;
    NSTableView *_accountsTable;
    id <AccountsTableControllerDataSource> _dataSource;
    NSDictionary *_statusControlAttributes;
    NSColor *_statusControlEditBGColor;
    BOOL _statusControlDisablesBorderInEditMode;
    unsigned long long _statusControlAlignment;
    double _statusControlCornerRadius;
    NSArray *_currentAccounts;
    NSArray *_updatedAccounts;
    double _rowHeightOverride;
    double _lastRowHeightOverride;
    BOOL _usesAutolayout;
}

@property BOOL usesAutolayout; // @synthesize usesAutolayout=_usesAutolayout;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)_updateLayoutToMatchScrollerStyle;
- (void)updateRow:(id)arg1;
- (void)layoutRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)clearAllAccounts;
- (void)updateRowForAccount:(id)arg1;
- (BOOL)someAccountsNeedToBeShown;
- (void)updateAccounts;
- (void)_setUpdatedAccounts:(id)arg1;
- (void)_accountLoggedOut:(id)arg1;
- (void)_accountLoggedIn:(id)arg1;
- (void)_updateCellViewsForOnlineOfflineStatus;
- (BOOL)_anyAccountHasAlert;
- (BOOL)_allAccountsOffline;
- (void)updateTable;
- (double)accountsTableHeightForUpdatedAccounts:(BOOL)arg1;
- (void)setStatusControlCornerRadius:(double)arg1;
- (void)setStatusControlAlignment:(unsigned long long)arg1;
- (void)setRowHeightOverride:(double)arg1 lastRowHeightOverride:(double)arg2;
- (void)setStatusControlDisablesBorderInEditMode:(BOOL)arg1;
- (void)setStatusControlEditBackgroundColor:(id)arg1;
- (void)setStatusControlAttributes:(id)arg1;
- (unsigned long long)maximumNumberOfRowsToDisplay;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AccountsScrollView : ScrollerStyleScrollView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface ServiceFieldController : NSCollectionViewItem <NSTokenFieldDelegate>
{
    NSTextField *_serviceLabel;
    NSTokenField *_handlesTokenField;
    NSObject<ServiceFieldControllerDelegate><NSTokenFieldDelegate> *_delegate;
}

- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenField:(id)arg1 readFromPasteboard:(id)arg2;
- (id)tokenField:(id)arg1 menuForRepresentedObject:(id)arg2;
- (BOOL)tokenField:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (void)handleTokensDidChange:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)handlesTokenField;
- (void)setEditable:(BOOL)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)setView:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FezExtendedOperation : NSOperation
{
    NSThread *_operationThread;
    unsigned long long _operationState;
    double _operationTimeout;
    NSMutableSet *_childOperations;
}

+ (id)runLoopModes;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isConcurrent;
@property(readonly, nonatomic) unsigned long long state;
- (void)cancel;
- (void)fail;
- (void)_timeout;
- (void)_stopWithState:(unsigned long long)arg1;
@property(nonatomic) double timeout;
- (void)didFinish;
- (void)createChildOperations;
- (void)addChildOperation:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_threadedMain;
- (void)start;
- (void)_startThread;
- (unsigned long long)_minChildOperationState;
- (unsigned long long)_maxChildOperationState;
- (void)_setState:(unsigned long long)arg1;
- (void)dealloc;

@end

@interface ColoredSpinner : NSView
{
    NSColor *_color;
    BOOL _displaysWhenStopped;
    NSTimer *_timer;
    unsigned long long _animationStep;
    NSMutableArray *_images;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)_generateImages;
- (void)_timerStep:(id)arg1;
@property(nonatomic) BOOL animating;
@property(nonatomic) BOOL displaysWhenStopped;
@property(copy, nonatomic) NSColor *color;
- (void)dealloc;

@end

@interface MyStatusImageControl : NSView
{
    NSExtendedImageView *_statusImage;
    ErrorButton *_errorButton;
    id _target;
    SEL _action;
    BOOL _isShowingDisconnectedButton;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
- (void)setAccessibilityValue:(id)arg1;
- (void)showErrorButtonAsAlert;
- (void)showErrorButtonAsDisconnection;
- (void)showStatusImage:(id)arg1;
- (void)_showErrorButtonWithState:(long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ErrorButton : NSButton
{
    ErrorImageButtonCell *_imageCell;
    struct CGRect _imageCellRect;
}

- (void)changeErrorButtonStateTo:(long long)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ErrorImageButtonCell : NSButtonCell
{
    BOOL _mouseIn;
}

@property(nonatomic) BOOL isMouseIn; // @synthesize isMouseIn=_mouseIn;
- (long long)interiorBackgroundStyle;

@end

@interface StatusControlCellView : NSTableCellView
{
    MyStatusImageControl *_statusImageControl;
    MyStatusControl *_statusControl;
    NSTextField *_accountNameTextField;
    NSBox *_greyBox;
    NSBox *_whiteBox;
    Account *_representedAccount;
    StatusController *_statusController;
    NSLayoutConstraint *_spuriousConstraint1;
    BOOL _usesAutolayout;
    NSLayoutConstraint *_statusGemToStatusControlHorizontalSpaceConstraint;
    NSLayoutConstraint *_accountNameMinWidth;
}

+ (void)setUsesLegacyScroller:(BOOL)arg1;
@property BOOL usesAutolayout; // @synthesize usesAutolayout=_usesAutolayout;
@property(nonatomic) NSLayoutConstraint *accountNameMinWidth; // @synthesize accountNameMinWidth=_accountNameMinWidth;
@property(nonatomic) NSLayoutConstraint *statusGemToStatusControlHorizontalSpaceConstraint; // @synthesize statusGemToStatusControlHorizontalSpaceConstraint=_statusGemToStatusControlHorizontalSpaceConstraint;
@property(readonly, nonatomic) MyStatusControl *statusControl; // @synthesize statusControl=_statusControl;
@property(retain, nonatomic) StatusController *statusController; // @synthesize statusController=_statusController;
@property(retain, nonatomic) Account *representedAccount; // @synthesize representedAccount=_representedAccount;
@property(readonly, nonatomic) MyStatusImageControl *statusImageControl; // @synthesize statusImageControl=_statusImageControl;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutInteriorViews;
- (void)hideEtchingLines:(BOOL)arg1;
- (void)updateUIForActiveState:(BOOL)arg1;
- (void)setupForAccount:(id)arg1;
- (void)_windowKeyStateChanged:(id)arg1;
- (void)setAlignsStatusControlToLeftEdge:(BOOL)arg1;
@property(retain, nonatomic) NSString *accountName; // @dynamic accountName;
- (void)dealloc;
- (void)_cleanup;
- (void)awakeFromNib;

@end

@interface ScrollerStyleScrollView : NSScrollView
{
}

- (void)setScrollerStyle:(long long)arg1;

@end

@interface FezBuddyListPresence : FezPresence
{
    IMServiceImpl *_filterService;
    IMPerson *_filterPerson;
    NSSet *_filterGroups;
    NSString *_filterSingleGroup;
    NSString *_IDFilter;
}

@property(retain, nonatomic) NSString *_IDFilter; // @synthesize _IDFilter;
@property(retain, nonatomic) NSString *group; // @synthesize group=_filterSingleGroup;
@property(retain, nonatomic) NSSet *groups; // @synthesize groups=_filterGroups;
@property(retain, nonatomic) IMPerson *person; // @synthesize person=_filterPerson;
@property(retain, nonatomic) IMServiceImpl *service; // @synthesize service=_filterService;
@property(readonly, nonatomic) unsigned int sortOrder;
- (BOOL)isEqual:(id)arg1;
- (BOOL)canAddIMHandle:(id)arg1;
- (id)_filterSingleGroup;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIMPersonFilter:(id)arg1 serviceFilter:(id)arg2 groupFilters:(id)arg3;
- (id)initWithIMPersonFilter:(id)arg1 serviceFilter:(id)arg2 groupFilters:(id)arg3 quiet:(BOOL)arg4;
- (id)initWithIMPersonFilter:(id)arg1 IDFilter:(id)arg2 serviceFilter:(id)arg3 groupFilters:(id)arg4;
- (id)initWithIMPersonFilter:(id)arg1 IDFilter:(id)arg2 serviceFilter:(id)arg3 groupFilters:(id)arg4 quiet:(BOOL)arg5;

@end

@interface FezOfflinePeopleListGroup : FezPeopleListGroup
{
    BOOL _pendingClear;
    int _changes;
    NSMutableArray *_visibleMembers;
    NSMutableSet *_dontShowMembers;
}

@property(nonatomic) BOOL _pendingClear; // @synthesize _pendingClear;
@property(nonatomic) int _changes; // @synthesize _changes;
@property(retain, nonatomic) NSMutableSet *_dontShowMembers; // @synthesize _dontShowMembers;
@property(retain, nonatomic) NSMutableArray *_visibleMembers; // @synthesize _visibleMembers;
- (void)dealloc;
- (void)removeAllItems;
- (void)removePeopleListItem:(id)arg1;
- (void)addPeopleListItem:(id)arg1;
- (void)dontShowPresence:(id)arg1;
- (void)endChanges;
- (void)beginChanges;
@property(readonly, nonatomic) BOOL isChanging;
- (void)_clearVisibleMembers;
- (void)forgetIgnoredPresences;
- (unsigned long long)numberOfItems;
- (id)visibleMembers;
@property(readonly, retain, nonatomic) NSSet *dontShowMembers;
- (id)init;

@end

@interface FezPeopleList : IMDirectlyObservableObject <IMDirectlyObservableObjectObserver>
{
    Class _customPeopleListItemClass;
    NSDictionary *_groupProperties;
    NSMutableArray *_peopleListItems;
    NSMutableArray *_peopleListGroups;
    NSMutableArray *_smartGroups;
    NSString *_collapsedGroupsPrefKey;
    NSString *_searchString;
    NSArray *_groupsOrdering;
    FezServicePeopleListGroup *_bonjourGroup;
    BOOL _hideOfflinePeople;
    BOOL _hideAwayPeople;
    BOOL _hideIdlePeople;
    BOOL _hideUnknownPeople;
    BOOL _hideNoStatusPeople;
    BOOL _usesOfflineGroup;
    BOOL _usesBonjourGroup;
    BOOL _arrangesByGroup;
    BOOL _allowsSearching;
    BOOL _inSearchMode;
    NSMutableArray *_items;
    FezOfflinePeopleListGroup *_offlineGroup;
    BOOL _allowsGroupOrdering;
    BOOL _pendingResort;
    long long _coalesceCount;
    BOOL _allowsIMHandleSubstitution;
}

+ (id)_notificationSelectors;
+ (id)_notificationNames;
@property(nonatomic) BOOL allowsIMHandleSubstitution; // @synthesize allowsIMHandleSubstitution=_allowsIMHandleSubstitution;
@property(readonly, nonatomic) Class peopleListItemClass;
@property(retain, nonatomic) Class customPeopleListItemClass;
- (void)endChanges;
- (void)beginChanges;
- (BOOL)makingChanges;
- (void)repopulateIMHandles:(id)arg1;
- (void)_repopulateIMHandles:(id)arg1 filterGroups:(BOOL)arg2;
- (void)removeAllIMHandles;
- (void)removeAllIMHandlesAndGroups:(BOOL)arg1;
- (void)removeIMHandle:(id)arg1;
- (void)removeIMHandle:(id)arg1 fromGroup:(id)arg2;
- (void)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (void)_removeIMHandle:(id)arg1 fromPeopleListGroup:(id)arg2;
- (id)_removeIMHandle:(id)arg1 fromPeopleListItem:(id)arg2;
- (void)_postIMHandleRemovedNotification;
- (void)addPeopleFromArray:(id)arg1;
- (void)addPeopleFromArray:(id)arg1 skipMe:(BOOL)arg2;
- (void)addIMHandle:(id)arg1;
- (BOOL)_addIMHandle:(id)arg1 toCollection:(id)arg2 usingOrphanItems:(id)arg3;
- (void)_postIMHandleAddedNotifcation;
@property(nonatomic) BOOL showsIdlePeople;
@property(nonatomic) BOOL showsAwayPeople;
@property(nonatomic) BOOL showsUnknownPeople;
@property(nonatomic) BOOL showsNoStatusPeople;
@property(nonatomic) BOOL showsOfflinePeople;
@property(retain, nonatomic) NSString *collapsedGroupsPrefKey;
@property(nonatomic) BOOL arrangesByGroup;
@property(retain, nonatomic) NSDictionary *groupProperties;
- (void)setUsesBonjourGroup:(BOOL)arg1;
@property(nonatomic) BOOL usesOfflineGroup;
@property(readonly, nonatomic) NSString *groupForNewIMHandles;
- (void)setGroups:(id)arg1;
- (id)peopleListGroupSortOrder;
- (void)removeGroup:(id)arg1;
- (void)_removeGroup:(id)arg1;
- (void)addGroup:(id)arg1;
- (void)_addGroup:(id)arg1;
- (BOOL)containsGroup:(id)arg1;
- (id)groupWithName:(id)arg1;
- (struct _NSRange)_rangeOfGroupAndItems:(id)arg1 startingAtIndex:(unsigned int)arg2;
- (unsigned long long)_indexOfGroup:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_updateGroupPreferences;
- (BOOL)containsIMHandle:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfIMHandles;
@property(readonly, nonatomic) NSArray *allIMHandles;
- (id)peopleInGroup:(id)arg1;
- (id)representedPeopleInGroup:(id)arg1;
- (void)refreshList;
- (void)_refreshContents;
- (void)_resort;
- (void)_resortNow;
- (void)resort;
- (void)_postResortNotification;
- (void)_rebuildItems;
- (BOOL)_peopleListItem:(id)arg1 shouldBeInGroup:(id)arg2;
- (BOOL)_peopleListItemShouldBeShown:(id)arg1 inGroup:(id)arg2;
- (BOOL)_isBonjourGroup:(id)arg1;
- (BOOL)_isOfflineGroup:(id)arg1;
- (id)_offlineGroup;
- (CDStruct_7495ffd8)_FezSortParameters;
@property(readonly, nonatomic) NSArray *items;
@property(readonly, nonatomic) NSArray *peopleListItems;
@property(readonly, nonatomic) NSArray *peopleListGroups;
- (BOOL)_allowPeopleListItemInCurrentSearch:(id)arg1;
@property(retain, nonatomic) NSString *searchString;
@property(readonly, nonatomic) BOOL inSearchMode;
@property(nonatomic) BOOL allowsSearching;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_peopleListItemNeedsGroupChange:(id)arg1;
- (void)_peopleListItemSortOrderChangedNotification:(id)arg1;
- (void)_peopleListItemNeedsSorting:(id)arg1;
- (void)_observePeopleListItem:(id)arg1;
- (void)_unobservePeopleListItem:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FezPeopleListGroup : NSObject
{
    NSMutableArray *_members;
    NSDictionary *_properties;
    NSString *_name;
    NSString *_localizableName;
    FezPeopleListItem *_item;
    NSRecursiveLock *_lock;
    BOOL _expanded;
    int _maxMembers;
    BOOL _supportsReordering;
    BOOL _supportsMemberReordering;
    BOOL _supportsRename;
    BOOL _supportsAdding;
    BOOL _supportsRemoving;
    BOOL _supportsOfflineMembers;
}

@property BOOL supportsOfflineMembers; // @synthesize supportsOfflineMembers=_supportsOfflineMembers;
@property BOOL supportsRemoving; // @synthesize supportsRemoving=_supportsRemoving;
@property BOOL supportsAdding; // @synthesize supportsAdding=_supportsAdding;
@property BOOL supportsRename; // @synthesize supportsRename=_supportsRename;
@property BOOL supportsMemberReordering; // @synthesize supportsMemberReordering=_supportsMemberReordering;
@property BOOL supportsReordering; // @synthesize supportsReordering=_supportsReordering;
@property int maxMembers; // @synthesize maxMembers=_maxMembers;
@property(retain) NSMutableArray *_members; // @synthesize _members;
@property(retain) NSString *name; // @synthesize name=_name;
@property(setter=setExpanded:) BOOL isExpanded; // @synthesize isExpanded=_expanded;
@property(retain) FezPeopleListItem *peopleListItem; // @synthesize peopleListItem=_item;
@property(retain) NSString *localizableName; // @synthesize localizableName=_localizableName;
@property(retain) NSRecursiveLock *_lock; // @synthesize _lock;
- (CDStruct_b2f7276a)filterForIMHandle:(id)arg1;
- (BOOL)shouldConsumeIMHandle:(id)arg1;
- (BOOL)shouldContainIMHandle:(id)arg1;
@property(retain) NSDictionary *properties;
- (void)removeAllItems;
- (id)description;
@property(readonly) int numberOfOnlineItems;
@property(readonly) int actualNumberOfOnlineItems;
@property(readonly) unsigned long long numberOfItems;
- (void)removePeopleListItem:(id)arg1;
- (void)addPeopleListItem:(id)arg1;
@property(readonly, retain) NSString *displayName;
@property(readonly, retain) NSArray *members;
@property(readonly, retain) NSArray *visibleMembers;
- (void)dealloc;
- (id)init;

@end

@interface FezPeopleListItem : IMDirectlyObservableObject <NSCopying, IMDirectlyObservableObjectObserver>
{
    id _delegate;
    FezBuddyListPresence *_presence;
    NSDate *_whenStatusChanged;
    FezPeopleListGroup *_group;
    NSAttributedString *_attributedStatusMessage;
    NSString *_statusMessage;
    NSString *_displayName;
    NSDate *_transitionStartTime;
    double _currentTransitionTime;
    unsigned long long _currentStatus;
    unsigned long long _previousStatus;
    int _minutesIdle;
    BOOL _inTransition;
    BOOL _isGroup;
    SOTimer *_idleTimer;
    SOTimerCenter *_timerCenter;
}

+ (id)displayStatusMessageForString:(id)arg1;
+ (id)displayNameForString:(id)arg1;
+ (id)selectors;
+ (id)notifications;
+ (void)clearAllWeakGroupReferencesTo:(id)arg1;
+ (void)clearAllWeakReferencesTo:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) unsigned int sortOrder;
@property(readonly, nonatomic) NSAttributedString *displayStatusMessage;
- (void)clearAttributedStatusMessageCache;
- (long long)compare:(id)arg1 withFezSortParameters:(CDStruct_7495ffd8 *)arg2;
- (long long)_compareIMHandlesWith:(id)arg1 withFezSortParameters:(CDStruct_7495ffd8 *)arg2;
- (double)transitionAlphaTo:(double)arg1 from:(double)arg2 throbs:(unsigned long long)arg3;
- (double)transitionPhase:(double)arg1;
- (void)stopTransition;
- (void)startPulse;
@property(readonly, nonatomic) BOOL isPulseTransition;
- (void)_startPulse;
- (void)_startStatusTransition;
- (void)_startAnimationPulsing:(BOOL)arg1;
@property(readonly, nonatomic) BOOL inStatusTransition;
@property(readonly, nonatomic) BOOL canTransition;
@property(readonly, nonatomic) double timeSinceStatusChanged;
@property(readonly, nonatomic) unsigned long long effectiveStatus;
@property(readonly, nonatomic) unsigned long long currentStatus;
@property(readonly, nonatomic) unsigned long long previousStatus;
- (BOOL)_updateCurrentStatus;
- (void)_setWhenStatusChanged:(id)arg1;
- (id)tooltipString;
@property(readonly, nonatomic) NSMutableAttributedString *displayName;
@property(readonly, nonatomic) IMHandle *imHandle;
@property(readonly, nonatomic) BOOL isIMHandle;
@property(readonly, nonatomic) BOOL isGroup;
@property(readonly, nonatomic) NSString *group;
@property(retain, nonatomic) FezPeopleListGroup *peopleListGroup;
- (void)resumeIdleTimer;
- (void)suspendIdleTimer;
- (void)_idleTimerFired:(id)arg1;
- (void)_clearIdleTimer;
- (void)_createIdleTimerIfNecessary;
- (void)_checkIdleState;
- (BOOL)_currentStatusDiffersFromCache;
- (BOOL)_currentInfoDiffersFromCache;
- (void)_cacheCurrentState;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_presenceCertsChanged:(id)arg1;
- (void)_presenceMobileChanged:(id)arg1;
- (void)_presenceGroupsChanged:(id)arg1;
- (void)_presencePictureChanged:(id)arg1;
- (void)_presenceStatusChanged:(id)arg1;
- (void)_presenceCapabilitiesChanged:(id)arg1;
- (void)_presenceSortOrderChanged:(id)arg1;
- (void)_presenceInfoChanged:(id)arg1;
@property(retain, nonatomic) FezBuddyListPresence *buddyListPresence;
- (void)_unobservePresence:(id)arg1;
- (void)_observePresence:(id)arg1;
- (void)_postNotificationNamed:(id)arg1 userInfo:(id)arg2;
@property(nonatomic) id delegate;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initAsGroup:(id)arg1;
- (id)initWithBuddyListPresence:(id)arg1 inGroup:(id)arg2;
- (id)init;
- (id)accessibilityValueAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;

@end

@interface FezPresence : IMDirectlyObservableObject <IMDirectlyObservableObjectObserver>
{
    IMHandle *_mostAvailableIMHandle;
    NSMutableArray *_imHandles;
    NSMutableSet *_imHandlesSet;
    NSString *_statusMessage;
    BOOL _quiet;
    unsigned long long _previousStatus;
    unsigned long long _status;
}

+ (id)selectors;
+ (id)notifications;
@property(readonly, nonatomic) unsigned long long previousStatus; // @synthesize previousStatus=_previousStatus;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
@property(readonly, retain, nonatomic) IMHandle *mostAvailableIMHandle; // @synthesize mostAvailableIMHandle=_mostAvailableIMHandle;
@property(readonly, retain, nonatomic) NSArray *imHandles; // @synthesize imHandles=_imHandles;
@property(readonly, retain, nonatomic) NSSet *imHandleSet; // @synthesize imHandleSet=_imHandlesSet;
@property(nonatomic) BOOL isQuiet; // @synthesize isQuiet=_quiet;
- (id)description;
- (void)postNotificationNamed:(id)arg1 forIMHandle:(id)arg2;
@property(readonly, nonatomic) double timeSinceStatusChanged;
@property(readonly, nonatomic) double timeSinceWentOffline;
@property(readonly, retain, nonatomic) NSString *mobileDeviceName;
@property(readonly, nonatomic) BOOL isMobile;
@property(readonly, retain, nonatomic) NSString *nameOfStatus;
@property(readonly, retain, nonatomic) NSString *previousStatusMessage;
@property(readonly, retain, nonatomic) NSString *statusMessage;
@property(readonly, retain, nonatomic) NSString *nameAndEmail;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(readonly, retain, nonatomic) NSString *lastName;
@property(readonly, retain, nonatomic) NSString *firstName;
@property(readonly, retain, nonatomic) NSSet *groups;
- (BOOL)containsIMHandle:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfIMHandles;
- (void)removeIMHandle:(id)arg1;
- (BOOL)addIMHandle:(id)arg1;
- (BOOL)canAddIMHandle:(id)arg1;
- (BOOL)_fullRecache;
- (void)_setMostAvailableIMHandle:(id)arg1;
- (void)objectDidPostDirectNotification:(id)arg1;
- (void)_imHandleSortOrderChanged:(id)arg1;
- (void)_imHandleCertsChanged:(id)arg1;
- (void)_imHandleMobileChanged:(id)arg1;
- (void)_imHandleExtraPropsChanged:(id)arg1;
- (void)_imHandleGroupsChanged:(id)arg1;
- (void)_imHandleInfoChanged:(id)arg1;
- (void)_imHandlePictureChanged:(id)arg1;
- (void)_imHandleStatusChanged:(id)arg1;
- (void)_imHandleCapabilitiesChanged:(id)arg1;
- (void)_unobserveIMHandle:(id)arg1;
- (void)_observeIMHandle:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)tooltipString;
- (id)smallStatusIcon;
- (id)picture;
- (BOOL)hasPicture;
- (id)preferredDefaultHandle;

@end

@interface FezServicePeopleListGroup : FezPeopleListGroup
{
    IMServiceImpl *_serviceFilter;
}

+ (id)bonjourGroup;
@property(retain) IMServiceImpl *_serviceFilter; // @synthesize _serviceFilter;
- (CDStruct_b2f7276a)filterForIMHandle:(id)arg1;
- (BOOL)shouldConsumeIMHandle:(id)arg1;
- (BOOL)shouldContainIMHandle:(id)arg1;
- (void)dealloc;
- (id)initWithServiceFilter:(id)arg1;

@end

@interface FezUITemplates : NSObject
{
}

+ (id)smallSpinningProgressIndicatorWithFrame:(struct CGRect)arg1;
+ (id)texturedRoundedButtonWithFrame:(struct CGRect)arg1 title:(id)arg2 sizeToFit:(BOOL)arg3;

@end

@interface AccountTableCellView : NSTableCellView
{
    NSTextField *accountDescriptionLabel;
    NSTextField *accountServiceLabel;
}

@property(retain, nonatomic) NSTextField *accountServiceLabel; // @synthesize accountServiceLabel;
@property(retain, nonatomic) NSTextField *accountDescriptionLabel; // @synthesize accountDescriptionLabel;
- (id)accessibilityValueAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (void)_accountChanged:(id)arg1;
- (void)_updateAccount;
- (void)_updateLabelFormatting;
- (void)_updateLabelText;
- (void)dealloc;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setObjectValue:(id)arg1;

@end

@interface NonFontSmoothingTextFieldCell : NSTextFieldCell
{
}

- (BOOL)allowsLinearMaskOverlayForLayer:(id)arg1;

@end

@interface ChatTableCellView : NSTableCellView <NSMenuDelegate>
{
    NSTrackingArea *_closeButtonTracking;
    NSTimer *_showButtonTimer;
    BOOL _selected;
    BOOL _dimmed;
    BOOL _isHoldingUpdates;
    NSArray *_observedParticipants;
    NSView *_contentsView;
    NSView *_chatInfoView;
    ChatBuddyPicturesView *_chatBuddyPicturesView;
    SOStaticImageView *_unreadIndicator;
    NSButton *_closeButton;
    NSTextField *_lastActivityDateTextField;
    MaskedView *_maskedView;
    NSTextField *_lastMessageTextField;
    SOTypingIndicatorView *_typingIndicator;
    NSLayoutConstraint *_chatInfoViewWidthConstraint;
    NSLayoutConstraint *_contentsViewTrailingConstraint;
    NSLayoutConstraint *_closeButtonVerticalAlignmentConstraint;
    NSLayoutConstraint *_chatTitleTrailingAnchor;
    NSLayoutConstraint *_typingIndicatorWidthConstraint;
    NSLayoutConstraint *_typingIndicatorHeightConstraint;
    NSLayoutConstraint *_typingIndicatorVerticalAlignmentConstraint;
    NSLayoutConstraint *_lastMessageTextFieldTopAlignmentConstraint;
    NSLayoutConstraint *_lastMessageTextFieldBottomAlignmentConstaint;
    InstantMessage *_typingIndicatorMessage;
}

+ (id)_lastMessageBaseSelectedAttributes;
+ (id)_lastMessageBaseAttributes;
+ (struct CGRect)_closeButtonMaskCenter;
+ (id)_closeButtonMask;
+ (double)_maskWidth;
@property(nonatomic) BOOL isHoldingUpdates; // @synthesize isHoldingUpdates=_isHoldingUpdates;
@property(retain, nonatomic) InstantMessage *typingIndicatorMessage; // @synthesize typingIndicatorMessage=_typingIndicatorMessage;
@property(nonatomic, getter=isDimmed) BOOL dimmed; // @synthesize dimmed=_dimmed;
@property(retain) NSLayoutConstraint *lastMessageTextFieldBottomAlignmentConstaint; // @synthesize lastMessageTextFieldBottomAlignmentConstaint=_lastMessageTextFieldBottomAlignmentConstaint;
@property(retain) NSLayoutConstraint *lastMessageTextFieldTopAlignmentConstraint; // @synthesize lastMessageTextFieldTopAlignmentConstraint=_lastMessageTextFieldTopAlignmentConstraint;
@property(retain) NSLayoutConstraint *typingIndicatorVerticalAlignmentConstraint; // @synthesize typingIndicatorVerticalAlignmentConstraint=_typingIndicatorVerticalAlignmentConstraint;
@property(retain) NSLayoutConstraint *typingIndicatorHeightConstraint; // @synthesize typingIndicatorHeightConstraint=_typingIndicatorHeightConstraint;
@property(retain) NSLayoutConstraint *typingIndicatorWidthConstraint; // @synthesize typingIndicatorWidthConstraint=_typingIndicatorWidthConstraint;
@property(retain) NSLayoutConstraint *chatTitleTrailingAnchor; // @synthesize chatTitleTrailingAnchor=_chatTitleTrailingAnchor;
@property(retain) NSLayoutConstraint *closeButtonVerticalAlignmentConstraint; // @synthesize closeButtonVerticalAlignmentConstraint=_closeButtonVerticalAlignmentConstraint;
@property(retain) NSLayoutConstraint *contentsViewTrailingConstraint; // @synthesize contentsViewTrailingConstraint=_contentsViewTrailingConstraint;
@property(retain) NSLayoutConstraint *chatInfoViewWidthConstraint; // @synthesize chatInfoViewWidthConstraint=_chatInfoViewWidthConstraint;
@property(retain) SOTypingIndicatorView *typingIndicator; // @synthesize typingIndicator=_typingIndicator;
@property(retain) NSTextField *lastMessageTextField; // @synthesize lastMessageTextField=_lastMessageTextField;
@property(retain) MaskedView *maskedView; // @synthesize maskedView=_maskedView;
@property(retain) NSTextField *lastActivityDateTextField; // @synthesize lastActivityDateTextField=_lastActivityDateTextField;
@property(retain) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain) SOStaticImageView *unreadIndicator; // @synthesize unreadIndicator=_unreadIndicator;
@property(retain) ChatBuddyPicturesView *chatBuddyPicturesView; // @synthesize chatBuddyPicturesView=_chatBuddyPicturesView;
@property(nonatomic, getter=isSelected) BOOL selected; // @synthesize selected=_selected;
@property(retain) NSView *chatInfoView; // @synthesize chatInfoView=_chatInfoView;
@property(retain) NSView *contentsView; // @synthesize contentsView=_contentsView;
@property(retain, nonatomic) NSArray *observedParticipants; // @synthesize observedParticipants=_observedParticipants;
- (void).cxx_destruct;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)_sendingAccountDidChange:(id)arg1;
- (void)_showCloseButtonTimerFired:(id)arg1;
- (void)_updateCloseButtonVerticalAlignmentConstraint;
- (void)delayedShowCloseButton;
- (BOOL)_chatHasUnreadMessages;
- (void)_updateAll;
- (void)_updateTypingIndicator;
- (void)_updateToolTip;
- (void)_updateDimming;
- (void)_updateParticipants;
- (void)_updateLastMessageDateTime;
- (void)_updateSummary;
- (void)_summaryChanged:(id)arg1;
- (void)_updateChatTitle;
- (void)_updateBuddyPicture;
- (void)_updateChatUnreadIndicator;
- (void)_chatShouldDisplayMessageContents:(id)arg1;
- (void)_participantInfoChanged:(id)arg1;
- (void)_personChanged:(id)arg1;
- (void)_participantMonogramChanged:(id)arg1;
- (void)_participantBuddyPictureChanged:(id)arg1;
- (void)_participantsChanged:(id)arg1;
- (void)_chatControllerWillUnregister:(id)arg1;
- (void)_recentParticipantsChanged:(id)arg1;
- (void)_participantStateChanged:(id)arg1;
- (void)_dateTimeFormatChanged:(id)arg1;
- (void)_chatOverallStatusChanged:(id)arg1;
- (void)_chatControllerShouldDisplayTypingIndicatorDidChange:(id)arg1;
- (void)_chatPropertiesChanged:(id)arg1;
- (void)_chatControllerDisplayNameChanged:(id)arg1;
- (void)_chatUnreadCountChanged:(id)arg1;
- (void)_lastDateDidChange:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)dealloc;
- (void)_anonimizeWindowChanged:(id)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonChatTableCellViewInit;
- (void)_updateBuddyPictureVibrancy;
- (void)_updateTypingIndicatorView;
- (void)closeTab:(id)arg1;
- (id)draggingImageComponents;
@property(readonly, nonatomic) BOOL shouldUseSelectedTextFormat; // @dynamic shouldUseSelectedTextFormat;
@property BOOL showsLastActivityDate; // @dynamic showsLastActivityDate;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setObjectValue:(id)arg1;
@property(nonatomic, getter=isCompact) BOOL compact; // @dynamic compact;
@property(nonatomic) BOOL showsCloseButton; // @dynamic showsCloseButton;
@property(readonly) SOChatDisplayController *chatDisplayController; // @dynamic chatDisplayController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ChatTranscriptSearch : NSObject
{
    NSMutableArray *_resultChats;
    NSCountedSet *_chatsLoading;
    NSMutableDictionary *_searchDictionary;
    struct __MDQuery *_query;
    BOOL _isRunning;
    BOOL _hasMoreResults;
    BOOL _fetchesAllResults;
    long long _resultCount;
    long long _resultIndex;
    NSOperationQueue *_searchResultOperationQueue;
}

+ (id)transcriptSearchWithDictionary:(id)arg1;
+ (id)transcriptSearchWithString:(id)arg1;
- (void)_searchCompleted:(id)arg1;
- (void)_postSearchCompleted;
- (id)_searchStringFromDictionary:(id)arg1;
- (id)_handleQueryFrom:(id)arg1 searchField:(id)arg2;
- (struct __MDQuery *)_newQueryFromSearchString:(id)arg1;
- (BOOL)fetchesAllResults;
- (void)setFetchesAllResults:(BOOL)arg1;
- (BOOL)isRunning;
- (id)chats;
- (void)loadChatsUsingRegistry:(BOOL)arg1 loadExistingOnly:(BOOL)arg2 limit:(unsigned long long)arg3;
- (void)_chatLoaded:(id)arg1;
- (id)allResults;
- (unsigned long long)resultCount;
- (id)nextResult;
- (id)_resultAtIndex:(long long)arg1;
- (void)startSearch:(BOOL)arg1;
- (void)_startSearch:(BOOL)arg1 beforeDate:(id)arg2;
- (void)dealloc;
- (void)_cleanupQuery;
- (id)initWithDictionary:(id)arg1;

@end

@interface ChatTranscriptSearchResult : NSObject
{
    struct __MDItem *_item;
    NSString *_path;
    NSDate *_dateCreated;
    NSArray *_recipients;
    NSString *_roomName;
    NSString *_serviceName;
    NSString *_author;
}

- (BOOL)isProbablyAdHoc;
- (id)serviceName;
- (id)description;
- (id)roomName;
- (id)participants;
- (id)account;
- (id)recipients;
- (id)dateCreated;
- (id)path;
- (void)_retrieveMetadata;
- (void)dealloc;
- (id)initWithItem:(struct __MDItem *)arg1 dateCreated:(id)arg2 recipients:(id)arg3 roomName:(id)arg4 serviceName:(id)arg5 author:(id)arg6;

@end

@interface ChatWindowSplitView : NSSplitView
{
}

- (id)dividerColor;
- (BOOL)performKeyEquivalent:(id)arg1;

@end

@interface VibrantView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)allowsVibrancy;

@end

@interface ChatTableRowView : NSTableRowView
{
    VibrantView *_bottomSeparatorView;
}

+ (double)rightSeparatorMargin;
+ (double)leftSeparatorMargin;
+ (id)_metricsDictionary;
+ (id)separatorColor;
@property(retain) VibrantView *bottomSeparatorView; // @synthesize bottomSeparatorView=_bottomSeparatorView;
- (void).cxx_destruct;
- (void)didAddSubview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setNextRowSelected:(BOOL)arg1;
- (BOOL)isEmphasized;
- (id)initWithCoder:(id)arg1;
- (void)_commonInit;

@end

@interface BuddyListController : NSObject <PeopleListDelegate>
{
    PeopleList *_peopleList;
    NSArray *_representedAccounts;
    IMPeople *_sourcePeople;
    NSMutableDictionary *_cachedAccountToGroupList;
    AnimatingTableView *_buddyList;
    OptionalScrollView *_scrollView;
    NSArray *_savedGroupsSortOrder;
    NSMenu *_groupContextualMenu;
    NSString *_groupForContextualMenu;
    BOOL _isUnifiedBuddyList;
    BOOL _showsBuddyPictures;
    BOOL _showsAudioIcon;
    BOOL _showsVideoIcon;
    unsigned int _supportsOfflineToggle:1;
    unsigned int _supportsGroups:1;
    unsigned int _supportsEditing:1;
    unsigned int _supportsChild:1;
    unsigned int _willRefresh:1;
}

+ (id)identifiedPref:(id)arg1;
+ (id)defaultValueForPrefKey:(id)arg1;
@property(nonatomic) BOOL isUnifiedBuddyList; // @synthesize isUnifiedBuddyList=_isUnifiedBuddyList;
@property(readonly, retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) IMPeople *sourcePeople; // @synthesize sourcePeople=_sourcePeople;
@property(retain, nonatomic) NSArray *representedAccounts; // @synthesize representedAccounts=_representedAccounts;
@property(nonatomic) BOOL showsVideoIcon; // @synthesize showsVideoIcon=_showsVideoIcon;
@property(nonatomic) BOOL showsAudioIcon; // @synthesize showsAudioIcon=_showsAudioIcon;
@property(nonatomic) BOOL showsBuddyPictures; // @synthesize showsBuddyPictures=_showsBuddyPictures;
- (void)peopleListSelectedItemInfoChanged:(id)arg1;
- (id)peopleList:(id)arg1 menuForGroup:(id)arg2;
- (BOOL)peopleList:(id)arg1 forceDeleteGroup:(id)arg2;
- (BOOL)peopleList:(id)arg1 deletePeople:(id)arg2;
- (void)_confirmDeletionOfPeople:(id)arg1 withContextInfo:(id)arg2;
- (BOOL)_deleteBuddies:(id)arg1;
- (BOOL)peopleList:(id)arg1 pastePeople:(id)arg2 intoGroup:(id)arg3 atLocation:(long long)arg4;
- (BOOL)_doAddPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (id)groupsToAddTo;
- (BOOL)peopleList:(id)arg1 people:(id)arg2 draggedFromGroups:(id)arg3 toGroup:(id)arg4 atLocation:(unsigned long long)arg5 copying:(BOOL)arg6;
- (void)peopleList:(id)arg1 addPersonWithoutID:(id)arg2 toGroup:(id)arg3;
- (void)peopleList:(id)arg1 setGroupsSortOrder:(id)arg2;
- (id)groupsWithCapability:(id)arg1;
- (id)groupsWithCapability:(id)arg1 fromGroups:(id)arg2;
- (void)setGroupsSortOrder:(id)arg1;
- (void)_setSavedGroupsSortOrder:(id)arg1;
- (BOOL)_shouldUseSaveSortOrder;
- (id)peopleList:(id)arg1 filterIMHandleFromPasteboard:(id)arg2;
- (void)peopleList:(id)arg1 deleteGroup:(id)arg2;
- (BOOL)canModifyBuddiesInPeopleList:(id)arg1;
- (BOOL)peopleList:(id)arg1 canRemoveRows:(id)arg2;
- (id)peopleList:(id)arg1 addablePeople:(id)arg2;
- (double)peopleList:(id)arg1 alphaForStatus:(unsigned long long)arg2;
- (id)peopleList:(id)arg1 alternateNameTextForIMHandle:(id)arg2;
- (id)peopleList:(id)arg1 alternateStatusTextForIMHandle:(id)arg2;
- (void)_accountCapsChanged:(id)arg1;
- (void)buddyListChanged:(id)arg1;
- (void)_arrangesByGroupChanged;
- (void)_serviceGroupsChanged:(id)arg1;
- (void)_activeAccountsChanged:(id)arg1;
- (void)refreshList;
- (void)_refreshList;
- (id)peopleListItems;
- (id)window;
- (id)_imHandlesFromHandle:(id)arg1 inGroup:(id)arg2;
- (BOOL)supportsGroups;
- (BOOL)supportsEditing;
- (BOOL)justLoggedIn;
- (id)groupProperties;
- (id)mergedGroupProperties:(id)arg1;
- (id)_groupListForAccount:(id)arg1;
- (id)groups;
- (BOOL)representsAccount:(id)arg1;
- (void)setSearchString:(id)arg1;
- (void)_updateViewOptionMaks;
- (void)_configureUIForAccount;
- (void)_setupUI;
- (void)dealloc;
- (id)initWithAccounts:(id)arg1;
- (id)initAsUnifiedBuddyList;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MessageTracerUtil : NSObject
{
}

+ (BOOL)submitPrefsIfNecessary;
+ (void)_logWeeklyStats;
+ (void)_logServicesUsed;
+ (BOOL)_getAndClearBoolInPreference:(id)arg1;
+ (long long)_getAndClearIntInPreference:(id)arg1;
+ (void)incrementNumWithPreferenceKey:(id)arg1;
+ (void)enablePrefForServiceName:(id)arg1;
+ (void)_enableServicePrefForKey:(id)arg1;
+ (void)logInMessageTracerOutOfOrder:(int)arg1;
+ (void)logInMessageTracerStyle:(id)arg1 groupStyle:(id)arg2 incomingBGColor:(id)arg3 outgoingBGColor:(id)arg4 incomingFont:(id)arg5 outgoingFont:(id)arg6 saveHistory:(id)arg7;
+ (void)logInMessageTracerWithDomain:(id)arg1 withResult:(const char *)arg2 withSignature:(id)arg3 withFirstValue:(int)arg4 withSecondValue:(int)arg5;
+ (void)logInMessageTracerWithDomain:(id)arg1 withResult:(const char *)arg2 withSignature:(id)arg3 withFirstValue:(int)arg4;
+ (void)logInMessageTracerWithDomain:(id)arg1 withResult:(const char *)arg2 withSignature:(id)arg3;
+ (id)domainWithName:(id)arg1;
+ (id)_version;
+ (id)_bundleID;

@end

@interface AddBuddyNameHelper : NSObject <NSTextFieldDelegate, ServicePopUpDelegate>
{
    NSWindow *_window;
    NSTextField *_nameField;
    NSArray *_sortedCurrentAccountHandles;
    NSMutableSet *_currentAccountHandles;
    NSMutableSet *_currentIChatBuddies;
    IMAccount *_currentAccount;
    NSString *_previousSubstring;
    IMHandle *_currentHandle;
    BOOL _isUserEdited;
}

@property(readonly) BOOL isUserEdited; // @synthesize isUserEdited=_isUserEdited;
- (void)servicePopUpSelectionDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (void)changedToAccount:(id)arg1;
- (id)currentAccountHandles;
- (id)currentHandle;
- (void)clearTextField;
- (void)initializeHandleList;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HorizontalFadingLine : NSView
{
    NSColor *_darkLineCenterColor;
    NSColor *_darkLineEdgeColor;
    NSColor *_whiteCenterColor;
    NSColor *_whiteEdgeColor;
    NSColor *_softWhiteCenterColor;
    NSColor *_softWhiteEdgeColor;
    double _fadeoutWidth;
    NSColor *_brightLineCenterColor;
    NSColor *_brightLineEdgeColor;
    CALayer *_brightLineLayer;
    CALayer *_darkLineLayer;
}

+ (id)defaultSoftBrightLineEdgeColor;
+ (id)defaultSoftBrightLineCenterColor;
+ (id)defaultBrightLineEdgeColor;
+ (id)defaultBrightLineCenterColor;
+ (id)defaultDarkLineEdgeColor;
+ (id)defaultDarkLineCenterColor;
@property __weak CALayer *darkLineLayer; // @synthesize darkLineLayer=_darkLineLayer;
@property __weak CALayer *brightLineLayer; // @synthesize brightLineLayer=_brightLineLayer;
@property(retain) NSColor *brightLineEdgeColor; // @synthesize brightLineEdgeColor=_brightLineEdgeColor;
@property(retain) NSColor *brightLineCenterColor; // @synthesize brightLineCenterColor=_brightLineCenterColor;
@property(retain) NSColor *darkLineEdgeColor; // @synthesize darkLineEdgeColor=_darkLineEdgeColor;
@property(retain) NSColor *darkLineCenterColor; // @synthesize darkLineCenterColor=_darkLineCenterColor;
@property double fadeoutWidth; // @synthesize fadeoutWidth=_fadeoutWidth;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_imageWithCenterColor:(id)arg1 edgeColor:(id)arg2 fadeOutWidth:(double)arg3;
@property double brightLineAlpha; // @dynamic brightLineAlpha;
@property BOOL showsDarkLine; // @dynamic showsDarkLine;

// Remaining properties
@property(nonatomic, getter=isFlipped) BOOL flipped;

@end

@interface RecipientBarViewController : SORecipientBarViewController
{
}

- (void)viewDidLoad;
- (double)baseRecipientActionControlOffset;

@end

@interface ChatController : NSObject
{
    Chat *_chat;
    NSMutableArray *_searchResultChatItems;
    BOOL _retrievedAllDBResults;
    unsigned long long _messagesRequested;
    NSString *_queryID;
    double _queryStartTime;
    BOOL _hasRemainingHistory;
    ChatTranscriptSearch *_historySearch;
    ChatTranscriptSearchResult *_currentHistorySearchResult;
    double _totalSearchInsertTime;
    BOOL _isChatRefreshing;
    BOOL _isDeletingHistory;
    BOOL _hasQueuedLeave;
    BOOL _disableReadReceiptsForAlert;
    BOOL _finishedInitialLoad;
    BOOL _shouldPurgeMessages;
    BOOL _isChatDocument;
    BOOL _isLoadingSearchResults;
    BOOL _summaryFromMe;
    BOOL _hasNewReadMessages;
    BOOL _isPromptingUserToEnableReadReceipts;
    BOOL _isShowingSearchResults;
    BOOL _refreshChatOnLastChange;
    id _registrationBlock;
    double _lastQueryCompletionTime;
    unsigned long long _numberMessagesToKeep;
    double _startTimeToChangeChats;
    double _searchResultStartLoadTime;
    NSString *_searchString;
    InstantMessage *_lastFinishedMessage;
    InstantMessage *_lastRemoteMessage;
    InstantMessage *_typingIndicatorMessage;
    NSString *_summary;
    InstantMessage *_invitationReplyMessage;
    NSMutableArray *_recentParticipants;
    long long _lastSavedMessageID;
    NSString *_lastSavedMessageGUID;
    double _lastTimeInterval;
    unsigned long long _messagesLoaded;
    NSMutableIndexSet *_searchResultIndexes;
    unsigned long long _currentSearchResultNumber;
    NSArray *_displayedSearchResultItems;
    double _lastAutoreplyTimeInterval;
    long long _lastSeenMessageID;
}

+ (id)resurrectChatControllerFromInfoDictionary:(id)arg1;
+ (void)sendOutOfOrderTimes;
+ (id)chatControllerForChat:(id)arg1;
+ (id)registerChatControllerForChat:(id)arg1;
+ (void)unregisterChatDocChatWithGUID:(id)arg1;
+ (void)registerChatDocChat:(id)arg1;
+ (void)initialize;
+ (void)_handleChatRegistryLoaded:(id)arg1;
+ (void)_handleChatDidSave:(id)arg1;
+ (void)_handleIMChatDidUnregister:(id)arg1;
+ (void)_handleIMChatWillUnregister:(id)arg1;
+ (void)_handleIMChatDidRegister:(id)arg1;
+ (void)setLastSavedMessageID:(long long)arg1;
@property(nonatomic) long long lastSeenMessageID; // @synthesize lastSeenMessageID=_lastSeenMessageID;
@property(nonatomic) double lastAutoreplyTimeInterval; // @synthesize lastAutoreplyTimeInterval=_lastAutoreplyTimeInterval;
@property(nonatomic) BOOL refreshChatOnLastChange; // @synthesize refreshChatOnLastChange=_refreshChatOnLastChange;
@property(retain, nonatomic) NSArray *displayedSearchResultItems; // @synthesize displayedSearchResultItems=_displayedSearchResultItems;
@property(nonatomic) unsigned long long currentSearchResultNumber; // @synthesize currentSearchResultNumber=_currentSearchResultNumber;
@property(retain, nonatomic) NSMutableIndexSet *searchResultIndexes; // @synthesize searchResultIndexes=_searchResultIndexes;
@property(nonatomic) BOOL isShowingSearchResults; // @synthesize isShowingSearchResults=_isShowingSearchResults;
@property(nonatomic) unsigned long long messagesLoaded; // @synthesize messagesLoaded=_messagesLoaded;
@property BOOL isPromptingUserToEnableReadReceipts; // @synthesize isPromptingUserToEnableReadReceipts=_isPromptingUserToEnableReadReceipts;
@property(nonatomic) BOOL hasNewReadMessages; // @synthesize hasNewReadMessages=_hasNewReadMessages;
@property(nonatomic) double lastTimeInterval; // @synthesize lastTimeInterval=_lastTimeInterval;
@property(retain, nonatomic) NSString *lastSavedMessageGUID; // @synthesize lastSavedMessageGUID=_lastSavedMessageGUID;
@property(nonatomic) long long lastSavedMessageID; // @synthesize lastSavedMessageID=_lastSavedMessageID;
@property(retain, nonatomic) NSMutableArray *recentParticipants; // @synthesize recentParticipants=_recentParticipants;
@property(retain, nonatomic) InstantMessage *invitationReplyMessage; // @synthesize invitationReplyMessage=_invitationReplyMessage;
@property(nonatomic) BOOL summaryFromMe; // @synthesize summaryFromMe=_summaryFromMe;
@property(retain, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) InstantMessage *typingIndicatorMessage; // @synthesize typingIndicatorMessage=_typingIndicatorMessage;
@property(readonly) InstantMessage *lastRemoteMessage; // @synthesize lastRemoteMessage=_lastRemoteMessage;
@property(readonly) InstantMessage *lastFinishedMessage; // @synthesize lastFinishedMessage=_lastFinishedMessage;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(nonatomic) BOOL isLoadingSearchResults; // @synthesize isLoadingSearchResults=_isLoadingSearchResults;
@property(nonatomic) double searchResultStartLoadTime; // @synthesize searchResultStartLoadTime=_searchResultStartLoadTime;
@property(nonatomic) BOOL isChatDocument; // @synthesize isChatDocument=_isChatDocument;
@property(nonatomic) double startTimeToChangeChats; // @synthesize startTimeToChangeChats=_startTimeToChangeChats;
@property(nonatomic) unsigned long long numberMessagesToKeep; // @synthesize numberMessagesToKeep=_numberMessagesToKeep;
@property(nonatomic) BOOL shouldPurgeMessages; // @synthesize shouldPurgeMessages=_shouldPurgeMessages;
@property(nonatomic) double lastQueryCompletionTime; // @synthesize lastQueryCompletionTime=_lastQueryCompletionTime;
@property(nonatomic) BOOL finishedInitialLoad; // @synthesize finishedInitialLoad=_finishedInitialLoad;
@property(nonatomic) BOOL disableReadReceiptsForAlert; // @synthesize disableReadReceiptsForAlert=_disableReadReceiptsForAlert;
@property(retain, nonatomic) id registrationBlock; // @synthesize registrationBlock=_registrationBlock;
@property(nonatomic) BOOL hasQueuedLeave; // @synthesize hasQueuedLeave=_hasQueuedLeave;
@property(nonatomic) BOOL isDeletingHistory; // @synthesize isDeletingHistory=_isDeletingHistory;
@property(readonly) BOOL isChatRefreshing; // @synthesize isChatRefreshing=_isChatRefreshing;
@property(readonly, nonatomic) Chat *chat; // @synthesize chat=_chat;
- (void).cxx_destruct;
- (void)_autoreplyToMessageIfNecessary:(id)arg1;
- (void)_sendAutoreplyMessageFor:(id)arg1;
- (void)processMessageForActionsIfNecessary:(id)arg1 silently:(BOOL)arg2;
- (void)_scanMessageForMyAddressableNames:(id)arg1;
- (void)_updateRecentParticipants;
- (void)setLastSavedMessage:(id)arg1;
- (id)persistentChatControllerInfo;
- (void)saveChatProperties;
@property(readonly, nonatomic) BOOL canBeRestored; // @dynamic canBeRestored;
- (BOOL)isActive;
- (void)_updateSummaryAndDateWithMessage:(id)arg1;
- (id)updateSummaryAndDateWithSearchResult:(id)arg1 forward:(BOOL)arg2;
- (void)updateSummaryAndDateWithLastMessage;
- (void)_loadLastSavedMessage;
@property(retain, nonatomic) NSDate *lastDate; // @dynamic lastDate;
- (void)_markAllMessagesAsRead:(BOOL)arg1;
- (void)markAllMessagesAsRead;
- (BOOL)willMarkAsRead;
- (BOOL)_screenIsLocked;
- (BOOL)_isIdle;
- (BOOL)_needsMarkAsRead;
- (id)chatItems;
- (id)transcriptChatItemForGUID:(id)arg1;
- (void)deleteAllHistory;
- (void)_postDeleteFinished;
- (void)purgeMessages:(unsigned long long)arg1;
- (BOOL)retrievedAllDBResults;
- (BOOL)hasRemainingHistory;
- (id)nextHistoryResult;
- (id)currentHistoryResult;
- (void)refreshHistorySearch:(BOOL)arg1;
- (void)resetHistory;
- (void)leaveChat;
- (void)rejectInvitation;
- (void)acceptInvitation;
- (void)_chatJoinStateChanged:(id)arg1;
- (void)_accountLoginStatusChanged:(id)arg1;
- (void)_skipAutoJoin;
- (void)_chatLoaded:(id)arg1;
- (id)description;
- (void)clearSearchResults;
- (void)finishSearchResultLoad;
- (unsigned long long)_indexOfSearchResult:(unsigned long long)arg1;
- (void)_refreshSearchResultIndexes;
@property(readonly, nonatomic) unsigned long long searchResultCount;
- (void)startSearchResultLoad;
- (void)insertSearchResults:(id)arg1;
- (void)_chatItemsLoadedSuccessfully:(BOOL)arg1;
- (void)_chatItemsLoaded:(id)arg1;
- (void)_performQueryForAdditionalItems:(unsigned long long)arg1;
- (void)_chatItemsChanged:(id)arg1;
- (void)_messageSent:(id)arg1;
@property(readonly, nonatomic) BOOL hasPerformedInitialLoad; // @dynamic hasPerformedInitialLoad;
- (void)_refreshChat;
- (void)_loadPreviousMessages:(unsigned long long)arg1 isInitialLoad:(BOOL)arg2;
- (void)loadInitialChatItems:(unsigned long long)arg1;
- (void)loadPreviousMessages:(unsigned long long)arg1;
- (void)_postChatControllerRegistered;
- (void)invalidate;
- (void)dealloc;
- (id)initWithChat:(id)arg1;
@property(readonly) InstantMessage *lastFinishedOrRemoteMessage; // @dynamic lastFinishedOrRemoteMessage;

@end

@interface EngravedTextFieldCell : NSTextFieldCell
{
    BOOL _dirtyCaches;
    EngravedTextFieldCell *_engravedCell;
    EngravedTextFieldCell *_maskCell;
    NSColor *_engravingColor;
    struct CGSize _engravingOffset;
}

@property(copy, nonatomic) NSColor *engravingColor; // @synthesize engravingColor=_engravingColor;
@property(nonatomic) struct CGSize engravingOffset; // @synthesize engravingOffset=_engravingOffset;
- (void).cxx_destruct;
- (void)_updateCaches;
- (void)_clearCaches;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setAttributedStringValue:(id)arg1;

@end

@interface UnifiedChatWindowController : ChatWindowController <NSSplitViewDelegate, NSUserNotificationCenterDelegate, NSMenuDelegate, IMSystemMonitorListener>
{
    BOOL _searchCancelledViaButton;
    UnifiedChatListViewController *_unifiedChatListViewController;
    NSString *_deferredSelectedGUID;
    ChatWindowSplitViewController *_splitViewController;
    PlacardView *_noMessageSelectedPlacard;
    SONewChatDisplayController *_zeroChatDisplayController;
    id _queuedChatDisplayControllerObserver;
    NSMapTable *_displayCompletionBlockMap;
    NSAlert *_deliveryFailureAlert;
    id _undoObserver;
    id _selectItemObserver;
}

+ (void)restoreUnifiedChatWindowContents;
+ (void)restoreUnifiedChatWindowGeometry;
+ (void)restoreUnifiedChatWindowFrame;
+ (void)saveUnifiedChatWindow;
+ (id)_allUnifiedChatWindowControllers;
+ (id)sharedController;
+ (void)encodeSharedWindowRestorableContentStateWithCoder:(id)arg1;
@property(retain, nonatomic) id selectItemObserver; // @synthesize selectItemObserver=_selectItemObserver;
@property(retain, nonatomic) id undoObserver; // @synthesize undoObserver=_undoObserver;
@property(retain, nonatomic) NSAlert *deliveryFailureAlert; // @synthesize deliveryFailureAlert=_deliveryFailureAlert;
@property(retain, nonatomic) NSMapTable *displayCompletionBlockMap; // @synthesize displayCompletionBlockMap=_displayCompletionBlockMap;
@property(retain, nonatomic) id queuedChatDisplayControllerObserver; // @synthesize queuedChatDisplayControllerObserver=_queuedChatDisplayControllerObserver;
@property(retain, nonatomic) SONewChatDisplayController *zeroChatDisplayController; // @synthesize zeroChatDisplayController=_zeroChatDisplayController;
@property(retain, nonatomic) PlacardView *noMessageSelectedPlacard; // @synthesize noMessageSelectedPlacard=_noMessageSelectedPlacard;
@property(retain, nonatomic) ChatWindowSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(copy, nonatomic) NSString *deferredSelectedGUID; // @synthesize deferredSelectedGUID=_deferredSelectedGUID;
@property(retain, nonatomic) UnifiedChatListViewController *unifiedChatListViewController; // @synthesize unifiedChatListViewController=_unifiedChatListViewController;
- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;
- (void)screenUnlocked;
- (void)screenSaverDidStop;
- (void)_systemBecameActive:(id)arg1;
- (void)_clearUnreadIfNeeded;
- (BOOL)validateMenuItem:(id)arg1;
- (void)saveDateAndSummaries;
- (void)clickFadeView:(id)arg1;
- (void)contextCloseOtherTabs:(id)arg1;
- (void)sendFile:(id)arg1;
- (void)searchInSpotlight:(id)arg1;
- (void)requestValidation:(id)arg1;
- (void)showSelectedBuddyProfile:(id)arg1;
- (void)showSelectedBuddyInfo:(id)arg1;
- (void)showInBuddyList:(id)arg1;
- (void)addToAddressBook:(id)arg1;
- (void)showInAddressBook:(id)arg1;
- (void)block:(id)arg1;
- (void)inviteToARDAsServer:(id)arg1;
- (void)inviteToARDAsClient:(id)arg1;
- (void)inviteToAudioChat:(id)arg1;
- (void)inviteToVideoChat:(id)arg1;
- (void)addABuddy:(id)arg1;
- (void)closeChatDisplayController:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)find:(id)arg1;
- (void)closeSelectedConversation:(id)arg1;
- (void)deleteSelectedConversationNoPrompt:(id)arg1;
- (void)deleteSelectedConversation:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)choosePerson:(id)arg1;
- (void)openStandaloneChatWindow:(id)arg1;
- (void)gotoPreviousChat:(id)arg1;
- (void)gotoNextChat:(id)arg1;
- (void)_messageDeliveryFailure:(id)arg1;
- (void)_chatDisplayControllerRecipientsDidChange:(id)arg1;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (void)selectDeferredChat;
- (void)highlightChatItem:(id)arg1 inChat:(id)arg2;
- (void)displayChatWithChatGUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)displayChatWithChatGUID:(id)arg1;
- (void)displayChatDisplayControllerAtIndex:(unsigned long long)arg1;
- (void)displayChatDisplayController:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)existingChatDisplayControllerForChat:(id)arg1;
- (BOOL)containsConversation:(id)arg1;
- (void)replaceChatDisplayController:(id)arg1 withChatDisplayController:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_closeAndSaveChatDisplayControllers:(id)arg1;
- (void)deleteChatDisplayController:(id)arg1;
- (void)tryToCloseChatDisplayControllers:(id)arg1;
- (void)tryToCloseChatDisplayController:(id)arg1;
- (void)_closeConversation:(id)arg1;
- (void)restoreChatWithInfo:(id)arg1;
- (void)_removeUndoObserver;
- (id)windowTitle;
- (void)chatDisplayControllerDidChange;
- (void)chatDisplayControllerWillChange:(id)arg1;
- (void)_unifiedChatListContentsControllerSelectionDidChange:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)showUnsentMessages;
- (id)informativeTextForUnsentMessageCount:(unsigned long long)arg1;
- (id)alertTextForWindowClosingSheet;
- (unsigned long long)unsentMessageCount;
- (unsigned long long)unreadMessageCount;
- (void)cancelOperation:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)_makeInputLineFirstResponder;
- (void)windowDidLoad;
- (void)_loadWindow;
- (void)dealloc;
- (id)init;
- (void)_setupZeroChatViewMode;
- (void)_setChatDisplayCompletionBlock:(CDUnknownBlockType)arg1 forChatDisplayController:(id)arg2;
- (void)addLoadAndDisplayChatDisplayControllerForChatWithHandles:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)addAndDisplayChatDisplayControllerForNewChatWithHandles:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)openStandaloneWindowForChatController:(id)arg1;
- (void)_finishTALRestore;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)invalidateRestorableState;
- (void)restoreContentStateWithCoder:(id)arg1;
- (void)encodeRestorableContentStateWithCoder:(id)arg1;
- (void)setChatListWidth:(double)arg1;
- (double)chatListWidth;
- (void)setChatListHidden:(BOOL)arg1 animated:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_updateUIForChatListHiddenState;
@property(nonatomic) BOOL chatListHidden; // @dynamic chatListHidden;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SingleChatWindowController : ChatWindowController
{
    ChatMiniwindowController *_miniwindowController;
}

+ (id)allSingleChatWindowControllers;
+ (id)singleChatWindowControllerForChatController:(id)arg1 forceCreate:(BOOL)arg2;
+ (id)_chatToSingleChatWindowControllerDictionary;
+ (id)_allSingleChatWindowControllers;
@property(retain, nonatomic) ChatMiniwindowController *miniwindowController; // @synthesize miniwindowController=_miniwindowController;
- (void).cxx_destruct;
- (void)find:(id)arg1;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)restoreContentStateWithCoder:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)chatDisplayControllerDidChange;
- (void)chatDisplayControllerWillChange:(id)arg1;
- (void)_completedInitialLoad:(id)arg1;
- (void)_unregisterChatController:(id)arg1;
- (void)_registerChatController:(id)arg1;
- (void)dealloc;
- (void)windowDidLoad;
- (id)initWithChatController:(id)arg1;
- (id)init;
- (void)_commonSingleChatWindowControllerInit;

@end

@interface MaskedImageView : NSImageView
{
    BOOL _forcesVibrancy;
    CDUnknownBlockType _maskDrawingBlock;
}

@property(nonatomic) BOOL forcesVibrancy; // @synthesize forcesVibrancy=_forcesVibrancy;
@property(copy, nonatomic) CDUnknownBlockType maskDrawingBlock; // @synthesize maskDrawingBlock=_maskDrawingBlock;
- (void).cxx_destruct;
- (BOOL)allowsVibrancy;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;

@end

@interface ChatBuddyPicturesView : NSView
{
    BOOL _forcesVibrancy;
    NSArray *_monogramImages;
    long long _backgroundStyle;
    NSArray *_internalConstraints;
}

@property(retain) NSArray *internalConstraints; // @synthesize internalConstraints=_internalConstraints;
@property(nonatomic) BOOL forcesVibrancy; // @synthesize forcesVibrancy=_forcesVibrancy;
@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
@property(retain, nonatomic) NSArray *monogramImages; // @synthesize monogramImages=_monogramImages;
- (void).cxx_destruct;
- (void)dealloc;
- (void)viewDidMoveToWindow;
- (void)updateConstraints;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_updateBuddyPictureVibrancy;
- (void)_windowStateDidChange:(id)arg1;
- (void)_updateEnabledState;
- (void)_invalidateInternalConstraints;
@property(readonly) double pictureScaling;
@property(readonly) double monogramDiameter; // @dynamic monogramDiameter;
@property(nonatomic) unsigned long long displayedPictureCount; // @dynamic displayedPictureCount;

@end

@interface ChatTableView : NSTableView
{
}

- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)_drawGridLinesInClipRect:(struct CGRect)arg1;
- (BOOL)validateProposedFirstResponder:(id)arg1 forEvent:(id)arg2;
- (BOOL)becomeFirstResponder;

@end

@interface UnifiedChatListViewController : NSViewController <NSMenuDelegate, NSTableViewDelegate, NSTableViewDataSource, OrderedSetControllerDelegate, NSTextFieldDelegate>
{
    BOOL _showNoSelectionLabel;
    BOOL _compact;
    BOOL _automaticallySortsChats;
    BOOL _shouldSuppressInputLineBecomingKey;
    BOOL _searchContents;
    BOOL _filterChats;
    BOOL _isDelayingSearch;
    NSMutableSet *_searchResults;
    NSTableView *_chatTable;
    NSSearchField *_searchField;
    NSProgressIndicator *_searchProgress;
    OrderedSetController *_contentsController;
    NSArray *_draggedChatDisplayControllers;
    NSViewController *_emptyChatListTabViewController;
    NSPopover *_chatInfoPopover;
    NSButton *_startNewChatButton;
    ChatWindowAccountStatusViewController *_accountStatusViewController;
    NSView *_accountStatusContainerView;
    NSLayoutConstraint *_accountStatusContainerViewHeightConstraint;
    SOHeaderView *_chatListHeader;
    NSView *_chatListHeaderSeparator;
    NSLayoutConstraint *_topMarginConstraint;
    NSLayoutConstraint *_minWidthConstraint;
    NSLayoutConstraint *_maxWidthConstraint;
    NSLayoutConstraint *_compactWidthConstraint;
    NSLayoutConstraint *_startNewChatButtonWidth;
    NSLayoutConstraint *_startNewChatButtonTrailingMargin;
    NSLayoutConstraint *_startNewChatButtonCompactAlignment;
    ChatTranscriptSearch *_chatTranscriptSearch;
    NSString *_lastSearchedString;
    id _previouslySelectedChat;
}

+ (void)initialize;
+ (void)_handleChatControllerWillUnregister:(id)arg1;
+ (void)_handleChatControllerRegistered:(id)arg1;
+ (void)_createViewForChatIfNeeded:(id)arg1;
+ (_Bool)_automaticallyCreateChatDisplayControllers;
+ (double)compactWidth;
+ (double)minWidth;
+ (double)maxWidth;
+ (double)defaultChatListWidth;
+ (void)createChatViewsIfNeeded;
+ (void)endManualChatListChanges;
+ (void)beginManualChatListChanges;
+ (id)sharedController;
@property(nonatomic) BOOL isDelayingSearch; // @synthesize isDelayingSearch=_isDelayingSearch;
@property(retain, nonatomic) id previouslySelectedChat; // @synthesize previouslySelectedChat=_previouslySelectedChat;
@property(copy, nonatomic) NSString *lastSearchedString; // @synthesize lastSearchedString=_lastSearchedString;
@property(retain, nonatomic) ChatTranscriptSearch *chatTranscriptSearch; // @synthesize chatTranscriptSearch=_chatTranscriptSearch;
@property(nonatomic) BOOL filterChats; // @synthesize filterChats=_filterChats;
@property(nonatomic) BOOL searchContents; // @synthesize searchContents=_searchContents;
@property(retain, nonatomic) NSLayoutConstraint *startNewChatButtonCompactAlignment; // @synthesize startNewChatButtonCompactAlignment=_startNewChatButtonCompactAlignment;
@property(retain, nonatomic) NSLayoutConstraint *startNewChatButtonTrailingMargin; // @synthesize startNewChatButtonTrailingMargin=_startNewChatButtonTrailingMargin;
@property(nonatomic) __weak NSLayoutConstraint *startNewChatButtonWidth; // @synthesize startNewChatButtonWidth=_startNewChatButtonWidth;
@property(retain, nonatomic) NSLayoutConstraint *compactWidthConstraint; // @synthesize compactWidthConstraint=_compactWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *maxWidthConstraint; // @synthesize maxWidthConstraint=_maxWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *minWidthConstraint; // @synthesize minWidthConstraint=_minWidthConstraint;
@property(retain) NSLayoutConstraint *topMarginConstraint; // @synthesize topMarginConstraint=_topMarginConstraint;
@property(retain) NSView *chatListHeaderSeparator; // @synthesize chatListHeaderSeparator=_chatListHeaderSeparator;
@property(retain) SOHeaderView *chatListHeader; // @synthesize chatListHeader=_chatListHeader;
@property(retain, nonatomic) NSLayoutConstraint *accountStatusContainerViewHeightConstraint; // @synthesize accountStatusContainerViewHeightConstraint=_accountStatusContainerViewHeightConstraint;
@property(retain, nonatomic) NSView *accountStatusContainerView; // @synthesize accountStatusContainerView=_accountStatusContainerView;
@property(retain, nonatomic) ChatWindowAccountStatusViewController *accountStatusViewController; // @synthesize accountStatusViewController=_accountStatusViewController;
@property(retain, nonatomic) NSButton *startNewChatButton; // @synthesize startNewChatButton=_startNewChatButton;
@property(retain, nonatomic) NSPopover *chatInfoPopover; // @synthesize chatInfoPopover=_chatInfoPopover;
@property(retain, nonatomic) NSViewController *emptyChatListTabViewController; // @synthesize emptyChatListTabViewController=_emptyChatListTabViewController;
@property(retain) NSArray *draggedChatDisplayControllers; // @synthesize draggedChatDisplayControllers=_draggedChatDisplayControllers;
@property BOOL shouldSuppressInputLineBecomingKey; // @synthesize shouldSuppressInputLineBecomingKey=_shouldSuppressInputLineBecomingKey;
@property(readonly, nonatomic) OrderedSetController *contentsController; // @synthesize contentsController=_contentsController;
@property(nonatomic) BOOL automaticallySortsChats; // @synthesize automaticallySortsChats=_automaticallySortsChats;
@property(nonatomic, getter=isCompact) BOOL compact; // @synthesize compact=_compact;
@property(nonatomic) BOOL showNoSelectionLabel; // @synthesize showNoSelectionLabel=_showNoSelectionLabel;
@property(retain, nonatomic) NSProgressIndicator *searchProgress; // @synthesize searchProgress=_searchProgress;
@property(retain, nonatomic) NSSearchField *searchField; // @synthesize searchField=_searchField;
@property(retain, nonatomic) NSTableView *chatTable; // @synthesize chatTable=_chatTable;
- (void).cxx_destruct;
- (void)_setupPopoverToDisplayChatTableCellView:(id)arg1;
- (void)_updateCompactState:(BOOL)arg1 forChatTableCellView:(id)arg2;
- (void)_setupManualChatSorting;
- (void)_setupAutomaticChatSorting;
- (id)_imHandlesSuitableForInviteToChat:(id)arg1 fromPasteboard:(id)arg2;
- (id)_imHandlesFromPasteboard:(id)arg1;
- (void)_updateEmptyChatListTabView;
- (void)_preferredScrollerStyleDidChange;
- (void)clearChatInfoPopover;
- (void)_imAccountActiveStatusChanged:(id)arg1;
- (void)_moveChatTableViewRowAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)_removeRowsInChatTableViewAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)_insertRowsInChatTableViewAtIndexes:(id)arg1 withAnimation:(unsigned long long)arg2;
- (void)_chatTableViewAnimationCompletionHandler;
- (long long)_mouseIsOnChatTableViewRow;
- (void)_scrollRowToVisible:(long long)arg1;
- (void)_installStatusView;
- (void)_uninstallStatusView;
- (void)_accountStatusViewHeightChanged:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidLoad;
- (void)viewDidLayout;
- (void)popoverDidClose:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)orderedSetController:(id)arg1 didReplaceFilteredContents:(id)arg2 atIndexes:(id)arg3;
- (void)orderedSetController:(id)arg1 didMoveFilteredContents:(id)arg2 atIndexes:(id)arg3 toFilteredContents:(id)arg4 atIndexes:(id)arg5;
- (void)orderedSetController:(id)arg1 didRemoveFilteredContents:(id)arg2 fromIndexes:(id)arg3;
- (void)orderedSetController:(id)arg1 didInsertFilteredContentsAtIndexes:(id)arg2;
- (void)orderedSetControllerSelectionDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_chatTranscriptSearchChatsLoaded:(id)arg1;
- (void)_chatTranscriptSearchChatWillLoad:(id)arg1;
- (void)_chatTranscriptSearchFinished:(id)arg1;
- (BOOL)_chatController:(id)arg1 matchesSearchString:(id)arg2;
- (void)clearSearch;
- (void)searchChats:(id)arg1;
- (void)_showSearchSpinner:(BOOL)arg1;
- (void)_searchContents:(id)arg1;
- (void)_filterConversations:(id)arg1;
@property(readonly, nonatomic) NSMutableSet *searchResults; // @synthesize searchResults=_searchResults;
@property(readonly, getter=isDisplayingSearchResults) BOOL displayingSearchResults; // @dynamic displayingSearchResults;
@property(readonly, nonatomic) NSString *searchString;
- (id)addChatController:(id)arg1 updateSorting:(_Bool)arg2;
- (id)existingChatDisplayControllerForChat:(id)arg1;
- (void)markAsRead:(id)arg1;
- (void)toggleDoNotDisturb:(id)arg1;
- (void)displayDetails:(id)arg1;
- (void)delete:(id)arg1;
- (void)closeTab:(id)arg1;
@property(readonly, nonatomic) SOChatDisplayController *contextChatDisplayController;
- (void)selectPreviousChatDisplayController;
- (void)selectNextChatDisplayController;
- (id)addChatDisplayControllerForNewChatWithHandles:(id)arg1;
- (id)chatDisplayControllersForNewChatsWithHandles:(id)arg1;
- (id)chatDisplayControllersForNewChats;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)_commonUnifiedChatListViewControllerInit;
- (void)_scrollViewContentViewBoundsDidChange:(id)arg1;
@property(readonly, nonatomic) BOOL useTableViewAnimations;
@property double topMargin; // @dynamic topMargin;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MaskedView : NSView
{
    BOOL _masked;
    NSImage *_maskImage;
    CALayer *_maskLayer;
    struct CGRect _maskCenter;
}

@property(retain, nonatomic) CALayer *maskLayer; // @synthesize maskLayer=_maskLayer;
@property(nonatomic, getter=isMasked) BOOL masked; // @synthesize masked=_masked;
@property(nonatomic) struct CGRect maskCenter; // @synthesize maskCenter=_maskCenter;
@property(retain, nonatomic) NSImage *maskImage; // @synthesize maskImage=_maskImage;
- (void)viewDidChangeBackingProperties;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_commonMaskedViewInit;

@end

@interface PlacardView : NSTableCellView
{
    NSFont *_messageFont;
}

@property(retain, nonatomic) NSFont *messageFont; // @synthesize messageFont=_messageFont;
- (void).cxx_destruct;
- (void)_updateTextFieldAttributedStringWithString:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (void)awakeFromNib;
@property(readonly, retain, nonatomic) NSDictionary *messageTextFieldAttributes;
@property(nonatomic) BOOL showsMessage; // @dynamic showsMessage;

@end

@interface OrderedSetController : NSObject
{
    BOOL _avoidsEmptySelection;
    BOOL _loopsSelection;
    BOOL _userEditable;
    int _delegateFlags;
    id <OrderedSetControllerDelegate> _delegate;
    CDUnknownBlockType _comparatorBlock;
    CDUnknownBlockType _filterBlock;
    id _selectedObject;
    NSMutableOrderedSet *_mutableContents;
    _NotificationObserver *_resortNotificationObserver;
    NSMutableOrderedSet *_mutableFilteredContents;
    _NotificationObserver *_refilterNotificationObserver;
}

@property(readonly, retain, nonatomic) _NotificationObserver *refilterNotificationObserver; // @synthesize refilterNotificationObserver=_refilterNotificationObserver;
@property(retain, nonatomic) NSMutableOrderedSet *mutableFilteredContents; // @synthesize mutableFilteredContents=_mutableFilteredContents;
@property(readonly, retain, nonatomic) _NotificationObserver *resortNotificationObserver; // @synthesize resortNotificationObserver=_resortNotificationObserver;
@property(retain, nonatomic) NSMutableOrderedSet *mutableContents; // @synthesize mutableContents=_mutableContents;
@property(nonatomic) int delegateFlags; // @synthesize delegateFlags=_delegateFlags;
@property(readonly, nonatomic, getter=isUserEditable) BOOL userEditable; // @synthesize userEditable=_userEditable;
@property(nonatomic) BOOL loopsSelection; // @synthesize loopsSelection=_loopsSelection;
@property(nonatomic) BOOL avoidsEmptySelection; // @synthesize avoidsEmptySelection=_avoidsEmptySelection;
@property(retain, nonatomic) id selectedObject; // @synthesize selectedObject=_selectedObject;
@property(copy, nonatomic) CDUnknownBlockType filterBlock; // @synthesize filterBlock=_filterBlock;
@property(copy, nonatomic) CDUnknownBlockType comparatorBlock; // @synthesize comparatorBlock=_comparatorBlock;
@property(nonatomic) __weak id <OrderedSetControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (id)init;
- (void)_unregisterObjectForNotifications:(id)arg1;
- (void)_registerObjectForNotifications:(id)arg1;
- (void)selectPrevious;
- (void)selectNext;
@property(readonly, nonatomic) BOOL canSelectPrevious;
@property(readonly, nonatomic) BOOL canSelectNext;
@property(nonatomic) unsigned long long selectionIndex; // @dynamic selectionIndex;
- (unsigned long long)_filteredIndexForContentIndex:(unsigned long long)arg1;
- (void)noteObjectsMayNeedRefiltering:(id)arg1;
- (void)noteObjectMayNeedRefiltering:(id)arg1;
@property(retain, nonatomic) NSSet *refilterNotifications; // @dynamic refilterNotifications;
- (void)_replaceObjectFromFilteredContentsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)_moveObjectFromFilteredContentsAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)_removeMutableFilteredContentsAtIndexes:(id)arg1;
- (void)_removeObjectFromMutableFilteredContentsAtIndex:(unsigned long long)arg1;
- (void)_insertMutableFilteredContents:(id)arg1 atIndexes:(id)arg2;
- (void)_insertObject:(id)arg1 inMutableFilteredContentsAtIndex:(unsigned long long)arg2;
- (void)_transformFilteredContentsInto:(id)arg1;
- (id)objectInFilteredContentsAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long countOfFilteredContents;
@property(readonly, copy, nonatomic) NSOrderedSet *filteredContents;
- (unsigned long long)_adjustedSortedContentsIndex:(unsigned long long)arg1 forObject:(id)arg2;
- (struct _NSRange)sortedContentsIndexRangeForObject:(id)arg1;
- (void)noteObjectMayNeedResorting:(id)arg1;
- (void)sortContentsWithComparatorBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSSet *resortNotifications; // @dynamic resortNotifications;
- (void)replaceContentsObject:(id)arg1 withObject:(id)arg2;
- (void)removeSelectedObjects;
- (void)removeContentsObject:(id)arg1;
- (void)addContentsObject:(id)arg1;
- (void)replaceObjectFromContentsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)moveObjectFromContentsAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeObjectFromContentsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inContentsAtIndex:(unsigned long long)arg2;
- (id)objectInContentsAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long countOfContents;
@property(copy, nonatomic) NSOrderedSet *contents; // @dynamic contents;
- (void)_notifyDelegateOfReplacementOfFilteredContents:(id)arg1 atIndexes:(id)arg2;
- (void)_notifyDelegateOfMoveOfFilteredContents:(id)arg1 atIndexes:(id)arg2 toFilteredContents:(id)arg3 atIndexes:(id)arg4;
- (void)_notifyDelegateOfRemovalOfFilteredContents:(id)arg1 atIndexes:(id)arg2;
- (void)_notifyDelegateOfInsertionOfFilteredContentsAtIndexes:(id)arg1;
- (void)_notifyDelegateOfSelectionChange;

@end

@interface _NotificationObserver : NSObject
{
    NSSet *_notificationNames;
    id _target;
    SEL _action;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(retain, nonatomic) NSSet *notificationNames; // @synthesize notificationNames=_notificationNames;
- (void).cxx_destruct;
- (void)_didReceiveNotification:(id)arg1;
- (void)_unregisterObject:(id)arg1;
- (void)_registerObject:(id)arg1;
- (void)dealloc;

@end

@interface ChatWindowAccountStatusViewController : NSViewController
{
    MyStatusControl *_unifiedStatusControl;
    AccountsScrollView *_accountsScrollView;
    SOExtendedTextField *_unifiedAccountLabel;
    StatusController *_unifiedStatusController;
    AccountsTableController *_accountsTableController;
    NSView *_outerSeparator;
    NSView *_innerSeparator;
    NSLayoutConstraint *_unifiedStatusViewHeightConstraint;
    NSLayoutConstraint *_unifiedStatusLabelTopConstraint;
    NSLayoutConstraint *_unifiedStatusControlTopConstraint;
    NSLayoutConstraint *_statusTableVerticalPaddingConstraint;
    NSLayoutConstraint *_unifiedStatusGemToLabelConstraint;
    NSLayoutConstraint *_unifiedStatusGemToControlConstraint;
    double _animationDuration;
}

+ (id)unifiedLabelAttributes;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(retain, nonatomic) NSLayoutConstraint *unifiedStatusGemToControlConstraint; // @synthesize unifiedStatusGemToControlConstraint=_unifiedStatusGemToControlConstraint;
@property(retain, nonatomic) NSLayoutConstraint *unifiedStatusGemToLabelConstraint; // @synthesize unifiedStatusGemToLabelConstraint=_unifiedStatusGemToLabelConstraint;
@property(retain, nonatomic) NSLayoutConstraint *statusTableVerticalPaddingConstraint; // @synthesize statusTableVerticalPaddingConstraint=_statusTableVerticalPaddingConstraint;
@property(retain, nonatomic) NSLayoutConstraint *unifiedStatusControlTopConstraint; // @synthesize unifiedStatusControlTopConstraint=_unifiedStatusControlTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *unifiedStatusLabelTopConstraint; // @synthesize unifiedStatusLabelTopConstraint=_unifiedStatusLabelTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *unifiedStatusViewHeightConstraint; // @synthesize unifiedStatusViewHeightConstraint=_unifiedStatusViewHeightConstraint;
@property(retain, nonatomic) NSView *innerSeparator; // @synthesize innerSeparator=_innerSeparator;
@property(retain, nonatomic) NSView *outerSeparator; // @synthesize outerSeparator=_outerSeparator;
@property(retain, nonatomic) AccountsTableController *accountsTableController; // @synthesize accountsTableController=_accountsTableController;
@property(retain, nonatomic) StatusController *unifiedStatusController; // @synthesize unifiedStatusController=_unifiedStatusController;
@property(retain, nonatomic) SOExtendedTextField *unifiedAccountLabel; // @synthesize unifiedAccountLabel=_unifiedAccountLabel;
@property(retain, nonatomic) AccountsScrollView *accountsScrollView; // @synthesize accountsScrollView=_accountsScrollView;
@property(retain, nonatomic) MyStatusControl *unifiedStatusControl; // @synthesize unifiedStatusControl=_unifiedStatusControl;
- (void)_updateAccountsTable;
- (void)_updateAccountsTableAfterDelay;
- (void)_updateDisplayLabel;
- (void)_meChanged:(id)arg1;
- (void)_splitviewResized:(id)arg1;
- (void)_accountLoggedOut:(id)arg1;
- (void)_accountLoggedIn:(id)arg1;
- (void)_accountDeactivated:(id)arg1;
- (void)_accountActivated:(id)arg1;
- (void)_accountRemoved:(id)arg1;
- (void)_accountAdded:(id)arg1;
- (BOOL)anythingConnected;
- (id)representedAccounts;
- (void)dealloc;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MessagesEventController : NSObject
{
    NSMutableArray *_handlers;
}

+ (id)actionsController;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3 withChat:(id)arg4 silent:(BOOL)arg5;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2 withObject:(id)arg3;
- (id)performActionsForEvent:(int)arg1 withIMHandle:(id)arg2;
- (void)removeHandler:(id)arg1;
- (void)addHandler:(id)arg1;
- (void)_handleStatusChanged:(id)arg1;
- (void)_transferFinished:(id)arg1;
- (void)_standaloneFileTransferRegistered:(id)arg1;
- (void)_authRequest:(id)arg1;
- (void)_accountLoggedIn:(id)arg1;
- (void)_accountLoggedOut:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface AVPopUpButtonViewController : SOAVPopUpButtonViewController
{
}

- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)buildMenuWithUpdateBlock:(CDUnknownBlockType)arg1;
- (id)initWithAVOptions:(unsigned long long)arg1 image:(id)arg2 title:(id)arg3;
- (void)_avVideoCapabilitiesDidChange:(id)arg1;
- (void)_commonAVPopUpButtonViewControllerInit;
- (void)legacyShareRemoteScreen:(id)arg1;
- (void)legacyShareMyScreen:(id)arg1;
- (void)inviteToLegacyAudioChat:(id)arg1;
- (void)inviteToLegacyVideoChat:(id)arg1;

@end

@interface SOAutoQuit : NSObject
{
}

+ (void)disableWithKey:(id)arg1;
+ (void)enableWithKey:(id)arg1;

@end

@interface InputLineViewController : SOInputLineViewController
{
}

- (void)viewDidLoad;
- (void)resetInputLine;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)inputLineRequestedNextOutgoingMessage:(id)arg1;
- (void)inputLineRequestedPriorOutgoingMessage:(id)arg1;
- (BOOL)inputLine:(id)arg1 didChangeSignificantly:(int)arg2;

@end

@interface ExistingChatDisplayController : SOChatDisplayController
{
    NSTimer *_joiningGroupChatTimer;
    BOOL _suspendInputLineFileTransferAttachmentUpdates;
    BOOL _invitingToGroupChat;
    BOOL _representsSearchResults;
    IMTranscriptChatItem *_displayedSearchResult;
    IMTranscriptChatItem *_browsedChatItem;
    NSAttributedString *_originalInputLineContents;
}

+ (id)chatDisplayControllersForChatController:(id)arg1;
+ (id)bestChatDisplayControllerForChatController:(id)arg1;
@property(retain, nonatomic) NSAttributedString *originalInputLineContents; // @synthesize originalInputLineContents=_originalInputLineContents;
@property(retain, nonatomic) IMTranscriptChatItem *browsedChatItem; // @synthesize browsedChatItem=_browsedChatItem;
@property(nonatomic) BOOL representsSearchResults; // @synthesize representsSearchResults=_representsSearchResults;
@property(nonatomic, getter=isInvitingToGroupChat) BOOL invitingToGroupChat; // @synthesize invitingToGroupChat=_invitingToGroupChat;
@property(retain, nonatomic) IMTranscriptChatItem *displayedSearchResult; // @synthesize displayedSearchResult=_displayedSearchResult;
- (void).cxx_destruct;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)displayPreviousSearchResult;
- (BOOL)displayNextSearchResult;
- (BOOL)displayLastSearchResult;
- (BOOL)displayFirstSearchResult;
- (void)resetHistoryNavigation;
- (BOOL)navigateToNextOutgoingMessage;
- (BOOL)navigateToPriorOutgoingMessage;
- (id)_updateBrowsingHistoryWithItemAtIndex:(unsigned long long)arg1 inChatItems:(id)arg2;
- (id)initWithLegacyMessagesState:(id)arg1;
- (BOOL)canInsertFilesAtURLs:(id)arg1 intoInputLineContentsReturningError:(id *)arg2;
- (void)recipientsDidChange;
- (void)chatDisplayNameDidChange;
- (void)chatRecipientsDidChange;
- (void)chatDidChange;
- (void)chatWillChange:(id)arg1;
- (BOOL)canRemoveRecipientHandles;
- (BOOL)canAddRecipientHandles;
- (id)actionableHandles;
- (id)transcriptSettings;
- (BOOL)canInsertAttachmentsIntoInputLineContents;
- (BOOL)canBeRestored;
- (BOOL)representsNewChat;
- (void)_updatePropertiesForCurrentChat;
- (void)_updateRecipientsFromChat;
- (void)_chatJoinStateDidChange:(id)arg1;
- (void)_recentRecipientsChanged:(id)arg1;
- (void)_chatControllerSummaryDidChange:(id)arg1;
- (void)_chatControllerLastDateDidChange:(id)arg1;
- (void)_clearJoiningGroupChatTimer;
- (void)_clearIsJoiningInvitation:(id)arg1;
- (void)_commonExistingChatDisplayControllerInit;
@property(readonly, nonatomic, getter=isJoiningInvitation) BOOL joiningInvitation; // @dynamic joiningInvitation;
- (id)initWithLegacyIChatData:(id)arg1 legacyIChatWindowState:(id)arg2;
- (id)description;
- (id)initWithChat:(id)arg1;

// Remaining properties
@property(retain, nonatomic) IMAccount *sendingAccount;

@end

@interface ApplicationAlertsHelper : NSObject <SOAlertsHelperAppleScriptDelegate>
{
    SOAlertsHelper *_alerts;
}

+ (id)sharedInstance;
@property(retain) SOAlertsHelper *alerts; // @synthesize alerts=_alerts;
- (void).cxx_destruct;
- (void)performActionScriptForChatGUID:(id)arg1 handleID:(id)arg2 messageText:(id)arg3 accountGUID:(id)arg4 event:(int)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AliasSelectionButtonCell : NSButtonCell
{
}

- (id)attributedTitle;

@end

@interface AliasSelectionButton : NSButton
{
}

+ (Class)cellClass;

@end

@interface AliasSelectionViewController : NSViewController <NSTextFieldDelegate>
{
    NSTextField *_iMessageTitleLabel;
    NSTableView *_aliasTableView;
    NSButton *_backButton;
    NSButton *_doneButton;
    NSTextField *_initialAliasTextField;
    NSProgressIndicator *_verifyInitialAliasProgressIndicator;
    NSTextField *_verifyInitialAlisHelpTextField;
    NSTextField *_appleIDField;
    NSTextField *_youCanBeReachedLabel;
    NSButton *_readReceiptsCheckbox;
    HorizontalFadingLine *_topDividerLine;
    HorizontalFadingLine *_bottomDividerLine;
    SOStaticImageView *_topPocket;
    SOStaticImageView *_bottomPocket;
    NSTextField *_readReceiptBlurbField;
    SOWebLinkButton *_resendEmailButton;
    NSLayoutConstraint *_aliasTableMaxHeightConstraint;
    NSLayoutConstraint *_aliasTableHeightConstraint;
    NSMutableSet *_selectedAliases;
    NSTimer *_resendEmailTimer;
}

@property(retain) NSTimer *resendEmailTimer; // @synthesize resendEmailTimer=_resendEmailTimer;
@property(retain) NSMutableSet *selectedAliases; // @synthesize selectedAliases=_selectedAliases;
@property(retain) NSLayoutConstraint *aliasTableHeightConstraint; // @synthesize aliasTableHeightConstraint=_aliasTableHeightConstraint;
@property(retain) NSLayoutConstraint *aliasTableMaxHeightConstraint; // @synthesize aliasTableMaxHeightConstraint=_aliasTableMaxHeightConstraint;
@property(retain) SOWebLinkButton *resendEmailButton; // @synthesize resendEmailButton=_resendEmailButton;
@property(retain) NSTextField *readReceiptBlurbField; // @synthesize readReceiptBlurbField=_readReceiptBlurbField;
@property(retain) SOStaticImageView *bottomPocket; // @synthesize bottomPocket=_bottomPocket;
@property(retain) SOStaticImageView *topPocket; // @synthesize topPocket=_topPocket;
@property(retain) HorizontalFadingLine *bottomDividerLine; // @synthesize bottomDividerLine=_bottomDividerLine;
@property(retain) HorizontalFadingLine *topDividerLine; // @synthesize topDividerLine=_topDividerLine;
@property(retain) NSButton *readReceiptsCheckbox; // @synthesize readReceiptsCheckbox=_readReceiptsCheckbox;
@property(retain) NSTextField *youCanBeReachedLabel; // @synthesize youCanBeReachedLabel=_youCanBeReachedLabel;
@property(retain) NSTextField *appleIDField; // @synthesize appleIDField=_appleIDField;
@property(retain) NSTextField *verifyInitialAlisHelpTextField; // @synthesize verifyInitialAlisHelpTextField=_verifyInitialAlisHelpTextField;
@property(retain) NSProgressIndicator *verifyInitialAliasProgressIndicator; // @synthesize verifyInitialAliasProgressIndicator=_verifyInitialAliasProgressIndicator;
@property(retain) NSTextField *initialAliasTextField; // @synthesize initialAliasTextField=_initialAliasTextField;
@property(retain) NSButton *doneButton; // @synthesize doneButton=_doneButton;
@property(retain) NSButton *backButton; // @synthesize backButton=_backButton;
@property(retain) NSTableView *aliasTableView; // @synthesize aliasTableView=_aliasTableView;
@property(retain) NSTextField *iMessageTitleLabel; // @synthesize iMessageTitleLabel=_iMessageTitleLabel;
- (void).cxx_destruct;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)controlTextDidChange:(id)arg1;
- (void)accountAliasVerificationStatusChanged:(id)arg1;
- (void)accountAliasCountChanged:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)_updateAliasTable;
- (void)aliasCheck:(id)arg1;
- (void)showAliasValidationErrorForAlias:(id)arg1 errorUserInfo:(id)arg2;
- (void)showAliasMustBeEmailError;
- (void)resendVerificationEmail:(id)arg1;
- (void)showResendEmailButton:(id)arg1;
- (void)showVerificationInstructions;
- (void)back:(id)arg1;
- (void)done:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SetupViewController : NSViewController
{
    NSViewController *_currentSetupController;
    SignInViewController *_signInViewController;
    AliasSelectionViewController *_aliasSelectionViewController;
}

@property(retain, nonatomic) AliasSelectionViewController *aliasSelectionViewController; // @synthesize aliasSelectionViewController=_aliasSelectionViewController;
@property(retain, nonatomic) SignInViewController *signInViewController; // @synthesize signInViewController=_signInViewController;
@property(retain, nonatomic) NSViewController *currentSetupController; // @synthesize currentSetupController=_currentSetupController;
- (void).cxx_destruct;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)viewDidLoad;
- (void)stateChanged:(id)arg1;
- (void)updateCurrentSetupController;
- (void)dealloc;
- (id)init;

@end

@interface SignInViewController : NSViewController <SOCreateAccountViewControllerDelegate>
{
    NSTextField *_iMessageTitleLabel;
    NSTextField *_signInBlurb;
    NSTextField *_usernameField;
    NSTextField *_passwordField;
    NSProgressIndicator *_authenticatingProgressIndicator;
    NSButton *_notNowButton;
    NSButton *_signInButton;
    SOWebLinkButton *_createAccountButton;
    SOWebLinkButton *_forgotPasswordButton;
    SOCreateAccountViewController *_createAccountViewController;
    NSWindow *_createAccountSheet;
}

@property(retain) NSWindow *createAccountSheet; // @synthesize createAccountSheet=_createAccountSheet;
@property(retain) SOCreateAccountViewController *createAccountViewController; // @synthesize createAccountViewController=_createAccountViewController;
@property(retain) SOWebLinkButton *forgotPasswordButton; // @synthesize forgotPasswordButton=_forgotPasswordButton;
@property(retain) SOWebLinkButton *createAccountButton; // @synthesize createAccountButton=_createAccountButton;
@property(retain) NSButton *signInButton; // @synthesize signInButton=_signInButton;
@property(retain) NSButton *notNowButton; // @synthesize notNowButton=_notNowButton;
@property(retain) NSProgressIndicator *authenticatingProgressIndicator; // @synthesize authenticatingProgressIndicator=_authenticatingProgressIndicator;
@property(retain) NSTextField *passwordField; // @synthesize passwordField=_passwordField;
@property(retain) NSTextField *usernameField; // @synthesize usernameField=_usernameField;
@property(retain) NSTextField *signInBlurb; // @synthesize signInBlurb=_signInBlurb;
@property(retain) NSTextField *iMessageTitleLabel; // @synthesize iMessageTitleLabel=_iMessageTitleLabel;
- (void).cxx_destruct;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)fieldChanged:(id)arg1;
- (void)registrationControllerStateChanged:(id)arg1;
- (void)cancelSignIn:(id)arg1;
- (void)updateControls;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)createAccountViewController:(id)arg1 didFinishWithAppleID:(id)arg2 authID:(id)arg3 authToken:(id)arg4;
- (void)createAccountViewController:(id)arg1 didFinishWithAppleID:(id)arg2 password:(id)arg3;
- (void)serverPageController:(id)arg1 didFinishWithError:(id)arg2;
- (void)serverPageControllerDidLoad:(id)arg1;
- (void)forgotPassword:(id)arg1;
- (void)createAppleID:(id)arg1;
- (void)signIn:(id)arg1;
- (void)notNow:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface SetupAliasCellView : NSTableCellView
{
    NSButton *_checkBox;
}

@property __weak NSButton *checkBox; // @synthesize checkBox=_checkBox;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SoundPlayer : NSObject
{
}

+ (BOOL)shouldBeSilentForIMHandle:(id)arg1;
+ (void)stopAllRepeatingSounds;
+ (void)stopRepeatingSoundFromFile:(id)arg1;
+ (void)repeatSoundFromFile:(id)arg1;
+ (void)_repeatSound:(id)arg1;
+ (void)playSoundFromFile:(id)arg1;

@end

@interface ScrollViewWatcher : NSObject <NSScrollViewDelegate, FezUserScrollEventDelegate>
{
    BOOL _isPinnedToBottom;
    BOOL _watchingForBoundsChange;
    BOOL _isWheelEvent;
    NSScrollView *_scrollView;
    FezWebView *_webView;
    double _lastScrollChange;
    double _lastDistanceFromBottom;
}

@property(nonatomic) BOOL isWheelEvent; // @synthesize isWheelEvent=_isWheelEvent;
@property double lastDistanceFromBottom; // @synthesize lastDistanceFromBottom=_lastDistanceFromBottom;
@property BOOL watchingForBoundsChange; // @synthesize watchingForBoundsChange=_watchingForBoundsChange;
@property double lastScrollChange; // @synthesize lastScrollChange=_lastScrollChange;
@property __weak FezWebView *webView; // @synthesize webView=_webView;
@property __weak NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) BOOL isPinnedToBottom; // @synthesize isPinnedToBottom=_isPinnedToBottom;
- (void).cxx_destruct;
- (void)fezWebView:(id)arg1 userPerformedScrollEvent:(id)arg2;
- (void)didEndScrollInScrollView:(id)arg1;
- (void)didScrollInScrollView:(id)arg1;
- (void)didBeginScrollInScrollView:(id)arg1;
- (void)_wheelEvent:(id)arg1;
- (void)_scrollEvent:(id)arg1;
- (void)userPerformedScrollAction;
- (void)_watchForBoundsChange;
- (void)_boundsChanged:(id)arg1;
- (double)_distanceFromBottom;
- (void)dealloc;
- (id)initWithScrollView:(id)arg1 webView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EffectsPickerController : NSObject <FrameListener>
{
    QCCompositionPickerPanel *_picker;
    Texture *_texture;
    BOOL _isRunning;
    double _lastDeliveredFrameTime;
    unsigned long long _maxFPS;
}

+ (BOOL)isVisible;
+ (void)hideEffectsPanel;
+ (void)showEffectsPanel;
- (BOOL)compositionPickerView:(id)arg1 keyDown:(id)arg2;
- (BOOL)compositionPickerView:(id)arg1 performDragOperationOnComposition:(id)arg2 sender:(id)arg3;
- (unsigned long long)compositionPickerView:(id)arg1 draggingEnteredComposition:(id)arg2 sender:(id)arg3;
- (void)compositionPickerView:(id)arg1 willSelectComposition:(id)arg2;
- (void)compositionPickerView:(id)arg1 didLoadComposition:(id)arg2;
- (void)compositionPickerView:(id)arg1 didSelectComposition:(id)arg2;
- (void)_compositionBackdropChanged:(id)arg1;
- (id)_posterFrameForFile:(id)arg1 composition:(id)arg2;
- (id)_setPosterFrameForFile:(id)arg1 composition:(id)arg2;
- (void)windowDidExpose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)frameNotifier:(id)arg1 postedNewFrame:(id)arg2;
- (void)_auxVideoControllerChanged:(id)arg1;
- (void)hideEffectsPanel;
- (void)showEffectsPanel;
- (void)_didEndFullScreen:(id)arg1;
- (BOOL)isVisible;
- (void)stopVideo;
- (void)startVideo;
- (unsigned long long)maxFPS;
- (void)setMaxFPS:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EffectsPickerImageCache : NSObject
{
}

+ (id)_cachePath;
+ (id)sharedInstance;
- (void)removeImageForKey:(id)arg1;
- (void)cleanCacheExceptForKeys:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (id)imageForKey:(id)arg1;
- (BOOL)imageExistsForKey:(id)arg1;

@end

@interface SOHandleMenuController (MessagesAdditions)
- (void)legacyShareRemoteScreen:(id)arg1;
- (void)legacyShareMyScreen:(id)arg1;
- (void)inviteToLegacyVideoChat:(id)arg1;
- (void)inviteToLegacyAudioChat:(id)arg1;
- (void)addBuddy:(id)arg1;
- (void)sendMessage:(id)arg1;
@end

@interface NSPreferences (PrivateOverrides)
- (id)currentModule;
@end

@interface NSArray (FezSearchExtensions)
- (unsigned long long)indexOfObject:(id)arg1 usingComparator:(SEL)arg2;
@end

@interface IMHandle (MessagesAdditions)
- (void)sendIndividualMessage;
- (id)menuForLegacyAVOptions:(unsigned long long)arg1 target:(id)arg2 availableAVOptions:(unsigned long long *)arg3 updateBlock:(CDUnknownBlockType)arg4;
@end

@interface NSString (AddBuddyAdditions)
- (BOOL)_localizedHasPrefix:(id)arg1 caseSensitive:(BOOL)arg2;
@end

@interface NSApplication (Scripting)
- (id)valueInScriptAuthorizationRequestsWithUniqueID:(id)arg1;
- (id)objectInScriptAuthorizationRequestsAtIndex:(unsigned long long)arg1;
- (id)scriptAuthorizationRequests;
- (id)valueInScriptTextChatsWithName:(id)arg1;
- (id)valueInScriptTextChatsWithUniqueID:(id)arg1;
- (id)objectInScriptTextChatsAtIndex:(unsigned long long)arg1;
- (id)scriptTextChats;
- (id)valueInScriptVideoChatsWithUniqueID:(id)arg1;
- (id)objectInScriptVideoChatsAtIndex:(unsigned long long)arg1;
- (id)scriptVideoChats;
- (id)valueInScriptAudioChatsWithUniqueID:(id)arg1;
- (id)objectInScriptAudioChatsAtIndex:(unsigned long long)arg1;
- (id)scriptAudioChats;
- (id)valueInScriptAVChatsWithUniqueID:(id)arg1;
- (id)objectInScriptAVChatsAtIndex:(unsigned long long)arg1;
- (id)scriptAVChats;
- (id)valueInScriptChatsWithName:(id)arg1;
- (id)valueInScriptChatsWithUniqueID:(id)arg1;
- (id)objectInScriptChatsAtIndex:(unsigned long long)arg1;
- (id)scriptChats;
- (id)valueInScriptFileTransfersWithUniqueID:(id)arg1;
- (id)objectInScriptFileTransfersAtIndex:(unsigned long long)arg1;
- (id)scriptFileTransfers;
- (id)valueInServicesWithName:(id)arg1;
- (id)valueInServicesWithUniqueID:(id)arg1;
- (id)services;
- (id)valueInBuddiesWithUniqueID:(id)arg1;
- (id)valueInBuddiesWithName:(id)arg1;
- (id)buddies;
- (id)scriptActiveAVChat;
- (id)myImage;
- (void)setMyImage:(id)arg1;
- (id)myIdleTime;
- (id)myStatusMessage;
- (void)setMyStatusMessage:(id)arg1;
- (id)myStatus;
- (void)setMyStatus:(id)arg1;
- (void)inviteScriptCommand:(id)arg1;
- (void)storeRecentPictureCommand:(id)arg1;
- (void)showChatChooserCommand:(id)arg1;
- (void)logoutScriptCommand:(id)arg1;
- (void)loginScriptCommand:(id)arg1;
@end

@interface IMHandle (Scripting)
- (void)inviteScriptCommand:(id)arg1;
- (id)objectSpecifier;
- (id)scriptService;
- (id)scriptFullName;
- (id)scriptLastName;
- (id)scriptFirstName;
- (id)scriptGroups;
- (id)scriptCaps;
- (id)scriptImage;
- (id)scriptStatus;
- (id)scriptStatusMessage;
- (id)scriptIdleTime;
- (id)scriptName;
- (id)scriptAccountLegacyName;
- (id)scriptAccountName;
- (id)uniqueId;
@end

@interface NSUserAppleScriptTask (MessagesAdditions)
+ (void)executeHandlerWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 inScriptAtPath:(id)arg3 withArguments:(id)arg4 forEvent:(int)arg5 forIMHandle:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
+ (id)_newScriptTaskAtPath:(id)arg1 error:(id *)arg2;
+ (void)taskCompleted:(id)arg1;
+ (void)taskStarted:(id)arg1;
- (void)executeHandlerWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 andArguments:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
@end

@interface NSUserDefaults (ApplicationActionsControllerAdditions)
- (id)soundNameForEvent:(int)arg1;
@end

@interface NSView (CollapseView_Additions)
- (void)_setAutoresizingVerticalMask:(long long)arg1;
@end

@interface NSObject (FezExtendedTableViewDataSource)
- (BOOL)tableView:(id)arg1 shouldShowTooltipForRow:(long long)arg2;
- (id)tableView:(id)arg1 tooltipForRow:(long long)arg2;
- (id)tableView:(id)arg1 cellTipForRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldDrawWhenMovingFrom:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (void)tableViewTrackingChanged:(id)arg1;
- (void)tableView:(id)arg1 dragStarted:(id)arg2 originPoint:(struct CGPoint)arg3;
- (BOOL)tableView:(id)arg1 shouldStartDraggingForGroupRow:(long long)arg2;
- (void)tableView:(id)arg1 mouseMoved:(id)arg2;
- (void)tableView:(id)arg1 mouseEntered:(id)arg2;
- (void)tableView:(id)arg1 mouseExited:(id)arg2;
- (void)tableView:(id)arg1 willReturnMenu:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 menuForGroupRow:(long long)arg2;
- (void)tableView:(id)arg1 groupRowClicked:(long long)arg2;
- (id)tableView:(id)arg1 numberStringForGroupRow:(long long)arg2 ignoreCollapsed:(BOOL)arg3;
- (BOOL)tableView:(id)arg1 prepareTooltip:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 titleForGroupRow:(long long)arg2;
- (unsigned long long)tableView:(id)arg1 groupRowGreaterThanIndex:(unsigned long long)arg2;
- (BOOL)tableView:(id)arg1 groupRowAtIndex:(long long)arg2;
- (void)tableView:(id)arg1 performDragOperation:(unsigned long long)arg2 withPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 deleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 canDeleteRows:(id)arg2;
- (BOOL)tableView:(id)arg1 pasteFromPasteboard:(id)arg2;
- (BOOL)tableView:(id)arg1 canPasteFromPasteboard:(id)arg2;
@end

@interface VCChannelNegotiation (AVChatControllerAdditions)
- (int)ardRole;
@end

@interface NSWindowGraphicsContext (CGLayerContext)
- (id)initWithCoreGraphicsContext:(struct CGContext *)arg1;
@end

@interface IMAccount (ChatRoomPreferencesAdditions)
- (void)setObject:(id)arg1 forKey:(id)arg2 forChatRoom:(id)arg3;
- (id)objectForKey:(id)arg1 forChatRoom:(id)arg2;
- (void)setChatRoomsPrefsDictionary:(id)arg1;
- (id)chatRoomsPrefsDictionary;
@end

@interface IMAccountController (VisibleAccountList)
- (id)accountForDisplayAtIndex:(unsigned long long)arg1;
- (id)accountsForDisplay;
- (long long)numberOfAccountsForDisplay;
@end

@interface IMAccountController (AccountCleanup)
- (void)removePreferencesForAccount:(id)arg1;
@end

@interface IMAccountController (NSTableViewDelegateMethods)
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@interface IMAccountController (BuddyListDisplayAdditions)
- (void)unloadBuddylistForAccount:(id)arg1;
- (id)loadBuddyListForAccount:(id)arg1 showWindow:(BOOL)arg2;
- (id)loadBuddyListForAccount:(id)arg1;
- (BOOL)isBuddyListLoadedForAccount:(id)arg1;
- (void)_activeAccountChanged:(id)arg1;
@end

@interface IMAccountController (NSTableViewDataSourceMethods)
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
@end

@interface NSMenu (NSMenuItemReplacementAdditions)
- (void)replaceItem:(id)arg1 withItem:(id)arg2;
@end

@interface NSWindow (iChatFrameSavingAdditions)
- (void)restoreWindowPositionUsingName:(id)arg1 restoreWidth:(BOOL)arg2 restoreHeight:(BOOL)arg3 defaultHeight:(int)arg4;
- (BOOL)hasSavedPositionUsingName:(id)arg1;
- (void)saveWindowPositionUsingName:(id)arg1 saveWidth:(BOOL)arg2 saveHeight:(BOOL)arg3;
@end

@interface NSWindow (FezAdditions)
+ (id)_snapshotView:(id)arg1;
- (BOOL)screenHasDock;
- (BOOL)screenHasMenubar;
- (void)fixMaxWidth:(BOOL)arg1 height:(BOOL)arg2;
- (float)minFrameWidthWithTitle:(id)arg1;
- (void)dragWithEvent:(id)arg1;
- (void)morphToFrame:(struct CGRect)arg1;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2 display:(BOOL)arg3;
- (void)setContentRelativeFrame:(struct CGRect)arg1 constrainedToScreen:(id)arg2 display:(BOOL)arg3 animate:(BOOL)arg4;
- (struct CGRect)frame:(struct CGRect)arg1 constrainedToScreen:(id)arg2;
- (void)positionRelativeToWindow:(id)arg1 gapLeft:(float)arg2 right:(float)arg3 top:(float)arg4 bottom:(float)arg5;
- (struct CGPoint)_positionNextToWindow:(id)arg1 gapLeft:(float)arg2 right:(float)arg3 top:(float)arg4 bottom:(float)arg5;
- (void)centerOnFirstScreen;
- (void)bottomAlignCenterOnFirstScreen;
- (void)bottomLeftAlignOnFirstScreen;
@end

@interface NSWindow (HiDPIAdditions)
- (void)makeUnresizable;
- (void)setWindowBackgroundToDark;
- (void)setWindowBackgroundToLight;
- (void)ensureEntirelyOnScreen;
- (void)setContentRelativeMaxSize:(struct CGSize)arg1;
- (void)setContentRelativeMinSize:(struct CGSize)arg1;
- (void)setContentRelativeFrame:(struct CGRect)arg1;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2 srcFrame:(struct CGRect)arg3;
- (void)setContentRelativeFrame:(struct CGRect)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (struct CGSize)contentRelativeMaxSize;
- (struct CGSize)contentRelativeMinSize;
- (struct CGRect)contentRelativeFrame;
- (void)outsetContentRelativeLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4 display:(BOOL)arg5 animate:(BOOL)arg6;
- (void)outsetContentRelativeLeft:(float)arg1 right:(float)arg2 top:(float)arg3 bottom:(float)arg4;
- (void)offsetContentRelativeOrigin:(struct CGSize)arg1;
- (void)positionRelativeToWindow:(id)arg1 offset:(struct CGSize)arg2;
@end

@interface IMChat (PersistentChatAdditions)
+ (id)legacyPersistentIDForChat:(id)arg1;
@end

@interface NSMutableAttributedString (FezCharAdditions)
- (void)setMaxCharacterWidth:(int)arg1;
@end

@interface WebPluginDatabase (iChatAdditions)
+ (id)_defaultPlugInPaths;
@end

@interface NSMenu (MessagesKitAdditions)
- (void)_selectMenuStatus:(id)arg1;
- (void)_sendMessageToBuddy:(id)arg1;
- (void)_openMessages:(id)arg1;
- (void)_newMessage:(id)arg1;
- (void)_openRecentChat:(id)arg1;
- (void)appendOpenMessages;
- (void)appendNewMessage;
- (void)appendChatList;
- (void)appendBonjourBuddiesWithSeparator:(BOOL)arg1;
- (void)appendBonjourBuddies;
- (void)_appendMenuBuddiesAsSubmenu:(BOOL)arg1 toMenuItem:(id)arg2;
- (void)appendMenuBuddies;
- (void)appendMenuBuddiesAsSubmenuWithThreshhold:(unsigned long long)arg1;
- (void)appendBuddiesTitle;
- (void)_updateMenuSelection:(id)arg1;
- (void)_appendAccountStatusAsSubmenu:(BOOL)arg1 toMenuItem:(id)arg2;
- (void)appendAccountStatus;
- (void)appendStatusTitle;
- (void)appendStatusTitleWithStatusSubmenu;
- (BOOL)appendUnreadChats;
- (void)appendSeparator;
- (void)endMessagesMenu;
- (void)beginMessagesMenu;
@end

@interface NSData (Scripting)
+ (id)scriptingTiffPictureWithDescriptor:(id)arg1;
+ (id)scriptingImageWithDescriptor:(id)arg1;
- (id)scriptingTiffPictureDescriptor;
- (id)scriptingImageDescriptor;
@end

@interface IMAccountController (AccountScripting)
- (id)accountForDescription:(id)arg1;
- (id)scriptingAccounts;
@end

@interface IMFileTransfer (ScriptingAdditions)
- (id)objectSpecifier;
- (void)declineTransferCommand:(id)arg1;
- (void)acceptTransferCommand:(id)arg1;
- (id)scriptStarted;
- (id)scriptTransferStatus;
- (id)scriptSecure;
- (id)scriptTransferProgress;
- (id)scriptTransferSize;
- (id)scriptParticipant;
- (id)scriptFilePath;
- (id)scriptService;
- (id)scriptDirection;
- (id)scriptName;
- (id)scriptID;
@end

@interface IMFileTransferCenter (Scripting)
- (id)allTransfers;
@end

@interface AVChat (Scripting)
- (void)takeVideoSnapshotScriptCommand:(id)arg1;
- (void)declineInvitationScriptCommand:(id)arg1;
- (void)acceptInvitationScriptCommand:(id)arg1;
- (void)stopRecordingScriptCommand:(id)arg1;
- (void)requestRecordingScriptCommand:(id)arg1;
- (void)stopChatScriptCommand:(id)arg1;
- (id)objectSpecifier;
- (id)scriptAVConnectionState;
- (id)scriptActive;
- (id)scriptSecure;
- (id)scriptInvitation;
- (id)scriptUpdated;
- (id)scriptStarted;
- (void)setScriptMuted:(id)arg1;
- (id)scriptMuted;
- (void)setScriptPaused:(id)arg1;
- (id)scriptPaused;
- (void)setScriptShowLocalVideo:(id)arg1;
- (id)scriptShowLocalVideo;
- (void)setScriptShowFullScreen:(id)arg1;
- (id)scriptShowFullScreen;
- (id)scriptParticipants;
- (id)scriptScreenSharingRole;
- (id)scriptAVType;
- (id)scriptService;
- (id)scriptID;
@end

@interface NSWorkspace (VideoConferencing)
+ (BOOL)isDockAutoHidden;
@end

@interface NSObject (MainThreadKVO)
- (void)performObserveValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPathOnMainThread:(id)arg1;
- (void)observeValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@interface NSView (QCRendererAdditions)
- (struct CGPoint)normalizedMouseLocationWithOptionalEvent:(id)arg1;
@end

@interface NSOpenGLContext (QCSharedContext)
+ (BOOL)supportsBackdrops;
+ (BOOL)supportsAcceleratedEffects;
+ (BOOL)isCoreImageAccelerated;
+ (id)sharedContext;
+ (id)_sharedQCCGLContext;
@end

@interface NSOpenGLContext (VirtualScreenNotifications)
+ (int)currentPreferedVirtualScreen;
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
@end

@interface NSObject (VirtualScreenNotifications)
- (void)handleVirtualScreenChangedNotificiation:(int)arg1;
- (void)_handleVirtualScreenChangedNotificiations:(id)arg1;
- (void)postVirtualScreenChangedNotificiation:(int)arg1;
- (void)unregisterForVirtualScreenChangedNotificiations;
- (void)registerForVirtualScreenChangedNotificiations;
@end

@interface NSRecursiveLock (PrivateAdditions)
- (void)unlockFromLine:(int)arg1;
- (BOOL)lockBeforeTimeout:(double)arg1 fromLine:(int)arg2;
@end

@interface NSDictionary (CompositionAdditions)
@property(readonly) BOOL allowDragAndDrop;
@property(readonly) NSString *backdropsBackgroundPath;
@property(readonly) NSString *backdropsForegroundPath;
@property(readonly) BOOL backdropsEnabled;
@property(readonly) BOOL wantsSlider;
@property(readonly) NSDictionary *attributes;
@property(readonly) NSString *localizedName;
@property(readonly) NSString *identifier;
@end

@interface QCComposition (VideoPipelineAdditions)
- (id)asDictionary;
@end

@interface NSTextField (FindPanelAdditions)
- (BOOL)isFirstResponder;
@end

@interface NSOpenGLPixelFormat (FezAdditions)
+ (id)compatiblePixelFormatIncludingAttributes:(int *)arg1 forContext:(id)arg2;
@end

@interface NSOpenGLContext (FezAdditions)
- (id)initWithCompatibleFormatIncluding:(int *)arg1 shareContext:(id)arg2;
@end

@interface NSView (FezUtilAdditions)
- (void)relayoutSubviewsForRTLIfNecessaryRecursive;
- (void)relayoutSubviewsForRTLIfNecessary;
- (id)snapshotOfRect:(struct CGRect)arg1 forceFullDraw:(BOOL)arg2;
- (BOOL)isOrContainsFirstResponder;
- (struct CGPoint)mouseLocationOutsideOfEventStream;
- (void)setFocusRingNeedsDisplay;
- (void)setMaxX:(float)arg1;
- (BOOL)mouseInView;
- (BOOL)mouseInRect:(struct CGRect)arg1;
- (struct CGPoint)mouseLocationInView;
@end

@interface NSTextField (iChatAdditions)
- (BOOL)textIsNonEmpty;
- (float)autosizeWithStringValue:(id)arg1 resizeWindow:(BOOL)arg2 expandOnly:(BOOL)arg3;
@end

@interface NSScreen (FezExtensions)
+ (id)screenForRect:(struct CGRect)arg1;
- (unsigned int)directDisplayID;
@end

@interface NSString (FezUtilAdditions)
- (BOOL)iChatIsPhone;
- (id)commaSeparatedComponents;
@end

@interface NSLayoutManager (FezUtilAdditions)
- (void)forceLayout;
@end

@interface IMHandle (IMHandle_Additions)
+ (id)invisibleStatusImage;
- (id)URLForIM;
@end

@interface NSArray (IMHandle_Additions)
- (id)URLForIMOrChatRoom;
- (id)URLForChatRoom;
@end

@interface NSMutableAttributedString (FezCopyAdditions)
- (void)_extractFileTransferNamesOnly;
- (void)_removeColorAttributes;
@end

@interface IMMessagePartChatItem (FezCopyAdditions)
- (BOOL)_isSafeToCopy;
- (id)_dictRepresentation;
- (id)_dictRepresentationGivenStartOffset:(unsigned long long)arg1 andEndOffset:(unsigned long long)arg2;
- (struct _NSRange)_rangeforString:(id)arg1 givenStartOffset:(unsigned long long)arg2 withEndOffset:(unsigned long long)arg3;
@end

@interface DOMNode (FezCopyAdditions)
- (unsigned long long)_messageLength;
@end

@interface WebHTMLView (FezWebViewAdditions)
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
@end

@interface NSScreen (CaptureAdditions)
+ (void)uncaptureAllScreens;
+ (void)captureAllScreens;
+ (id)screenWithMenu;
- (BOOL)uncapture;
- (BOOL)capture;
- (unsigned int)deviceID;
@end

@interface IMAttachment (QLPreviewItem) <QLPreviewItem>
@property(readonly) NSURL *previewItemURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;
@end

@interface NSTextField (AutoResize)
- (double)autosizeHeight;
@end

@interface NSDictionary (TheaterAppURL)
- (long long)compareAppNames:(id)arg1;
@end

@interface NSView (TemplateExtensions)
- (void)applyTemplateSubviews;
@end

@interface AVChat (AuxVideoFeature)
- (void)readyForAuxVideo;
- (BOOL)isAuxVideoRunningOrUnderNegotiation;
- (void)auxVideoEndedForPersonWithID:(id)arg1;
- (void)auxVideoBeganForPersonWithID:(id)arg1;
- (void)conferencePersonWithID:(id)arg1 approvedAuxVideo:(BOOL)arg2;
- (BOOL)shouldConferenceAcceptAuxVideoFromUser:(id)arg1;
- (BOOL)allParticipantsUsingICE;
@end

@interface AVChatParticipant (ARDFeature)
- (id)encryptionKey;
- (id)remoteIPPort;
- (int)connectedUDPSocket;
- (BOOL)createVCChannelRequestWithInfo:(id)arg1 isUpgrade:(BOOL)arg2;
- (void)handleVCChannelMessage:(unsigned int)arg1 userInfo:(id)arg2;
- (void)authorizeARDFileTransfer:(id)arg1;
- (BOOL)_checkARDFileTransferIndex:(unsigned int)arg1;
- (void)sendARDFileTransferAuthorizationSource:(id)arg1 destination:(id)arg2 toServer:(BOOL)arg3;
- (void)_doARDFileTransferSource:(id)arg1 destination:(id)arg2 send:(BOOL)arg3;
- (id)ARDChannelNegotiation;
- (void)closeARDChannel;
- (id)outgoingARDUpgradeRequest;
- (void)ARDChannelDidConnect:(id)arg1;
- (void)setARDAuthorized;
- (void)_connectClientIfPossible;
- (void)requestARDUpgrade:(int)arg1;
- (void)authorizeARDClient;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (CDStruct_378d7ba3 *)_newConnectionAuthorization;
@end

@interface NSSet (FastIMHandleCompareAdditions)
- (BOOL)fastIsEqualToPointerCompareSet:(id)arg1;
@end

@interface NSView (FezUITemplates)
- (void)setBasicViewProperties;
@end

@interface NSTextFieldCell (FezUITemplates)
- (void)setBasicTextFieldCellProperties;
@end

@interface NSButtonCell (FezUITemplates)
- (void)setBasicTexturedRoundedButtonCellProperties;
@end

@interface SOStaticImageView (ScrollPocketView)
+ (double)defaultFadeWidth;
+ (double)defaultEndAlpha;
+ (double)defaultStartAlpha;
+ (id)defaultColor;
- (void)setupAsScrollPocketViewWithDirection:(int)arg1 color:(id)arg2 startAlpha:(double)arg3 endAlpha:(double)arg4 fadeoutWidth:(double)arg5;
- (void)setupAsScrollPocketViewWithDirection:(int)arg1;
@end

@interface SOChatDisplayController (MessagesAdditions)
- (BOOL)validateMenuItem:(id)arg1;
- (void)searchRecipientsWithSpotlight;
- (void)requestValidationFromRecipients;
- (void)showRecipientsBuddyProfile;
- (void)showRecipientsBuddyInfo;
- (void)showRecipientsInBuddyList;
- (void)addRecipientsToAddressBook;
- (void)showContactCardWithRect:(struct CGRect)arg1 inWindow:(id)arg2;
- (void)showRecipientsInAddressBook;
- (void)blockRecipientsAttachingWarningSheetToWindow:(id)arg1;
- (void)offerScreenSharingToRecipients;
- (void)requestScreenSharingFromRecipients;
- (void)inviteRecipientsToAudioChat;
- (void)inviteRecipientsToVideoChat;
- (void)addRecipientToBuddyList;
- (BOOL)displayPreviousSearchResult;
- (BOOL)displayNextSearchResult;
- (BOOL)displayLastSearchResult;
- (BOOL)displayFirstSearchResult;
- (void)resetHistoryNavigation;
- (BOOL)navigateToNextOutgoingMessage;
- (BOOL)navigateToPriorOutgoingMessage;
- (id)initWithLegacyMessagesState:(id)arg1;
@property(readonly, nonatomic) IMTranscriptChatItem *displayedSearchResult; // @dynamic displayedSearchResult;
@property(nonatomic) BOOL representsSearchResults; // @dynamic representsSearchResults;
@property(readonly, nonatomic) ChatController *chatController; // @dynamic chatController;
@end

@interface SONewChatDisplayController (MessagesAdditions)
- (id)initWithLegacyMessagesState:(id)arg1;
- (id)initWithLegacyIChatData:(id)arg1;
@end

@interface NSUserDefaults (BackdropsPrefs)
- (id)backdropsBackgroundPathForKey:(id)arg1;
- (void)setBackdropsBackgroundPath:(id)arg1 forKey:(id)arg2;
@end

